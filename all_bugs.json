[
    {
        "project": "apache_derby", 
        "bug_id": "1029", 
        "order_reported": 970, 
        "order_fixed": 1548, 
        "elements": [
            "java.drda.org.apache.derby.impl.drda.FdocaConstants.mapJdbcTypeToDrdaType(int,boolean,int[])", 
            "java.drda.org.apache.derby.impl.drda.SQLTypes.mapJdbcTypeToDB2SqlType(int,boolean,int[])", 
            "java.client.org.apache.derby.client.am.ColumnMetaData.getColumnTypeName(int)", 
            "java.client.org.apache.derby.client.am.ColumnMetaData.getColumnDisplaySize(int)", 
            "java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeSQLDAGRP(ResultSetMetaData,EngineParameterMetaData,int,boolean)", 
            "java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeSQLDTAGRP(DRDAStatement,ResultSetMetaData,EngineParameterMetaData,int,int,boolean)", 
            "java.drda.org.apache.derby.impl.drda.DRDAConnThread.makeInt(Boolean)", 
            "java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeFdocaVal(int,Object,int,int,int,boolean,DRDAStatement)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.negateBooleanFunc(Boolean)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.BooleanTest()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.suite()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.main(String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.createSchema(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.testBoolean()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCatalogs(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.populateTables(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifySort(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castFromBoolean(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castToBoolean(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.implicitCasts(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyImplicitCast(Connection,String,int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCasts(ResultSet,int,int,Boolean)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInSelect(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInValuesClause(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.setParameter(PreparedStatement,int,TypeDescriptor,Object)", 
            "java.client.org.apache.derby.client.am.SignedBinary.getBoolean(byte[],int)", 
            "java.client.org.apache.derby.client.am.DatabaseMetaData.getMetaDataInfoBoolean(int)", 
            "java.drda.org.apache.derby.impl.drda.AppRequester.supportsBoolean()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "1180", 
        "order_reported": 1156, 
        "order_fixed": 1293, 
        "elements": [
            "java.client.org.apache.derby.client.ClientPooledConnection.createLogicalConnection()", 
            "java.client.org.apache.derby.client.am.LogicalConnection.checkForNullPhysicalConnection()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testGetBinaryStringLongNotImplemented()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.suite()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.tearDown()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.BlobTest(String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.setUp()", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.createBlob()", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.createClob()", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.createNClob()", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.createSQLXML()", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.getClientInfo()", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.getClientInfo(String)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.isValid(int)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.isWrapperFor(Class)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.unwrap(Class)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "1214", 
        "order_reported": 1203, 
        "order_fixed": 1366, 
        "elements": [
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.isWrapperFor(Class)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.unwrap(java.lang.Class)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.getTypeMap()", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.getJDBCLevel()", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[])", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl)", 
            "java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.harness.RunList.setTopSuiteProperties()", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML)", 
            "java.testing.org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnection()", 
            "java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.getProperties(Properties)", 
            "java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[])", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createNClob()", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createSQLXML()", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "1246", 
        "order_reported": 1255, 
        "order_fixed": 1265, 
        "elements": [
            "java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int)", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String)", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties)", 
            "java.client.org.apache.derby.client.ClientXAConnection40.addStatementEventListener(StatementEventListener)", 
            "java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int)", 
            "java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource)", 
            "java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String)", 
            "java.client.org.apache.derby.client.ClientXAConnection40.removeStatementEventListener(StatementEventListener)", 
            "java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)", 
            "java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)", 
            "java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int)", 
            "java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter)", 
            "java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource)", 
            "java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource)", 
            "java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource)", 
            "java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String)", 
            "java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)", 
            "java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)", 
            "java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.getQueryObjectGenerator()", 
            "java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String)", 
            "java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int)", 
            "java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String)", 
            "java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)", 
            "java.client.org.apache.derby.jdbc.ClientXADataSource40.getQueryObjectGenerator()", 
            "java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource)", 
            "java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int)", 
            "java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)", 
            "java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource)", 
            "java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)", 
            "java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)", 
            "java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource)", 
            "java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean)", 
            "java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)", 
            "java.tools.org.apache.derby.impl.tools.ij.xaHelper.getXADataSource()", 
            "java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "1380", 
        "order_reported": 1414, 
        "order_fixed": 1415, 
        "elements": [
            "java.client.org.apache.derby.client.am.FailedProperties40.FailedProperties40(Properties)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(Properties)", 
            "java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[])", 
            "java.client.org.apache.derby.client.am.FailedProperties40.getProperties()", 
            "java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource)", 
            "java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String)", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[])", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testSetClientInfoProperties()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testCreateArrayNotImplemented()", 
            "java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testSetClientInfoString()", 
            "java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(Properties)", 
            "java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String)", 
            "java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestQueryObject.testConnectionQuery(Connection)", 
            "java.engine.org.apache.derby.iapi.jdbc.FailedProperties40.FailedProperties40(Properties)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[])", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(Properties)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])", 
            "java.engine.org.apache.derby.iapi.jdbc.FailedProperties40.getProperties()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "1519", 
        "order_reported": 1519, 
        "order_fixed": 3116, 
        "elements": [
            "java.client.org.apache.derby.client.am.Clob.Clob(Agent,java.io.InputStream,String,int)", 
            "java.client.org.apache.derby.client.am.Cursor.getAsciiStream(int)", 
            "java.client.org.apache.derby.client.am.PreparedStatement.setAsciiStream(int,InputStream)", 
            "java.client.org.apache.derby.client.am.PreparedStatement.setAsciiStream(int,java.io.InputStream,long)", 
            "java.client.org.apache.derby.client.am.ResultSet.updateAsciiStream(int,InputStream)", 
            "java.client.org.apache.derby.client.am.ResultSet.updateAsciiStream(int,java.io.InputStream,int)", 
            "java.client.org.apache.derby.client.am.Clob.convertFromAsciiToCharacterStream()", 
            "java.client.org.apache.derby.client.am.Clob.Clob(Agent,java.io.InputStream,String)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "210", 
        "order_reported": 305, 
        "order_fixed": 1041, 
        "elements": [
            "java.client.org.apache.derby.client.am.Connection.writeCloseStatements()", 
            "java.client.org.apache.derby.client.am.Connection.readCloseStatements()", 
            "java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int)", 
            "java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[])", 
            "java.client.org.apache.derby.client.am.ResultSet.listenToUnitOfWork()", 
            "java.client.org.apache.derby.client.am.Statement.resetCursorNameAndRemoveFromWhereCurrentOfMappings()", 
            "java.client.org.apache.derby.client.am.Connection.prepareDynamicCatalogQuery(String)", 
            "java.client.org.apache.derby.client.am.Connection.markStatementsClosed()", 
            "java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.completeLocalRollback()", 
            "java.client.org.apache.derby.client.am.PreparedStatement.listenToUnitOfWork()", 
            "java.client.org.apache.derby.client.am.Connection.completeLocalCommit()", 
            "java.client.org.apache.derby.client.am.Lob.listenToUnitOfWork()", 
            "java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "2378", 
        "order_reported": 2524, 
        "order_fixed": 2561, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.getStartupArgs(boolean)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.serverBootedOK()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.authenticationFailure()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "239", 
        "order_reported": 333, 
        "order_fixed": 727, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int)", 
            "java.engine.org.apache.derby.impl.db.BasicDatabase.backup(String,boolean)", 
            "java.engine.org.apache.derby.impl.db.BasicDatabase.backupAndEnableLogArchiveMode(String,boolean,boolean)", 
            "java.engine.org.apache.derby.catalog.SystemProcedures.SYSCS_BACKUP_DATABASE(String)", 
            "java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File)", 
            "java.engine.org.apache.derby.impl.store.raw.RawStore.backupAndEnableLogArchiveMode(String,boolean,boolean)", 
            "java.engine.org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(File,boolean)", 
            "java.engine.org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(String,boolean,boolean)", 
            "java.engine.org.apache.derby.impl.store.raw.RawStore.backup(String,boolean)", 
            "java.engine.org.apache.derby.impl.store.raw.xact.XactFactory.stopBackupBlockingOperations(boolean)", 
            "java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(String,boolean,boolean)", 
            "java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backup(String,boolean)", 
            "java.engine.org.apache.derby.iapi.store.access.AccessFactory.backup(String,boolean)", 
            "java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(File,boolean)", 
            "java.engine.org.apache.derby.database.Database.backup(String)", 
            "java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(File,boolean)", 
            "java.engine.org.apache.derby.database.Database.backupAndEnableLogArchiveMode(File,boolean)", 
            "java.engine.org.apache.derby.database.Database.backupAndEnableLogArchiveMode(String,boolean)", 
            "java.engine.org.apache.derby.catalog.SystemProcedures.SYSCS_DISABLE_LOG_ARCHIVE_MODE(int)", 
            "java.engine.org.apache.derby.catalog.SystemProcedures.SYSCS_BACKUP_DATABASE_AND_ENABLE_LOG_ARCHIVE_MODE(String,int)", 
            "java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(String,boolean,boolean)", 
            "java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backup(String,boolean)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3192", 
        "order_reported": 3631, 
        "order_fixed": 4045, 
        "elements": [
            "java.client.org.apache.derby.client.net.NetStatementReply.parseOPNQRYreply(StatementCallbackInterface)", 
            "java.drda.org.apache.derby.impl.drda.DRDAConnThread.processCommands()", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedConnection.getCurrentSchemaName()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.toString()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getSchema()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getIso()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.isModified()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.isSchemaModified()", 
            "java.client.org.apache.derby.client.net.NetDatabaseMetaData.serverSupportsSessionDataCaching()", 
            "java.client.org.apache.derby.client.net.NetDatabaseMetaData.computeFeatureSet_()", 
            "java.client.org.apache.derby.client.net.NetConnectionReply.parsePBSD()", 
            "java.client.org.apache.derby.client.net.NetConnectionReply.parseSYNCCTLreply(ConnectionCallbackInterface)", 
            "java.client.org.apache.derby.client.am.Connection.getTransactionIsolation()", 
            "java.client.org.apache.derby.client.am.Connection.getCurrentSchemaName()", 
            "java.client.org.apache.derby.client.am.Connection.setTransactionIsolation(int)", 
            "java.client.org.apache.derby.client.am.Connection.supportsSessionDataCaching()", 
            "java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,java.util.Properties)", 
            "java.drda.org.apache.derby.impl.drda.AppRequester.supportsSessionDataCaching()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.setUnmodified()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.isIsoModified()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.PiggyBackedSessionData(EngineConnection)", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.refresh()", 
            "java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection.getCurrentSchemaName()", 
            "java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.completePiggyBackIsolation(int)", 
            "java.client.org.apache.derby.client.am.Connection.completePiggyBackSchema(String)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3266", 
        "order_reported": 3766, 
        "order_fixed": 4620, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.compile.CompilerContextImpl.addRequiredTablePriv(TableDescriptor)", 
            "java.engine.org.apache.derby.impl.sql.compile.DropTableNode.makeConstantAction()", 
            "java.engine.org.apache.derby.impl.sql.compile.CreateTableNode.bindStatement()", 
            "java.engine.org.apache.derby.impl.sql.compile.CreateTableNode.referencesSessionSchema()", 
            "java.engine.org.apache.derby.impl.sql.compile.CreateTableNode.makeConstantAction()", 
            "java.engine.org.apache.derby.impl.sql.compile.CompilerContextImpl.addRequiredColumnPriv(ColumnDescriptor)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3329", 
        "order_reported": 3837, 
        "order_fixed": 4054, 
        "elements": [
            "java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int)", 
            "java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)", 
            "java.client.org.apache.derby.client.ClientPooledConnection.createLogicalConnection()", 
            "java.client.org.apache.derby.client.ClientPooledConnection.isStatementPoolingEnabled()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3330", 
        "order_reported": 3840, 
        "order_fixed": 4100, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.PrimaryKeyTest.testKeyConstraintsImpliesNotNull()", 
            "java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor)", 
            "java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary)", 
            "java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary)", 
            "java.engine.org.apache.derby.impl.store.access.btree.index.B2I_10_3.getTypeFormatId()", 
            "java.engine.org.apache.derby.impl.store.access.btree.index.B2I_10_3.writeExternal(ObjectOutput)", 
            "java.engine.org.apache.derby.catalog.IndexDescriptor.isUniqueWithDuplicateNulls()", 
            "java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties)", 
            "java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int)", 
            "java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int)", 
            "java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.isUniqueWithDuplicateNulls()", 
            "java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.toString()", 
            "java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[])", 
            "java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation)", 
            "java.engine.org.apache.derby.impl.store.access.btree.BTree.setUniqueWithDuplicateNulls(boolean)", 
            "java.engine.org.apache.derby.impl.store.access.btree.BTree.isUniqueWithDuplicateNulls()", 
            "java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[])", 
            "java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.writeExternal(ObjectOutput)", 
            "java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.readExternal(ObjectInput)", 
            "java.engine.org.apache.derby.impl.store.access.btree.BTreeController.doIns(DataValueDescriptor[])", 
            "java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.equals(Object)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int)", 
            "java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int)", 
            "java.engine.org.apache.derby.impl.sql.compile.CreateIndexNode.makeConstantAction()", 
            "java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int)", 
            "java.engine.org.apache.derby.impl.store.access.btree.index.B2I.localReadExternal(ObjectInput)", 
            "java.engine.org.apache.derby.impl.store.access.btree.index.B2I.writeExternal(ObjectOutput)", 
            "java.engine.org.apache.derby.impl.store.access.btree.index.B2I.getTypeFormatId()", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int)", 
            "java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation)", 
            "java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.isUniqueWithDuplicateNulls()", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3431", 
        "order_reported": 3981, 
        "order_fixed": 4350, 
        "elements": [
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxIndexLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCursorNameLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxConnections()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInTable()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxRowSize()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCatalogNameLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxProcedureNameLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxSchemaNameLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxTableNameLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxStatements()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxStatementLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.doesMaxRowSizeIncludeBlobs()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTransactions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDefaultTransactionIsolation()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxUserNameLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxTablesInSelect()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCorrelatedSubqueries()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsUnion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInIns()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInQuantifieds()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenCursorsAcrossRollback()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenStatementsAcrossCommit()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsUnionAll()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenCursorsAcrossCommit()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCharLiteralLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnNameLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenStatementsAcrossRollback()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxBinaryLiteralLength()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInOrderBy()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInSelect()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInGroupBy()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInIndex()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTypeInfo()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetType(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.ownDeletesAreVisible(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.ownUpdatesAreVisible(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.othersUpdatesAreVisible(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.ownInsertsAreVisible(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.othersInsertsAreVisible(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.othersDeletesAreVisible(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.deletesAreDetected(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.updatesAreDetected(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTransactionIsolationLevel(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDataManipulationTransactionsOnly()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.dataDefinitionCausesTransactionCommit()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.dataDefinitionIgnoredInTransactions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[])", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSchemas()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogs()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTableTypes()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.autoCommitFailureClosesAllResultSets()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter)", 
            "java.client.org.apache.derby.client.am.LogicalConnection40.newLogicalDatabaseMetaData()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.testConnectionLeakInDatabaseMetaData()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsStatementPooling()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.locatorsUpdateCopy()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSQLStateType()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getJDBCMinorVersion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.unwrap(Class)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.supportsStoredFunctionsUsingCallSyntax()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.isWrapperFor(Class)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getRowIdLifetime()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getClientInfoProperties()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleOpenResults()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGetGeneratedKeys()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSavepoints()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsNamedParameters()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[])", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getConnection()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.insertsAreDetected(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsBatchUpdates()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseMinorVersion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getJDBCMajorVersion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getResultSetHoldability()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseMajorVersion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetHoldability(int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseProductName()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseProductVersion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverName()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverVersion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverMajorVersion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverMinorVersion()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.usesLocalFiles()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.usesLocalFilePerTable()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.allTablesAreSelectable()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getURL()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUserName()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.isReadOnly()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedHigh()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedLow()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedAtStart()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedAtEnd()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter)", 
            "java.client.org.apache.derby.client.am.LogicalConnection.getMetaData()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.allProceduresAreCallable()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getRealMetaDataObject()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleResultSets()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleTransactions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupByBeyondSelect()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsLikeEscapeClause()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupBy()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupByUnrelated()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsExpressionsInOrderBy()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOrderByUnrelated()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTableCorrelationNames()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDifferentTableCorrelationNames()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsColumnAliasing()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullPlusNonNullIsNull()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsAlterTableWithAddColumn()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsAlterTableWithDropColumn()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExtraNameCharacters()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSearchStringEscape()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCoreSQLGrammar()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsExtendedSQLGrammar()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsNonNullableColumns()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMinimumSQLGrammar()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92FullSQL()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsIntegrityEnhancementFacility()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92EntryLevelSQL()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92IntermediateSQL()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsLimitedOuterJoins()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSchemaTerm()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOuterJoins()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsFullOuterJoins()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.isCatalogAtStart()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogSeparator()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureTerm()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogTerm()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInIndexDefinitions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInTableDefinitions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInProcedureCalls()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInDataManipulation()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInTableDefinitions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInProcedureCalls()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInDataManipulation()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInPrivilegeDefinitions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsPositionedUpdate()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsPositionedDelete()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInPrivilegeDefinitions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInIndexDefinitions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInExists()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInComparisons()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsStoredProcedures()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSelectForUpdate()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMixedCaseIdentifiers()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesUpperCaseIdentifiers()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesLowerCaseIdentifiers()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesMixedCaseIdentifiers()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMixedCaseQuotedIdentifiers()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesUpperCaseQuotedIdentifiers()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesLowerCaseQuotedIdentifiers()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesMixedCaseQuotedIdentifiers()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIdentifierQuoteString()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSQLKeywords()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getNumericFunctions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getStringFunctions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSystemFunctions()", 
            "java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTimeDateFunctions()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3441", 
        "order_reported": 3987, 
        "order_fixed": 4063, 
        "elements": [
            "java.client.org.apache.derby.client.net.NetConnection.closeForReuse()", 
            "java.client.org.apache.derby.client.net.NetConnection.doCloseStatementsOnClose_()", 
            "java.client.org.apache.derby.client.am.Statement.resetUserControllableAttributes()", 
            "java.client.org.apache.derby.client.am.Statement.initResetPreparedStatement()", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean)", 
            "java.client.org.apache.derby.client.am.PreparedStatement.resetForReuse()", 
            "java.client.org.apache.derby.client.am.Statement.resetForReuse()", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean)", 
            "java.client.org.apache.derby.client.am.LogicalConnection.closeWithoutRecyclingToPool()", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection)", 
            "java.client.org.apache.derby.client.am.LogicalConnection.close()", 
            "java.client.org.apache.derby.client.am.Connection.closeForReuse(boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,java.util.Properties)", 
            "java.client.org.apache.derby.client.am.Connection.closeResourcesX()", 
            "java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.markClosedForReuse(boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties)", 
            "java.client.org.apache.derby.client.am.Connection.markClosed(boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3571", 
        "order_reported": 4209, 
        "order_fixed": 4233, 
        "elements": [
            "java.client.org.apache.derby.client.am.ResultSet.moveToCurrentRowX()", 
            "java.client.org.apache.derby.client.am.ResultSet.closeX()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet._Suite.suite()", 
            "java.client.org.apache.derby.client.am.ResultSet.createLOBColumnTracker()", 
            "java.client.org.apache.derby.client.am.ResultSet.markLOBAsAccessed(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.completeLocalRollback(java.util.Iterator)", 
            "java.client.org.apache.derby.client.am.ResultSet.completeLocalCommit(java.util.Iterator)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testForwardOnlyWithNoNulls()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testNoLOBs()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.LOBLocatorReleaseTest(String)", 
            "java.client.org.apache.derby.client.net.NetCursor.locator(int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testBlobClobStateAfterCloseOnScrollable()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testBlobClobStateForwardOnlyWithNoNulls()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.forwardOnlyTest(String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testForwardOnlyWithNulls()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableMoveToCurrentRow()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableWithNoNulls()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableWithNulls()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.assertInvalid(Clob)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.suite()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableAbsoluteRow()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableUpdateWithLocators()", 
            "java.client.org.apache.derby.client.am.Cursor.locator(int)", 
            "java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement)", 
            "java.client.org.apache.derby.client.am.Cursor.getLocatorProcedures()", 
            "java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)", 
            "java.client.org.apache.derby.client.net.NetConnection.serverSupportsLocators()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3581", 
        "order_reported": 4219, 
        "order_fixed": 4271, 
        "elements": [
            "java.client.org.apache.derby.client.ClientPooledConnection.getConnection()", 
            "java.client.org.apache.derby.client.am.Connection.reset_(LogWriter)", 
            "java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean)", 
            "java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter)", 
            "java.client.org.apache.derby.client.am.Connection.reset(LogWriter)", 
            "java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,boolean)", 
            "java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,boolean)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3634", 
        "order_reported": 4271, 
        "order_fixed": 5080, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object)", 
            "java.engine.org.apache.derby.impl.sql.compile.FromList.getWindows()", 
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.printSubNodes(int)", 
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode)", 
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList)", 
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.bindExpressions(FromList)", 
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.hasWindows()", 
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.genProjectRestrict(int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.OLAPTest.testBasicOperations()", 
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String)", 
            "java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.OLAPTest.suite()", 
            "java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.skipChildren(Visitable)", 
            "java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.visit(Visitable)", 
            "java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double)", 
            "java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.stopTraversal()", 
            "java.engine.org.apache.derby.impl.sql.compile.NodeFactoryImpl.nodeName(int)", 
            "java.engine.org.apache.derby.impl.sql.compile.ColumnReference.toString()", 
            "java.engine.org.apache.derby.impl.sql.compile.WindowReferenceNode.init(Object)", 
            "java.engine.org.apache.derby.impl.sql.compile.SetOperatorNode.setResultToBooleanTrueNode(boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.JoinNode.deferredBindExpressions(FromList)", 
            "java.engine.org.apache.derby.impl.sql.compile.GroupByNode.addNewColumnsForAggregation()", 
            "java.engine.org.apache.derby.impl.sql.compile.ProjectRestrictNode.pushExpressions(PredicateList)", 
            "java.engine.org.apache.derby.impl.sql.compile.WindowReferenceNode.toString()", 
            "java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double)", 
            "java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.removeWindowFunctionColumns()", 
            "java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList)", 
            "java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.containsWindowFunctionResultColumn()", 
            "java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList)", 
            "java.engine.org.apache.derby.impl.sql.compile.FromList.setWindows(WindowList)", 
            "java.engine.org.apache.derby.impl.sql.compile.GroupByColumn.accept(Visitor)", 
            "java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3678", 
        "order_reported": 4307, 
        "order_fixed": 4384, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite()", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby3678()", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptorBody(UUID,int,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,int,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.hashAllTableDescriptorsByTableId(TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,int,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRowBody(UUID,int,TransactionController)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.DataDictionary.getSchemaDescriptor(UUID,int,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory.buildDescriptor(ExecRow,TupleDescriptor,DataDictionary)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3728", 
        "order_reported": 4389, 
        "order_fixed": 4602, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.exists(final)", 
            "java.testing.org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.getFileInputStream(final)", 
            "java.testing.org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.run()", 
            "java.testing.org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.length(final)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3790", 
        "order_reported": 4481, 
        "order_fixed": 6588, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int)", 
            "java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering)", 
            "java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.qualifiesForStatisticsUpdateCheck(TableDescriptor)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getTotalNumberOfIndexes()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.testDisposableStatisticsExplicit()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.testDropOrphanedStatistics()", 
            "java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long)", 
            "java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.upgradeTests.helpers.DisposableIndexStatistics.insertData(Connection)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDERBY5681()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testSelectFromSimpleView()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testCompressWhileScanning()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testDropWhileScanningThenDelete()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testStatsCreatedOnGrowthThenDeleteDb()", 
            "java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean)", 
            "java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.checkIfDbIsPre10_9(Database)", 
            "java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3810", 
        "order_reported": 4501, 
        "order_fixed": 4816, 
        "elements": [
            "java.testing.org.apache.derbyTesting.perf.basic.jdbc.ClobAccessTest.suite()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3825", 
        "order_reported": 4507, 
        "order_fixed": 4616, 
        "elements": [
            "java.engine.org.apache.derby.impl.jdbc.TemporaryClob.getInternalReader(long)", 
            "java.engine.org.apache.derby.impl.jdbc.InternalClob.getInternalReader(long)", 
            "java.engine.org.apache.derby.impl.jdbc.UTF8Reader.reposition(long)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedClob.getSubString(long,int)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedClob.position(String,long)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3934", 
        "order_reported": 4657, 
        "order_fixed": 4700, 
        "elements": [
            "java.engine.org.apache.derby.impl.jdbc.InternalClob.getUpdateCount()", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedCallableStatement20.getCharacterStream(int)", 
            "java.engine.org.apache.derby.impl.jdbc.StoreStreamClob.isReleased()", 
            "java.engine.org.apache.derby.impl.jdbc.StoreStreamClob.getUpdateCount()", 
            "java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.updateReaderIfRequired()", 
            "java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.close()", 
            "java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.skip(long)", 
            "java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int)", 
            "java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read()", 
            "java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long)", 
            "java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob)", 
            "java.engine.org.apache.derby.impl.jdbc.TemporaryClob.getReader(long)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testReplaceMultibyteWithSingleByteForwards()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testReplaceMultibyteWithSingleByteBackwards()", 
            "java.engine.org.apache.derby.impl.jdbc.InternalClob.isReleased()", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3936", 
        "order_reported": 4657, 
        "order_fixed": 4677, 
        "elements": [
            "java.testing.org.apache.derbyTesting.unitTests.junit._Suite.suite()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "3977", 
        "order_reported": 4700, 
        "order_fixed": 4712, 
        "elements": [
            "java.engine.org.apache.derby.impl.jdbc.EmbedClob.truncate(long)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testTruncateTooLongOnDisk()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testTruncateTooLongInMemory()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4060", 
        "order_reported": 4800, 
        "order_fixed": 4813, 
        "elements": [
            "java.client.org.apache.derby.client.am.Lob.checkPosAndLength(long,long)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.getLastByteInStream(InputStream,int)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedBlob.getBinaryStream(long,long)", 
            "java.testing.org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader.LoopingAlphabetReader(long,CharAlphabet,int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testGetBinaryStreamLongLastByte()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4071", 
        "order_reported": 4810, 
        "order_fixed": 4828, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.compile.GroupByNode.addUnAggColumns()", 
            "java.engine.org.apache.derby.impl.sql.compile.GroupByNode.addNewColumnsForAggregation()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4087", 
        "order_reported": 4817, 
        "order_fixed": 5030, 
        "elements": [
            "java.testing.org.apache.derbyTesting.junit.RuntimeStatisticsParser.findQualifiers()", 
            "java.engine.org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics.getStatementExecutionPlanText(int)", 
            "java.engine.org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics.getStatementExecutionPlanText(int)", 
            "java.engine.org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics.getStatementExecutionPlanText(int)", 
            "java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpA(String,String)", 
            "java.engine.org.apache.derby.iapi.util.StringUtil.ensureIndent(String,int)", 
            "java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpC(String,String)", 
            "java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpB(String)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4102", 
        "order_reported": 4835, 
        "order_fixed": 5105, 
        "elements": [
            "java.engine.org.apache.derby.impl.jdbc.EmbedBlob.EmbedBlob(DataValueDescriptor,EmbedConnection)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4179", 
        "order_reported": 4880, 
        "order_fixed": 5347, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.bootLock.dumpSQLExceptions(SQLException)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.bootLock.main(String[])", 
            "java.testing.org.apache.derbyTesting.junit.BaseTestCase.isJ9Platform()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store._Suite.suite()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.BootLockMinion.main(String[])", 
            "java.testing.org.apache.derbyTesting.junit.BaseTestCase.getJavaExecutableName()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.bootLock1.main(String[])", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.bootLock1.dumpSQLExceptions(SQLException)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4426", 
        "order_reported": 5083, 
        "order_fixed": 5132, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.testDerby_4426()", 
            "java.engine.org.apache.derby.impl.sql.compile.SingleChildResultSetNode.replaceDefaults(TableDescriptor,ResultColumnList)", 
            "java.engine.org.apache.derby.impl.sql.compile.RowResultSetNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.SetOperatorNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.SelectNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.ResultSetNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.replaceDefaults(TableDescriptor,ResultColumnList)", 
            "java.engine.org.apache.derby.impl.sql.compile.InsertNode.bindStatement()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4515", 
        "order_reported": 5199, 
        "order_fixed": 5213, 
        "elements": [
            "java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateBinaryStreamInternal(int,InputStream,final,long,String)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setBinaryStreamInternal(int,InputStream,final,long)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4519", 
        "order_reported": 5203, 
        "order_fixed": 5207, 
        "elements": [
            "java.engine.org.apache.derby.impl.store.raw.data.StreamFileContainer.writeColumn(Object)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4520", 
        "order_reported": 5204, 
        "order_fixed": 5223, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean)", 
            "java.engine.org.apache.derby.impl.store.access.btree.BTreeMaxScan.fetchMaxRowFromBeginning(DataValueDescriptor[])", 
            "java.engine.org.apache.derby.impl.sql.execute.BaseActivation.getRowLocationTemplate(int)", 
            "java.engine.org.apache.derby.iapi.types.BinaryDecimal.getClone()", 
            "java.engine.org.apache.derby.iapi.types.CollatorSQLLongvarchar.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.sql.execute.CardinalityCounter.clone(DataValueDescriptor[])", 
            "java.engine.org.apache.derby.iapi.types.SQLClob.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.sql.execute.ValueRow.getRowArrayClone()", 
            "java.engine.org.apache.derby.iapi.types.SQLVarchar.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.store.access.conglomerate.GenericConglomerate.cloneValue(boolean)", 
            "java.engine.org.apache.derby.iapi.types.SQLLongint.getClone()", 
            "java.engine.org.apache.derby.impl.store.access.StorableFormatId.cloneValue(boolean)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[])", 
            "java.engine.org.apache.derby.iapi.types.SQLBoolean.cloneValue(boolean)", 
            "java.engine.org.apache.derby.iapi.types.SQLTimestamp.getClone()", 
            "java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory)", 
            "java.engine.org.apache.derby.impl.sql.execute.MultiProbeTableScanResultSet.openCore()", 
            "java.engine.org.apache.derby.impl.store.access.heap.HeapRowLocation.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation)", 
            "java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager)", 
            "java.engine.org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(DataValueDescriptor[])", 
            "java.engine.org.apache.derby.iapi.types.CollatorSQLChar.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.sql.execute.DependentResultSet.openIndexScan(ExecRow)", 
            "java.engine.org.apache.derby.iapi.types.CollatorSQLVarchar.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int)", 
            "java.engine.org.apache.derby.iapi.types.SQLRef.getClone()", 
            "java.engine.org.apache.derby.impl.sql.execute.ValueRow.getNewNullRow()", 
            "java.engine.org.apache.derby.impl.sql.execute.ValueRow.cloneColumn(int)", 
            "java.engine.org.apache.derby.iapi.types.SQLTime.getClone()", 
            "java.engine.org.apache.derby.impl.sql.execute.ValueRow.getClone(FormatableBitSet)", 
            "java.engine.org.apache.derby.iapi.types.SQLInteger.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.sql.GenericParameter.getClone(GenericParameterValueSet)", 
            "java.engine.org.apache.derby.iapi.types.DataType.cloneHolder()", 
            "java.engine.org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore()", 
            "java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean)", 
            "java.engine.org.apache.derby.iapi.types.SQLBinary.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(ExecRow)", 
            "java.engine.org.apache.derby.iapi.types.SQLLongvarchar.cloneValue(boolean)", 
            "java.engine.org.apache.derby.iapi.types.SQLReal.cloneValue(boolean)", 
            "java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean)", 
            "java.engine.org.apache.derby.iapi.types.SQLSmallint.getClone()", 
            "java.engine.org.apache.derby.impl.sql.execute.MaxMinAggregator.accumulate(DataValueDescriptor)", 
            "java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow)", 
            "java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet)", 
            "java.engine.org.apache.derby.iapi.types.UserType.cloneValue(boolean)", 
            "java.engine.org.apache.derby.iapi.types.XML.cloneValue(boolean)", 
            "java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean)", 
            "java.engine.org.apache.derby.iapi.types.SQLDouble.getClone()", 
            "java.engine.org.apache.derby.impl.sql.execute.SumAggregator.accumulate(DataValueDescriptor)", 
            "java.engine.org.apache.derby.iapi.types.SQLTinyint.getClone()", 
            "java.engine.org.apache.derby.iapi.types.SQLBlob.cloneValue(boolean)", 
            "java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle)", 
            "java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.fillByteHolder()", 
            "java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.resetStream()", 
            "java.engine.org.apache.derby.iapi.types.SQLChar.cloneObject()", 
            "java.engine.org.apache.derby.iapi.types.SQLDecimal.getClone()", 
            "java.engine.org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.cloneRow(ExecRow)", 
            "java.engine.org.apache.derby.iapi.services.io.FormatIdInputStream.cloneStream()", 
            "java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation)", 
            "java.engine.org.apache.derby.iapi.store.access.BackingStoreHashtable.cloneRow(DataValueDescriptor[])", 
            "java.engine.org.apache.derby.iapi.types.SQLDate.cloneValue(boolean)", 
            "java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)", 
            "java.engine.org.apache.derby.iapi.types.DataValueDescriptor.cloneHolder()", 
            "java.engine.org.apache.derby.iapi.types.CollatorSQLClob.getClone()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4543", 
        "order_reported": 5240, 
        "order_fixed": 5241, 
        "elements": [
            "java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.expectsCharCount()", 
            "java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(byte[],int,long)", 
            "java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(ObjectOutput,long)", 
            "java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(byte[],int,long)", 
            "java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(ObjectOutput,long)", 
            "java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.determineMode()", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.usePreTenFiveHdrFormat()", 
            "java.engine.org.apache.derby.iapi.types.SQLClob.setStreamHeaderFormat(Boolean)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)", 
            "java.engine.org.apache.derby.iapi.types.SQLChar.setSoftUpgradeMode(Boolean)", 
            "java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.ClobStreamHeaderGenerator(boolean)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "4551", 
        "order_reported": 5256, 
        "order_fixed": 5382, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder)", 
            "java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.userOnAccessList(String)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.getAuthorizationId()", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext)", 
            "java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission)", 
            "java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[])", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation)", 
            "java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testBuiltins()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testInvokersRights()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testDefinersRights()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.lookupDilbertWage()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.spTestBuiltins()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.lookupWageFootSoldier(int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.selectFootSoldiers()", 
            "java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List)", 
            "java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getCurrentUserId(Activation)", 
            "java.engine.org.apache.derby.iapi.sql.conn.Authorizer.getAuthorizationId()", 
            "java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List)", 
            "java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String)", 
            "java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupSubStatementSessionContext(Activation)", 
            "java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getSessionUserId()", 
            "java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String)", 
            "java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object)", 
            "java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String)", 
            "java.engine.org.apache.derby.impl.store.raw.xact.TransactionTableEntry.getUsernameString()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.makeSuite()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.suite()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.RoutinesDefinersRightsTest(String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang._Suite.suite()", 
            "java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.setUser(String)", 
            "java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String)", 
            "java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor)", 
            "java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.getCurrentUser()", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSubStatementSessionContext(Activation)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.createSQLSessionContext()", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getTopLevelSQLSessionContext()", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getCurrentRoleIdDelimited(Activation)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getAuthorizationId()", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupNestedSessionContext(Activation)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.roleIsSettable(String)", 
            "java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder)", 
            "java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initDefaultSchemaDescriptor()", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initialize()", 
            "java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement)", 
            "java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedConnection.checkUserIsNotARole()", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedConnection.checkIsDBOwner(int)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "47", 
        "order_reported": 38, 
        "order_fixed": 2655, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.compile.Predicate.isInListProbePredicate()", 
            "java.engine.org.apache.derby.impl.sql.compile.Predicate.getSourceInList()", 
            "java.engine.org.apache.derby.impl.sql.compile.Predicate.getSourceInList(boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor)", 
            "java.engine.org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder)", 
            "java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering)", 
            "java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.changeAccessPath()", 
            "java.engine.org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.isInListProbeNode()", 
            "java.engine.org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)", 
            "java.engine.org.apache.derby.impl.sql.compile.ValueNode.isInListProbeNode()", 
            "java.engine.org.apache.derby.impl.sql.compile.Predicate.isRelationalOpPredicate()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "48", 
        "order_reported": 43, 
        "order_fixed": 4352, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48SelfLockingRecoveryDeadlockDetectionOn()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48SelfLockingRecovery()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48testNewSchemaHang()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.LazyDefaultSchemaCreationTest(String)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(String,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController)", 
            "java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.isInitialDefaultSchema(String)", 
            "java.testing.org.apache.derbyTesting.junit.BaseTestCase.fail(String,Exception)", 
            "java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreate(DataDictionary,Activation,String)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5090", 
        "order_reported": 5896, 
        "order_fixed": 6159, 
        "elements": [
            "java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.flush()", 
            "java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar)", 
            "java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getDouble(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getFloat(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getLong(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getInt(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getShort(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getByte(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getBoolean(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.closeX()", 
            "java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int)", 
            "java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(int)", 
            "java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read()", 
            "java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int)", 
            "java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int)", 
            "java.client.org.apache.derby.client.am.ResultSet.closeCloseFilterInputStream()", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.getBinaryStream(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getObject(int,java.util.Map)", 
            "java.client.org.apache.derby.client.am.ResultSet.createCloseFilterInputStream(java.io.InputStream)", 
            "java.client.org.apache.derby.client.am.ResultSet.getArray(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getObject(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getClob(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getRef(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getCharacterStream(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getBlob(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getBinaryStream(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getAsciiStream(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getString(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getBytes(int)", 
            "java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar)", 
            "java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5108", 
        "order_reported": 5912, 
        "order_fixed": 6068, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.disableIndexStatsRefresher()", 
            "java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.fmtScanTimes(long[][])"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5306", 
        "order_reported": 6102, 
        "order_fixed": 6128, 
        "elements": [
            "java.engine.org.apache.derby.iapi.types.SQLBoolean.setValueCore(Number)", 
            "java.client.org.apache.derby.client.am.ColumnMetaData.getInternalTypeForGuessedOrRegisteredJdbcType(int)", 
            "java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int)", 
            "java.client.org.apache.derby.client.am.ColumnMetaData.setParmModeForOutputParameter(int)", 
            "java.client.org.apache.derby.client.am.ColumnMetaData.setParmModeForInputParameter(int)", 
            "java.client.org.apache.derby.client.am.ColumnMetaData.isParameterModeGuessedAsAnInput(int)", 
            "java.drda.org.apache.derby.impl.drda.DRDAXAProtocol.parseXIDSHR()", 
            "java.client.org.apache.derby.client.am.ResultSet.writeAutoCommitIfNotAutoCommitted()", 
            "java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getGenericConstantActionFactory()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5318", 
        "order_reported": 6118, 
        "order_fixed": 6131, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster(String,String,String,int,String,int,String,int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runLoad(String,String,String,String,int,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startSlave(String,String,String,int,String,int,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_ij(String,String,String,int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.Utils.rmFiles(File,boolean)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.Utils.cleanDir(String,boolean)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.run()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.initMaster(String,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.initSlave(String,String,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommand(String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommand(String,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommandRemotely(String,String,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommandRemotely(String,String,String,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startSlave_ij(String,String,String,int)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver(String,String,String,String,String,int,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_ij(String,String,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_direct(String)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5336", 
        "order_reported": 6131, 
        "order_fixed": 6169, 
        "elements": [
            "java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.stop()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5357", 
        "order_reported": 6153, 
        "order_fixed": 6471, 
        "elements": [
            "java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.suite(int)", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long)", 
            "java.engine.org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor)", 
            "java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean)", 
            "java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char)", 
            "java.engine.org.apache.derby.impl.sql.execute.JarUtil.replace(InputStream)", 
            "java.engine.org.apache.derby.impl.sql.execute.JarUtil.drop()", 
            "java.engine.org.apache.derby.impl.sql.execute.JarUtil.add(final)", 
            "java.engine.org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String)", 
            "java.tools.org.apache.derby.tools.dblook.go()", 
            "java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)", 
            "java.engine.org.apache.derby.impl.store.raw.data.RemoveFile.run()", 
            "java.engine.org.apache.derby.impl.store.raw.data.RFResource.removeJarDir(String)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5363", 
        "order_reported": 6153, 
        "order_fixed": 6207, 
        "elements": [
            "java.engine.org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(long)", 
            "java.engine.org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtPosition(long)", 
            "java.engine.org.apache.derby.impl.store.raw.log.LogToFile.run()", 
            "java.testing.org.apache.derbyTesting.functionTests.util.corruptio.CorruptFile.getExclusiveFileLock()", 
            "java.engine.org.apache.derby.impl.store.raw.data.RAFContainer.run()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run()", 
            "java.engine.org.apache.derby.impl.store.raw.RawStore.run()", 
            "java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String)", 
            "java.testing.org.apache.derbyTesting.junit.TestConfiguration.TestConfiguration()", 
            "java.engine.org.apache.derby.iapi.services.io.FileUtil.limitAccessToOwner(File)", 
            "java.engine.org.apache.derby.impl.store.raw.data.StreamFileContainer.run()", 
            "java.engine.org.apache.derby.io.StorageFile.getExclusiveFileLock()", 
            "java.drda.org.apache.derby.impl.drda.DssTrace.run()", 
            "java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final)", 
            "java.engine.org.apache.derby.impl.io.DirFile4.getExclusiveFileLock()", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.engine._Suite.suite()", 
            "java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final)", 
            "java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File)", 
            "java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean)", 
            "java.engine.org.apache.derby.impl.services.monitor.FileMonitor.PBinitialize(boolean)", 
            "java.engine.org.apache.derby.impl.io.DirFile.getExclusiveFileLock()", 
            "java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final)", 
            "java.engine.org.apache.derby.impl.io.DirFile.getOutputStream()", 
            "java.testing.org.apache.derbyTesting.functionTests.util.corruptio.CorruptFile.limitAccessToOwner()", 
            "java.drda.org.apache.derby.drda.NetworkServerControl.main(String)", 
            "java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream)", 
            "java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()", 
            "java.engine.org.apache.derby.impl.io.DirFile.limitAccessToOwner()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5459", 
        "order_reported": 6233, 
        "order_fixed": 6307, 
        "elements": [
            "java.testing.org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testAddColumn()", 
            "java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.getVersionCounter()", 
            "java.drda.org.apache.derby.impl.drda.DRDAStatement.prepare(String)", 
            "java.engine.org.apache.derby.impl.sql.GenericPreparedStatement.getVersionCounter()", 
            "java.engine.org.apache.derby.impl.sql.GenericPreparedStatement.incrementVersionCounter()", 
            "java.drda.org.apache.derby.impl.drda.DRDAConnThread.processCommands()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5617", 
        "order_reported": 6392, 
        "order_fixed": 6393, 
        "elements": [
            "java.testing.org.apache.derbyTesting.junit.BaseTestCase.readProcessOutput(Process)", 
            "java.testing.org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp()", 
            "java.testing.org.apache.derbyTesting.junit.NetworkServerTestSetup.tearDown()", 
            "java.testing.org.apache.derbyTesting.junit.SpawnedProcess.scheduleKill(Process,String)", 
            "java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.runServerCommand(String[])"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5631", 
        "order_reported": 6425, 
        "order_fixed": 6451, 
        "elements": [
            "java.testing.org.apache.derbyTesting.junit.TestConfiguration.defaultSecurityManagerSetup()", 
            "java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.setSecurityPolicy(Properties,String)", 
            "java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.installSecurityManager(String,final)", 
            "java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.mergePolicies(URL,URL)", 
            "java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.run()", 
            "java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.getURL(final)", 
            "java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.uninstallSecurityManager()", 
            "java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.openStream(final)", 
            "java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.mkdir(final)"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5641", 
        "order_reported": 6448, 
        "order_fixed": 6449, 
        "elements": [
            "java.engine.org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5680", 
        "order_reported": 6481, 
        "order_fixed": 6589, 
        "elements": [
            "java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateStatistics()", 
            "java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getStatistics()"
        ]
    }, 
    {
        "project": "apache_derby", 
        "bug_id": "5734", 
        "order_reported": 6531, 
        "order_fixed": 6545, 
        "elements": [
            "java.testing.org.apache.derbyTesting.junit.CleanDatabaseTestSetup.setUp()"
        ]
    }
]