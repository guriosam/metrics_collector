org.apache.derby.client.am.PreparedStatement.setAsciiStream(int,InputStream)
org.apache.derby.client.am.PreparedStatement.setAsciiStream(int,java.io.InputStream,long)
org.apache.derby.client.am.ResultSet.updateAsciiStream(int,InputStream)
org.apache.derby.client.am.ResultSet.updateAsciiStream(int,java.io.InputStream,int)
org.apache.derby.client.am.Clob.convertFromAsciiToCharacterStream()
org.apache.derby.client.am.Clob.Clob(Agent,java.io.InputStream,String)
org.apache.derby.client.am.Clob.Clob(Agent,java.io.InputStream,String,int)
org.apache.derby.client.am.Cursor.getAsciiStream(int)
org.apache.derby.impl.jdbc.UpdatableBlobStream.read(byte[])
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testGetBinaryStreamLongDrain()
org.apache.derby.impl.jdbc.UpdatableBlobStream.read(byte[],int,int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.getEmbeddedSuite(String)
org.apache.derby.client.ClientPooledConnection.recycleConnection()
org.apache.derbyTesting.functionTests.tests.jdbc4.StatementTest.testIsClosedWhenClosingConnectionInInvalidState()
org.apache.derby.impl.jdbc.EmbedConnection.close()
org.apache.derby.iapi.util.StringUtil.split(String,char)
org.apache.derby.impl.jdbc.EmbedConnection.checkDatabaseCreatePrivileges(String,String)
org.apache.derbyTesting.junit.TestConfiguration.sqlAuthorizationDecorator(Test,String[],String)
org.apache.derbyTesting.junit.TestConfiguration.sqlAuthorizationDecorator(Test)
org.apache.derbyTesting.junit.TestConfiguration.sqlAuthorizationDecoratorSingleUse(Test)
org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testAddConstraint()
org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testAddColumn()
org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testTemporaryTable()
org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testDropColumn()
org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testDropConstraint()
org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testWithSchema()
org.apache.derbyTesting.functionTests.tests.lang.SecurityPolicyReloadingTest.doPolicyReloadingIsNotGranted()
org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.addRequiredAttributes(HashMap)
org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlClientCommandTest.testPing()
org.apache.derbyTesting.functionTests.tests.lang.SecurityPolicyReloadingTest.dbaTest()
org.apache.derby.impl.sql.conn.GenericStatementContext.getStatementWasInvalidated()
org.apache.derby.impl.sql.execute.NoRowsResultSetImpl.close()
org.apache.derby.impl.sql.conn.GenericStatementContext.clearInUse()
org.apache.derby.impl.sql.conn.GenericStatementContext.cleanupOnError(Throwable)
org.apache.derby.impl.sql.execute.NoPutResultSetImpl.close()
org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.verifyXplainUnset(Statement)
org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.testTableNotValid()
org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.enableXplainStyleWithTiming(Statement)
org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.disableXplainStyle(Statement)
org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.hasTable(String,String)
org.apache.derbyTesting.functionTests.tests.lang.XplainStatisticsTest.enableXplainStyle(Statement)
org.apache.derbyTesting.functionTests.util.ProcedureTest.createIndex()
org.apache.derbyTesting.functionTests.util.ProcedureTest.dropIndex()
org.apache.derbyTesting.functionTests.util.ProcedureTest.alterTable()
org.apache.derbyTesting.functionTests.util.ProcedureTest.dropTable()
org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext.validateStatement(ConstantAction)
org.apache.derbyTesting.functionTests.util.ProcedureTest.createTrigger()
org.apache.derbyTesting.functionTests.util.ProcedureTest.dropTrigger()
org.apache.derbyTesting.functionTests.util.ProcedureTest.updateRow(int)
org.apache.derbyTesting.functionTests.util.ProcedureTest.deleteRow(int)
org.apache.derbyTesting.functionTests.tests.memory._Suite.suite()
org.apache.derby.jdbc.XATransactionState.scheduleTimeoutTask(long)
org.apache.derby.jdbc.CancelXATransactionTask.run()
org.apache.derby.jdbc.CancelXATransactionTask.CancelXATransactionTask()
org.apache.derby.jdbc.ClientDriver.tokenizeDatabase(java.util.StringTokenizer,String)
org.apache.derbyTesting.functionTests.tests.jdbcapi.checkDriver.main(String[])
org.apache.derbyTesting.functionTests.tests.jdbcapi.checkDriver.testDbNameWithSpaces(Driver)
org.apache.derby.client.net.NetCursor.getBlobColumn_(int,Agent,boolean)
org.apache.derby.client.net.NetCursor.getClobColumn_(int,Agent,boolean)
org.apache.derby.client.am.LOBStateTracker.discardState()
org.apache.derby.client.am.LOBStateTracker.markAsPublished(int)
org.apache.derby.client.am.LOBStateTracker.LOBStateTracker(int[],boolean[],boolean)
org.apache.derby.client.am.LOBStateTracker.checkCurrentRow(Cursor)
org.apache.derby.client.am.ResultSet.createLOBColumnTracker()
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.testClientMessageTextConnectionAttribute()
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.assertMessageText(Connection,String)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.assertTraceFilesExistAndCanBeDeleted()
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.run()
org.apache.derby.jdbc.ClientBaseDataSource.computeDncLogWriter(PrintWriter,String,String,boolean,String,int,int)
org.apache.derby.jdbc.ClientBaseDataSource.computeDncLogWriter(Connection,PrintWriter,String,String,boolean,String,int,int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.subTestDataSourceDescription(DataSource)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.getPhysicalConnection(Object)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.testClientTraceFileDSConnectionAttribute()
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby2017LayerBTest.doInsertTest(String[],String[][],boolean,boolean)
org.apache.derbyTesting.functionTests.tests.jdbc4.Derby2017LayerBTest.doInsertTest(byte[][],String[][],boolean,boolean)
org.apache.derby.impl.jdbc.EmbedConnection.clearLOBMapping()
org.apache.derby.impl.drda.DRDAConnThread.writeFdocaVal(int,Object,int,int,int,boolean,DRDAStatement)
org.apache.derbyTesting.functionTests.tests.jdbc4._Suite.suite()
org.apache.derby.iapi.types.SQLClob.readExternal(ObjectInput)
org.apache.derby.impl.io.VFMemoryStorageFactory.purgeDatabase(final)
org.apache.derby.impl.io.VFMemoryStorageFactory.normalizePath(String,String)
org.apache.derby.impl.io.VFMemoryStorageFactory.normalizePath(String)
org.apache.derby.impl.sql.execute.DropTableConstantAction.executeConstantAction(Activation)
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getAllRelevantTriggers(int,int[],GenericDescriptorList)
org.apache.derby.impl.sql.compile.DeleteNode.getDeleteReadMap(TableDescriptor,Vector,GenericDescriptorList,boolean[])
org.apache.derby.impl.sql.execute.AlterTableConstantAction.truncateTable()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.dropColumnFromTable(String)
org.apache.derby.impl.sql.compile.UpdateNode.getUpdateReadMap(DataDictionary,TableDescriptor,ResultColumnList,Vector,ConstraintDescriptorList,GenericDescriptorList,boolean[],ColumnDescriptorList)
org.apache.derby.impl.sql.compile.DMLModStatementNode.createTriggerDependencies(GenericDescriptorList,Dependent)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runBare()
org.apache.derbyTesting.junit.BaseTestCase.runBare()
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.testSemantics()
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.checkGrantCircularity()
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.doDynamicSetRole(Connection)
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.doStmtWithWarnings(String,String[],String[],String[],boolean)
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getStatistics()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateStatistics()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.truncateTable(Activation)
org.apache.derby.impl.io.vfmem.DataStore.scheduledForDeletion()
org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String)
org.apache.derby.iapi.services.monitor.Monitor.removePersistentService(String)
org.apache.derby.impl.jdbc.EmbedConnection.EmbedConnection(InternalDriver,String,Properties)
org.apache.derby.impl.jdbc.EmbedConnection.createBoot(Properties)
org.apache.derby.impl.io.vfmem.DataStore.deleteEntry(String)
org.apache.derby.impl.io.vfmem.DataStore.deleteAll(String)
org.apache.derbyTesting.functionTests.tests.memorydb.BasicInMemoryDbTest.DISABLED_testDelete()
org.apache.derbyTesting.functionTests.tests.memorydb.BasicInMemoryDbTest.DISABLED_testDeleteWhenInUse()
org.apache.derby.impl.services.monitor.StorageFactoryService.getCanonicalServiceName(String)
org.apache.derby.impl.services.monitor.StorageFactoryService.run()
org.apache.derby.impl.jdbc.EmbedConnection.sleep(long)
org.apache.derby.impl.jdbc.EmbedConnection.isDropDatabase(Properties)
org.apache.derby.impl.services.monitor.StorageFactoryService.createServiceRoot(final,final)
org.apache.derbyTesting.functionTests.tests.memorydb.MemoryDbManager.dropDatabase(String)
org.apache.derby.iapi.types.SQLChar.getLength()
org.apache.derby.impl.store.raw.data.StreamFileContainer.writeColumn(Object)
org.apache.derby.iapi.types.SQLBoolean.setValueCore(Number)
org.apache.derby.client.am.ColumnMetaData.getInternalTypeForGuessedOrRegisteredJdbcType(int)
org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int)
org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)
org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getGenericConstantActionFactory()
org.apache.derby.client.am.ResultSet.writeAutoCommitIfNotAutoCommitted()
org.apache.derby.impl.drda.DRDAXAProtocol.parseXIDSHR()
org.apache.derby.client.am.ColumnMetaData.isParameterModeGuessedAsAnInput(int)
org.apache.derby.client.am.ColumnMetaData.setParmModeForInputParameter(int)
org.apache.derby.client.am.ColumnMetaData.setParmModeForOutputParameter(int)
org.apache.derbyTesting.functionTests.tests.lang.GrantRevokeTest.testSimpleGrant()
org.apache.derby.impl.sql.compile.SelectNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean)
org.apache.derby.impl.sql.compile.ResultSetNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean)
org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.testDerby_4426()
org.apache.derby.impl.sql.compile.SingleChildResultSetNode.replaceDefaults(TableDescriptor,ResultColumnList)
org.apache.derby.impl.sql.compile.RowResultSetNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean)
org.apache.derby.impl.sql.compile.SetOperatorNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean)
org.apache.derby.impl.sql.compile.InsertNode.bindStatement()
org.apache.derby.impl.sql.compile.ResultColumnList.replaceDefaults(TableDescriptor,ResultColumnList)
org.apache.derby.impl.sql.compile.DMLModStatementNode.parseAndBindGenerationClauses(DataDictionary,TableDescriptor,ResultColumnList,ResultColumnList,boolean,ResultSetNode)
org.apache.derbyTesting.functionTests.tests.lang.DatabaseClassLoadingTest.decorateSQL(Statement)
org.apache.derby.impl.sql.compile.CastNode.setAssignmentSemantics()
org.apache.derby.impl.sql.compile.CastNode.genDataValueConversion(ExpressionClassBuilder,MethodBuilder)
org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.test_017_padding()
org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.test_derby_5749()
org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.test_018_alterDatatype()
org.apache.derbyTesting.functionTests.tests.lang.CollationTest2.runBulkInsert(int)
org.apache.derbyTesting.functionTests.tests.tools.ImportExportProcedureTest.testImportExportProcedureNegative()
org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor)
org.apache.derby.drda.NetworkServerControl.main(String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startServer(String,String,String,String,int,String)
org.apache.derby.impl.sql.depend.BasicDependencyManager.coreInvalidateFor(Provider,int,LanguageConnectionContext)
org.apache.derby.impl.sql.depend.BasicDependencyManager.getDependents(Provider)
org.apache.derby.impl.sql.depend.BasicDependencyManager.clearProviderDependency(UUID,Dependency)
org.apache.derby.impl.sql.compile.JoinNode.flatten(ResultColumnList,PredicateList,SubqueryList,GroupByList,ValueNode)
org.apache.derby.impl.sql.compile.FromSubquery.flatten(ResultColumnList,PredicateList,SubqueryList,GroupByList)
org.apache.derby.impl.sql.compile.FromTable.flatten(ResultColumnList,PredicateList,SubqueryList,GroupByList)
org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList)
org.apache.derby.impl.sql.compile.FromList.flattenFromTables(ResultColumnList,PredicateList,SubqueryList,GroupByList,ValueNode)
org.apache.derby.client.am.CallableLocatorProcedures.clobTruncate(int,long)
org.apache.derby.client.am.CallableLocatorProcedures.clobSetString(int,long,int,String)
org.apache.derby.client.am.CallableLocatorProcedures.clobGetSubString(int,long,int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.baseSuite(String)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.decorateSQL(Statement)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.testDerby3799()
org.apache.derby.client.am.CallableLocatorProcedures.blobCreateLocator()
org.apache.derby.client.am.CallableLocatorProcedures.blobReleaseLocator(int)
org.apache.derby.client.am.CallableLocatorProcedures.blobGetPositionFromLocator(int,int,long)
org.apache.derby.client.am.CallableLocatorProcedures.blobGetPositionFromBytes(int,long,byte[],int,int)
org.apache.derby.client.am.CallableLocatorProcedures.blobGetLength(int)
org.apache.derby.client.am.CallableLocatorProcedures.blobGetBytes(int,long,int)
org.apache.derby.client.am.CallableLocatorProcedures.blobSetBytes(int,long,int,byte[])
org.apache.derby.client.am.CallableLocatorProcedures.blobTruncate(int,long)
org.apache.derby.client.am.CallableLocatorProcedures.clobCreateLocator()
org.apache.derby.client.am.CallableLocatorProcedures.clobReleaseLocator(int)
org.apache.derby.client.am.CallableLocatorProcedures.clobGetPositionFromString(int,long,String,int,int)
org.apache.derby.client.am.CallableLocatorProcedures.clobGetPositionFromLocator(int,int,long)
org.apache.derby.client.am.CallableLocatorProcedures.clobGetLength(int)
org.apache.derby.iapi.types.SQLClob.getNewNull()
org.apache.derby.iapi.types.SQLClob.getClone()
org.apache.derby.impl.drda.DRDAConnThread.writeFDODTA(DRDAStatement)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.hashAllTableDescriptorsByTableId(TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptorBody(UUID,int,TransactionController)
org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown()
org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby3678()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getSchemaDescriptor(UUID,int,TransactionController)
org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory.buildDescriptor(ExecRow,TupleDescriptor,DataDictionary)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,int,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRowBody(UUID,int,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,int,TransactionController)
org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite()
org.apache.derby.client.net.NetStatement.writeSetSpecialRegister_(Section,java.util.ArrayList)
org.apache.derby.client.net.NetStatementRequest.writeSetSpecialRegister(Section,java.util.ArrayList)
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementJdbc30Test.suite()
org.apache.derby.client.am.MaterialStatement.writeSetSpecialRegister_(java.util.ArrayList)
org.apache.derby.client.am.Statement.writeSetSpecialRegister(java.util.ArrayList)
org.apache.derby.impl.jdbc.EmbedBlob.getBinaryStream()
org.apache.derby.impl.jdbc.UpdateableBlobStream.skip(long)
org.apache.derby.impl.jdbc.UpdateableBlobStream.read(byte[],int,int)
org.apache.derby.impl.jdbc.UpdateableBlobStream.read(byte[])
org.apache.derby.impl.jdbc.UpdateableBlobStream.updateIfRequired()
org.apache.derby.impl.jdbc.UpdateableBlobStream.read()
org.apache.derbyTesting.functionTests.tests.jdbcapi._Suite.suite()
org.apache.derby.impl.jdbc.UpdateableBlobStream.UpdateableBlobStream(EmbedBlob,InputStream)
org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties)
org.apache.derbyTesting.functionTests.tests.lang.PrimaryKeyTest.testKeyConstraintsImpliesNotNull()
org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor)
org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary)
org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary)
org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[])
org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation)
org.apache.derby.impl.store.access.btree.BTree.setUniqueWithDuplicateNulls(boolean)
org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int)
org.apache.derby.impl.store.access.btree.index.B2I.getTypeFormatId()
org.apache.derby.impl.store.access.btree.index.B2I.writeExternal(ObjectOutput)
org.apache.derby.impl.store.access.btree.index.B2I.localReadExternal(ObjectInput)
org.apache.derby.impl.store.access.btree.index.B2I_10_3.getTypeFormatId()
org.apache.derby.impl.store.access.btree.index.B2I_10_3.writeExternal(ObjectOutput)
org.apache.derby.catalog.IndexDescriptor.isUniqueWithDuplicateNulls()
org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[])
org.apache.derby.impl.store.access.btree.BTreeController.doIns(DataValueDescriptor[])
org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int)
org.apache.derby.impl.store.access.btree.BTree.isUniqueWithDuplicateNulls()
org.apache.derby.catalog.types.IndexDescriptorImpl.isUniqueWithDuplicateNulls()
org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int)
org.apache.derby.catalog.types.IndexDescriptorImpl.readExternal(ObjectInput)
org.apache.derby.catalog.types.IndexDescriptorImpl.toString()
org.apache.derby.catalog.types.IndexDescriptorImpl.equals(Object)
org.apache.derby.catalog.types.IndexDescriptorImpl.writeExternal(ObjectOutput)
org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.isUniqueWithDuplicateNulls()
org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties)
org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int)
org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)
org.apache.derby.impl.sql.compile.CreateIndexNode.makeConstantAction()
org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int)
org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1._testPreStartedSlave()
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1._testPreInitSlave()
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_direct(String,String,int,String,int)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part1._testPreStartedMaster()
org.apache.derbyTesting.functionTests.tests.lang.ErrorCodeTest.test_errorcode()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.compareWithPrevKey(int,boolean)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.initializeRowBuffers(ExecIndexRow)
org.apache.derby.impl.sql.execute.NoPutResultSetImpl.clearCurrentRow()
org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.updateRow(ExecRow)
org.apache.derby.impl.sql.compile.CursorNode.init(Object,Object,Object,Object,Object,Object,Object,Object)
org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest.testRunTimeStatistics()
org.apache.derby.impl.sql.execute.RealResultSetStatisticsFactory.getResultSetStatistics(NoPutResultSet)
org.apache.derby.impl.sql.compile.CursorNode.optimizeStatement()
org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()
org.apache.derby.impl.sql.compile.CursorNode.bindStatement()
org.apache.derbyTesting.junit.DerbyDistribution.getProductionClasspath()
org.apache.derbyTesting.junit.DerbyDistribution.getServerClasspath()
org.apache.derbyTesting.junit.DerbyDistribution.getFullClassPath()
org.apache.derbyTesting.junit.DerbyDistribution.getTestingClasspath()
org.apache.derbyTesting.junit.DerbyDistribution.compareTo(Object)
org.apache.derbyTesting.junit.DerbyDistribution.getVersion()
org.apache.derbyTesting.junit.DerbyDistribution.hasRequiredJars(List)
org.apache.derbyTesting.junit.DerbyDistribution.compareTo(DerbyDistribution)
org.apache.derbyTesting.junit.DerbyDistribution.accept(File,String)
org.apache.derbyTesting.junit.DerbyDistribution.getProductionJars(File)
org.apache.derbyTesting.junit.DerbyDistribution.getJars(File)
org.apache.derbyTesting.junit.DerbyDistribution.getTestingJars(File)
org.apache.derbyTesting.junit.DerbyDistribution.constructJarClasspath(File[])
org.apache.derbyTesting.junit.DerbyDistribution.isTestingJar(String)
org.apache.derbyTesting.junit.DerbyDistribution.getInstance(File,DerbyVersion)
org.apache.derbyTesting.junit.DerbyVersion.DerbyVersion(int,int,int,int)
org.apache.derbyTesting.junit.DerbyVersion.atLeastAs(DerbyVersion)
org.apache.derbyTesting.junit.DerbyVersion.atMostAs(DerbyVersion)
org.apache.derbyTesting.junit.DerbyVersion.asSimpleVersion()
org.apache.derbyTesting.junit.DerbyDistribution.DerbyDistribution(DerbyVersion,File[],File[])
org.apache.derbyTesting.junit.DerbyDistribution.getPath(File,String)
org.apache.derbyTesting.junit.DerbyDistribution.hasDerbyRunJar()
org.apache.derbyTesting.junit.DerbyDistribution.getDerbyRunJarPath()
org.apache.derbyTesting.junit.DerbyDistribution.getDerbyClientJarPath()
org.apache.derbyTesting.junit.DerbyDistribution.getDerbyEngineJarPath()
org.apache.derbyTesting.junit.DerbyDistribution.getDerbyNetJarPath()
org.apache.derby.iapi.types.ReaderToUTF8Stream.reset()
org.apache.derby.iapi.types.ReaderToUTF8Stream.markSupported()
org.apache.derbyTesting.unitTests.junit._Suite.suite()
org.apache.derby.iapi.types.SQLClob.readExternalFromArray(ArrayInputStream)
org.apache.derby.iapi.types.SQLClob.getStreamWithDescriptor()
org.apache.derby.iapi.types.SQLClob.setObject(Object)
org.apache.derby.iapi.types.ReaderToUTF8Stream.available()
org.apache.derby.iapi.types.ReaderToUTF8Stream.mark(int)
org.apache.derby.iapi.types.ReaderToUTF8Stream.fillBuffer(int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testTriggersWithClobColumn()
org.apache.derbyTesting.functionTests.tests.jdbc4.UnsupportedVetter.vetMethod(Object,Class,Method,HashSet,HashSet)
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbc4.XA40Test.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.baseSuite(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbc4.DataSourceDecorator.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbc4.ResultSetObjectDecorator.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbc4.StatementTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbc4.StatementTest.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestJDBC40Exception.suite()
org.apache.derbyTesting.functionTests.tests.jdbc4.StatementEventsTest.baseSuite(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.StatementEventsTest.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.suite()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.baseSuite(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.ObjectDecorator.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbc4.ClosedObjectTest.baseSuite(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.ClosedObjectTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbc4.StatementEventsTest.suite()
org.apache.derby.iapi.types.SQLClob.setStreamHeaderFormat(Boolean)
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(ObjectOutput,long)
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(byte[],int,long)
org.apache.derby.impl.jdbc.EmbedPreparedStatement.usePreTenFiveHdrFormat()
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(ObjectOutput,long)
org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long)
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(byte[],int,long)
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.determineMode()
org.apache.derby.iapi.types.SQLChar.setSoftUpgradeMode(Boolean)
org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.expectsCharCount()
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.ClobStreamHeaderGenerator(boolean)
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.suite()
org.apache.derby.impl.store.raw.data.RAFContainer4.writeAtOffset(StorageRandomAccessFile,byte[],long)
org.apache.derby.impl.store.raw.data.RAFContainer.run()
org.apache.derby.client.am.Statement.isolateAnyInitialIdentifier(String)
org.apache.derbyTesting.functionTests.tests.lang.CommentTest.testWrongKeywordLexing_derby4338()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.compressTable()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.modifyColumnDefault(int)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.modifyColumnConstraint(String,boolean)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.getColumnMax(TableDescriptor,String,long)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateNewColumnToDefault(ColumnDescriptor)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.createNewBackingCongloms(ArrayList,long[])
org.apache.derby.impl.sql.execute.AlterTableConstantAction.getAffectedIndexes()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateNewAutoincrementColumn(String,long,long)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.defragmentRows(TransactionController)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.addNewColumnToTable(int)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.modifyColumnType(int)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeConstantAction(Activation)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSPSDescriptorIndex1Scan(String,String)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSPSParams(SPSDescriptor,List)
org.apache.derby.impl.storeless.EmptyDictionary.getSPSParams(SPSDescriptor,Vector)
org.apache.derby.iapi.sql.dictionary.SPSDescriptor.SPSDescriptor(DataDictionary,String,UUID,UUID,UUID,char,boolean,String,String,Timestamp,ExecPreparedStatement,boolean)
org.apache.derby.impl.sql.catalog.SYSSTATEMENTSRowFactory.makeSYSSTATEMENTSrow(boolean,SPSDescriptor)
org.apache.derby.iapi.sql.dictionary.DataDictionary.getSPSParams(SPSDescriptor,List)
org.apache.derby.iapi.sql.dictionary.SPSDescriptor.getUUID()
org.apache.derby.impl.db.BasicDatabase.stop()
org.apache.derbyTesting.junit.RuntimeStatisticsParser.usedNLLeftOuterJoin()
org.apache.derby.impl.sql.compile.HalfOuterJoinNode.transformOuterJoins(ValueNode,int)
org.apache.derbyTesting.functionTests.tests.lang.JoinTest.testNullabilityInValues()
org.apache.derbyTesting.functionTests.tests.lang.JoinTest.testDerby_4405()
org.apache.derbyTesting.functionTests.tests.lang.JoinTest.insertTourRow(PreparedStatement,String,String)
org.apache.derbyTesting.functionTests.tests.lang.JoinTest.insertTourRow(PreparedStatement,int,String,String)
org.apache.derby.impl.sql.compile.ColumnReference.remapColumnReferencesToExpressions()
org.apache.derby.impl.sql.compile.ResultColumnList.getResultColumn(int,int)
org.apache.derby.jdbc.ClientConnectionPoolDataSource.maxStatementsToPool()
org.apache.derby.jdbc.ClientConnectionPoolDataSource.getMaxStatements()
org.apache.derby.jdbc.ClientConnectionPoolDataSource.setMaxStatements(int)
org.apache.derby.jdbc.ClientConnectionPoolDataSource.readObject(ObjectInputStream)
org.apache.derby.jdbc.ClientConnectionPoolDataSource.validateState()
org.apache.derbyTesting.functionTests.tests.management.JDBCMBeanTest.testAttributeDriverLevel()
org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering)
org.apache.derby.impl.sql.GenericStatement.prepMinion(LanguageConnectionContext,boolean,Object[],SchemaDescriptor,boolean)
org.apache.derby.iapi.types.CharStreamHeaderGenerator.expectsCharCount()
org.apache.derby.iapi.types.CharStreamHeaderGenerator.generateInto(byte[],int,long)
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.testInsertAndFetchLarger()
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.insertAndFetchTest(long)
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.testInsertAndFetchMediumPlus()
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.testInsertAndFetchLarge()
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.testInsertAndFetchSmall()
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.testInsertAndFetchMedium()
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.testInsertAndFetchZeroLength()
org.apache.derbyTesting.functionTests.tests.jdbc4.ClobTest.testInsertAndFetchVerySmall()
org.apache.derby.impl.jdbc.UTF8ReaderTest.testRepositioningWithinBuffer()
org.apache.derby.impl.jdbc.UTF8ReaderTest.testRepositioningWithinBufferRealText()
org.apache.derby.impl.jdbc.UTF8ReaderTest.testRepositioningSimple()
org.apache.derby.impl.jdbc.EmbedClob.EmbedClob(EmbedConnection,StringDataValue)
org.apache.derby.impl.jdbc.UTF8Reader.resetUTF8Reader()
org.apache.derby.impl.jdbc.SmallTemporaryClobTest.setUp()
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.ClobStreamHeaderGenerator(StringDataValue)
org.apache.derby.impl.jdbc.BiggerTemporaryClobTest.setUp()
org.apache.derby.impl.jdbc.UTF8Reader.UTF8Reader(InputStream,long,ConnectionChild,Object)
org.apache.derby.impl.jdbc.UTF8Reader.UTF8Reader(CharacterStreamDescriptor,ConnectionChild,Object)
org.apache.derby.impl.jdbc.UTF8Reader.fillBuffer()
org.apache.derby.iapi.types.SQLChar.readExternal(ObjectInput)
org.apache.derby.iapi.types.SQLChar.readExternal(ObjectInput,int,final)
org.apache.derby.iapi.types.SQLChar.getStreamHeaderGenerator()
org.apache.derby.iapi.types.SQLChar.writeExternal(ObjectOutput)
org.apache.derby.iapi.types.SQLChar.writeUTF(ObjectOutput,int,final)
org.apache.derby.iapi.types.SQLChar.readExternalFromArray(ArrayInputStream)
org.apache.derby.iapi.types.SQLChar.resetForMaterialization()
org.apache.derby.iapi.types.ReaderToUTF8Stream.read(byte,int,int)
org.apache.derby.iapi.types.ReaderToUTF8Stream.checkSufficientData()
org.apache.derby.iapi.types.ReaderToUTF8Stream.ReaderToUTF8Stream(Reader,int,int,String,StreamHeaderGenerator)
org.apache.derby.iapi.services.io.ArrayInputStream.readDerbyUTF(char[][],int)
org.apache.derby.iapi.types.ReaderToUTF8Stream.read()
org.apache.derby.iapi.types.ReaderToUTF8Stream.ReaderToUTF8Stream(Reader,int,String,StreamHeaderGenerator)
org.apache.derby.impl.jdbc.StoreStreamClob.getRawByteStream()
org.apache.derby.impl.jdbc.StoreStreamClob.getCharLength()
org.apache.derby.impl.jdbc.StoreStreamClob.getInternalReader(long)
org.apache.derby.impl.jdbc.StoreStreamClob.getReader(long)
org.apache.derby.iapi.types.CharStreamHeaderGenerator.writeEOF(byte[],int,long)
org.apache.derby.iapi.types.CharStreamHeaderGenerator.generateInto(ObjectOutput,long)
org.apache.derby.impl.jdbc.StoreStreamClob.StoreStreamClob(InputStream,ConnectionChild)
org.apache.derby.iapi.types.CharStreamHeaderGenerator.writeEOF(ObjectOutput,long)
org.apache.derby.impl.sql.execute.NormalizeResultSet.updateRow(ExecRow,RowChanger)
org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.updateRow(ExecRow,RowChanger)
org.apache.derby.impl.sql.execute.UpdateResultSet.collectAffectedRows()
org.apache.derby.impl.jdbc.EmbedResultSet.deleteRow()
org.apache.derby.impl.sql.execute.NoPutResultSetImpl.updateRow(ExecRow,RowChanger)
org.apache.derby.impl.jdbc.EmbedResultSet.insertRow()
org.apache.derby.impl.jdbc.EmbedResultSet.updateRow()
org.apache.derby.impl.sql.execute.RowChangerImpl.findSelectedCol(int)
org.apache.derby.impl.sql.execute.RowChangerImpl.toString()
org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet.updateRow(ExecRow,RowChanger)
org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.updateRow(ExecRow)
org.apache.derby.impl.sql.execute.CurrentOfResultSet.updateRow(ExecRow)
org.apache.derby.iapi.sql.execute.NoPutResultSet.updateRow(ExecRow)
org.apache.derby.impl.jdbc.EmbedConnection.getlobHMObj()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.executeUpdate(LanguageConnectionContext,String)
org.apache.derby.impl.sql.execute.AlterTableConstantAction.getColumnMax(Activation,TableDescriptor,String,long,long)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupNestedSessionContext(Activation)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getTopLevelSQLSessionContext()
org.apache.derby.iapi.sql.PreparedStatement.executeSubStatement(LanguageConnectionContext,boolean,long)
org.apache.derby.impl.sql.execute.GenericTriggerExecutor.executeSPS(SPSDescriptor)
org.apache.derby.iapi.sql.PreparedStatement.execute(Activation,long)
org.apache.derby.iapi.sql.PreparedStatement.executeSubStatement(Activation,Activation,boolean,long)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setDefaultSchema(Activation,SchemaDescriptor)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.resetSchemaUsages(Activation,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.getCurrentRole()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getDefaultSchema(Activation)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getCurrentRoleIdDelimited(Activation)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getCurrentSQLSessionContext(Activation)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setCurrentRole(Activation,String)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getCurrentRoleId(Activation)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getTopLevelSQLSessionContext()
org.apache.derby.impl.sql.execute.ConstraintConstantAction.validateConstraint(String,String,TableDescriptor,LanguageConnectionContext,boolean)
org.apache.derby.impl.sql.GenericActivationHolder.getCallActivation()
org.apache.derby.impl.sql.GenericActivationHolder.setCallActivation(Activation)
org.apache.derby.impl.sql.GenericPreparedStatement.executeSubStatement(Activation,Activation,boolean,long)
org.apache.derby.impl.sql.GenericPreparedStatement.executeSubStatement(LanguageConnectionContext,boolean,long)
org.apache.derby.impl.sql.GenericPreparedStatement.getActivation(LanguageConnectionContext,boolean)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupSubStatementSessionContext(Activation)
org.apache.derby.impl.jdbc.EmbedStatement.executeStatement(Activation,boolean,boolean)
org.apache.derby.impl.sql.execute.BaseActivation.getCallActivation()
org.apache.derby.impl.sql.execute.BaseActivation.setCallActivation(Activation)
org.apache.derby.impl.sql.execute.BaseActivation.getNestedSQLSessionContext()
org.apache.derby.impl.sql.GenericActivationHolder.getNestedSQLSessionContext()
org.apache.derby.impl.sql.GenericPreparedStatement.execute(Activation,long)
org.apache.derby.impl.sql.GenericPreparedStatement.executeStmt(Activation,boolean,long)
org.apache.derby.iapi.sql.Activation.getSQLSessionContextForChildren()
org.apache.derby.iapi.sql.Activation.setupSQLSessionContextForChildren(boolean)
org.apache.derby.iapi.sql.Activation.setParentActivation(Activation)
org.apache.derby.iapi.sql.Activation.getParentActivation()
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.decorateSQL(Statement)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.testDefaultCurrentRole()
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.testCurrentRoleInWeirdContexts()
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.calledNested()
org.apache.derbyTesting.functionTests.harness.NetServer.NetServer(File,String,String,String,String,String,boolean)
org.apache.derbyTesting.functionTests.harness.RunTest.main(String[])
org.apache.derbyTesting.functionTests.harness.RunTest.createPropString()
org.apache.derby.tools.dblook.go()
org.apache.derbyTesting.functionTests.tests.lang.GrantRevokeDDLTest.testGrantRevokeDDL2()
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.transferAlphabetData(OutputStream,long)
org.apache.derby.impl.jdbc.EmbedBlob.setBytes(long,byte[],int,int)
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testSetBytesReturnValueLarge()
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testSetBytesReturnValueLargeStateChange()
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testSetBytesReturnValueSmall()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMappingTest.setXXX(Statement,PreparedStatement,PreparedStatement,int)
org.apache.derby.client.am.PreparedStatement.setObject(int,Object)
org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(int,Object)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ParameterMappingTest.setXXX_setObjectNullNoTypeSpec(Statement,PreparedStatement,PreparedStatement,int)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getRoutineList(String,String,char)
org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getNumericFunctions()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getObjectName()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.setReferencedColumnMap(FormatableBitSet)
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getDependableFinder()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.referencedColumnMapPut(FormatableBitSet)
org.apache.derby.iapi.sql.dictionary.TableDescriptor.getReferencedColumnMap()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.initialValue()
org.apache.derby.iapi.sql.dictionary.TableDescriptor.referencedColumnMapGet()
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.getFileInputStream(final)
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.exists(final)
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.length(final)
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.run()
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.BlobTest(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.setUp()
org.apache.derby.client.am.LogicalConnection40.getClientInfo(String)
org.apache.derby.client.am.LogicalConnection40.isValid(int)
org.apache.derby.client.am.LogicalConnection40.isWrapperFor(Class)
org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties)
org.apache.derby.client.am.LogicalConnection40.createNClob()
org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class)
org.apache.derby.client.am.LogicalConnection40.createSQLXML()
org.apache.derby.client.am.LogicalConnection40.getClientInfo()
org.apache.derby.client.am.LogicalConnection.checkForNullPhysicalConnection()
org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection)
org.apache.derby.client.am.LogicalConnection40.createBlob()
org.apache.derby.client.am.LogicalConnection40.createClob()
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented()
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testGetBinaryStringLongNotImplemented()
org.apache.derby.client.ClientPooledConnection.createLogicalConnection()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet)
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1()
org.apache.derby.client.am.LogicalConnection40.unwrap(Class)
org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String)
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2()
org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1()
org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle)
org.apache.derby.impl.store.raw.data.OverflowInputStream.fillByteHolder()
org.apache.derby.iapi.services.io.FormatIdInputStream.cloneStream()
org.apache.derby.iapi.types.SQLBlob.cloneValue(boolean)
org.apache.derby.iapi.types.SQLDecimal.getClone()
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.cloneRow(ExecRow)
org.apache.derby.iapi.types.SQLBoolean.cloneValue(boolean)
org.apache.derby.iapi.types.SQLChar.cloneObject()
org.apache.derby.iapi.store.access.BackingStoreHashtable.cloneRow(DataValueDescriptor[])
org.apache.derby.iapi.types.SQLDate.cloneValue(boolean)
org.apache.derby.impl.sql.execute.MultiProbeTableScanResultSet.openCore()
org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation)
org.apache.derby.iapi.types.CollatorSQLClob.getClone()
org.apache.derby.impl.store.access.heap.HeapRowLocation.cloneValue(boolean)
org.apache.derby.impl.store.raw.data.OverflowInputStream.resetStream()
org.apache.derby.iapi.types.DataValueDescriptor.cloneHolder()
org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[])
org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory)
org.apache.derby.iapi.types.SQLTimestamp.getClone()
org.apache.derby.impl.store.access.StorableFormatId.cloneValue(boolean)
org.apache.derby.iapi.types.SQLLongint.getClone()
org.apache.derby.impl.sql.execute.CardinalityCounter.clone(DataValueDescriptor[])
org.apache.derby.iapi.types.SQLClob.cloneValue(boolean)
org.apache.derby.impl.sql.execute.ValueRow.getRowArrayClone()
org.apache.derby.impl.sql.execute.ValueRow.cloneColumn(int)
org.apache.derby.impl.store.access.btree.BTreeMaxScan.fetchMaxRowFromBeginning(DataValueDescriptor[])
org.apache.derby.impl.sql.execute.BaseActivation.getRowLocationTemplate(int)
org.apache.derby.iapi.types.BinaryDecimal.getClone()
org.apache.derby.iapi.types.CollatorSQLLongvarchar.cloneValue(boolean)
org.apache.derby.iapi.types.SQLVarchar.cloneValue(boolean)
org.apache.derby.impl.store.access.conglomerate.GenericConglomerate.cloneValue(boolean)
org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean)
org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow)
org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int)
org.apache.derby.iapi.types.SQLRef.getClone()
org.apache.derby.impl.sql.execute.DependentResultSet.openIndexScan(ExecRow)
org.apache.derby.iapi.types.CollatorSQLVarchar.cloneValue(boolean)
org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(DataValueDescriptor[])
org.apache.derby.iapi.types.CollatorSQLChar.cloneValue(boolean)
org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation)
org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager)
org.apache.derby.iapi.types.DataType.cloneHolder()
org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore()
org.apache.derby.iapi.types.SQLInteger.cloneValue(boolean)
org.apache.derby.impl.sql.GenericParameter.getClone(GenericParameterValueSet)
org.apache.derby.iapi.types.SQLTime.getClone()
org.apache.derby.impl.sql.execute.ValueRow.getClone(FormatableBitSet)
org.apache.derby.impl.sql.execute.ValueRow.getNewNullRow()
org.apache.derby.impl.sql.execute.MaxMinAggregator.accumulate(DataValueDescriptor)
org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)
org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean)
org.apache.derby.iapi.types.SQLSmallint.getClone()
org.apache.derby.iapi.types.SQLLongvarchar.cloneValue(boolean)
org.apache.derby.iapi.types.SQLReal.cloneValue(boolean)
org.apache.derby.iapi.types.SQLBinary.cloneValue(boolean)
org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(ExecRow)
org.apache.derby.iapi.types.SQLTinyint.getClone()
org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean)
org.apache.derby.iapi.types.SQLDouble.getClone()
org.apache.derby.impl.sql.execute.SumAggregator.accumulate(DataValueDescriptor)
org.apache.derby.iapi.types.XML.cloneValue(boolean)
org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean)
org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet)
org.apache.derby.iapi.types.UserType.cloneValue(boolean)
org.apache.derby.client.am.LogicalDatabaseMetaData40.unwrap(Class)
org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter)
org.apache.derby.client.am.LogicalConnection40.newLogicalDatabaseMetaData()
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.testConnectionLeakInDatabaseMetaData()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsStatementPooling()
org.apache.derby.client.am.LogicalDatabaseMetaData.locatorsUpdateCopy()
org.apache.derby.client.am.LogicalDatabaseMetaData.getSQLStateType()
org.apache.derby.client.am.LogicalDatabaseMetaData.getJDBCMinorVersion()
org.apache.derby.client.am.LogicalDatabaseMetaData.getJDBCMajorVersion()
org.apache.derby.client.am.LogicalDatabaseMetaData40.supportsStoredFunctionsUsingCallSyntax()
org.apache.derby.client.am.LogicalDatabaseMetaData40.isWrapperFor(Class)
org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData40.getRowIdLifetime()
org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData40.getClientInfoProperties()
org.apache.derby.client.am.LogicalDatabaseMetaData40.autoCommitFailureClosesAllResultSets()
org.apache.derby.client.am.LogicalDatabaseMetaData.getIdentifierQuoteString()
org.apache.derby.client.am.LogicalDatabaseMetaData.storesMixedCaseQuotedIdentifiers()
org.apache.derby.client.am.LogicalDatabaseMetaData.getNumericFunctions()
org.apache.derby.client.am.LogicalDatabaseMetaData.getSQLKeywords()
org.apache.derby.client.am.LogicalDatabaseMetaData.getSystemFunctions()
org.apache.derby.client.am.LogicalDatabaseMetaData.getStringFunctions()
org.apache.derby.client.am.LogicalDatabaseMetaData.getSearchStringEscape()
org.apache.derby.client.am.LogicalDatabaseMetaData.getTimeDateFunctions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMixedCaseIdentifiers()
org.apache.derby.client.am.LogicalDatabaseMetaData.usesLocalFilePerTable()
org.apache.derby.client.am.LogicalDatabaseMetaData.storesLowerCaseIdentifiers()
org.apache.derby.client.am.LogicalDatabaseMetaData.storesUpperCaseIdentifiers()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMixedCaseQuotedIdentifiers()
org.apache.derby.client.am.LogicalDatabaseMetaData.storesMixedCaseIdentifiers()
org.apache.derby.client.am.LogicalDatabaseMetaData.storesLowerCaseQuotedIdentifiers()
org.apache.derby.client.am.LogicalDatabaseMetaData.storesUpperCaseQuotedIdentifiers()
org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedAtEnd()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseProductName()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseProductVersion()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverName()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverVersion()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverMajorVersion()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverMinorVersion()
org.apache.derby.client.am.LogicalDatabaseMetaData.usesLocalFiles()
org.apache.derby.client.am.LogicalDatabaseMetaData.allProceduresAreCallable()
org.apache.derby.client.am.LogicalDatabaseMetaData.allTablesAreSelectable()
org.apache.derby.client.am.LogicalDatabaseMetaData.getURL()
org.apache.derby.client.am.LogicalDatabaseMetaData.getUserName()
org.apache.derby.client.am.LogicalDatabaseMetaData.isReadOnly()
org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedHigh()
org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedLow()
org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedAtStart()
org.apache.derby.client.am.LogicalDatabaseMetaData.getRealMetaDataObject()
org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter)
org.apache.derby.client.am.LogicalConnection.getMetaData()
org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsUnion()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsUnionAll()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenCursorsAcrossCommit()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenCursorsAcrossRollback()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInExists()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInIns()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInQuantifieds()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCorrelatedSubqueries()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnNameLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInGroupBy()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInIndex()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInOrderBy()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenStatementsAcrossCommit()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenStatementsAcrossRollback()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxBinaryLiteralLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCharLiteralLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInPrivilegeDefinitions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInIndexDefinitions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInProcedureCalls()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInDataManipulation()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInDataManipulation()
org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogSeparator()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInTableDefinitions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInProcedureCalls()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSelectForUpdate()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsPositionedUpdate()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInComparisons()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsStoredProcedures()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInIndexDefinitions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInTableDefinitions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsPositionedDelete()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInPrivilegeDefinitions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92IntermediateSQL()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92FullSQL()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsExtendedSQLGrammar()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92EntryLevelSQL()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMinimumSQLGrammar()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCoreSQLGrammar()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleTransactions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsNonNullableColumns()
org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogTerm()
org.apache.derby.client.am.LogicalDatabaseMetaData.isCatalogAtStart()
org.apache.derby.client.am.LogicalDatabaseMetaData.getSchemaTerm()
org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureTerm()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsFullOuterJoins()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsLimitedOuterJoins()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsIntegrityEnhancementFacility()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOuterJoins()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTableCorrelationNames()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert()
org.apache.derby.client.am.LogicalDatabaseMetaData.nullPlusNonNullIsNull()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsColumnAliasing()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsAlterTableWithDropColumn()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsAlterTableWithAddColumn()
org.apache.derby.client.am.LogicalDatabaseMetaData.getExtraNameCharacters()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleResultSets()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsLikeEscapeClause()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupByBeyondSelect()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupByUnrelated()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupBy()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOrderByUnrelated()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsExpressionsInOrderBy()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDifferentTableCorrelationNames()
org.apache.derby.client.am.LogicalDatabaseMetaData.deletesAreDetected(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.insertsAreDetected(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsBatchUpdates()
org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[])
org.apache.derby.client.am.LogicalDatabaseMetaData.getConnection()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSavepoints()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsNamedParameters()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleOpenResults()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGetGeneratedKeys()
org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetHoldability(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.getResultSetHoldability()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseMajorVersion()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseMinorVersion()
org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getTypeInfo()
org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetType(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean)
org.apache.derby.client.am.LogicalDatabaseMetaData.ownUpdatesAreVisible(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int)
org.apache.derby.client.am.LogicalDatabaseMetaData.ownInsertsAreVisible(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.ownDeletesAreVisible(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.othersDeletesAreVisible(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.othersUpdatesAreVisible(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.updatesAreDetected(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.othersInsertsAreVisible(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDataManipulationTransactionsOnly()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTransactions()
org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTransactionIsolationLevel(int)
org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.dataDefinitionCausesTransactionCommit()
org.apache.derby.client.am.LogicalDatabaseMetaData.dataDefinitionIgnoredInTransactions()
org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogs()
org.apache.derby.client.am.LogicalDatabaseMetaData.getTableTypes()
org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[])
org.apache.derby.client.am.LogicalDatabaseMetaData.getSchemas()
org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean)
org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String)
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCursorNameLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxConnections()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInTable()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInSelect()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCatalogNameLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxProcedureNameLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxSchemaNameLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxIndexLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxStatements()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxStatementLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.doesMaxRowSizeIncludeBlobs()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxRowSize()
org.apache.derby.client.am.LogicalDatabaseMetaData.getDefaultTransactionIsolation()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxUserNameLength()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxTablesInSelect()
org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxTableNameLength()
org.apache.derby.jdbc.ClientBaseDataSource.updateDataSourceValues(Properties)
org.apache.derby.jdbc.ClientBaseDataSource.getSSLModeFromString(String)
org.apache.derby.jdbc.ClientBaseDataSource.getSsl()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.setUp()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testGetClobBeforeAndAfterUpdateStream()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.checkContentsBeforeAndAfterUpdatingClob(ResultSet)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testGetClobBeforeAndAfterUpdate()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testGetBlobBeforeAndAfterUpdate()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.checkContentsBeforeAndAfterUpdatingBlob(ResultSet)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testGetBlobBeforeAndAfterUpdateStream()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.create_10_5_system_procedures(TransactionController,HashSet)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.create_10_3_system_procedures_SYSIBM(TransactionController,HashSet)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.create_10_1_system_procedures(TransactionController,HashSet,UUID)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.create_SYSCS_procedures(TransactionController,HashSet)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getUUIDForCoreTable(String,String,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.upgrade_addColumns(CatalogRowFactory,int[],TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getAliasDescriptor(String,String,char)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.computeRowLocation(TransactionController,TableDescriptor,String)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.setAutoincrementValue(TransactionController,UUID,String,long,boolean)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaHeap(FormatableBitSet,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addSystemTableToDictionary(TabInfoImpl,SchemaDescriptor,TransactionController,DataDescriptorGenerator)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSubCheckConstraint(UUID)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getConglomerateDescriptors(UUID)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getConglomerateDescriptors(long)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getAliasDescriptor(UUID)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getForeignKeys(UUID)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getConstraints(UUID,int,int)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.addConstraintDescriptor(ConstraintDescriptor,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateConstraintDescriptor(ConstraintDescriptor,UUID,int[],TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropFileInfoDescriptor(FileInfoDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateTriggerDescriptor(TriggerDescriptor,UUID,int[],TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getConstraintDescriptorViaIndex(int,ExecIndexRow,TabInfoImpl,TableDescriptor,ConstraintDescriptorList,boolean)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getConstraintDescriptorViaHeap(ScanQualifier[][],TabInfoImpl,TupleDescriptor,List)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.isSchemaReferenced(TransactionController,TabInfoImpl,int,int,DataValueDescriptor)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropTableDescriptor(TableDescriptor,SchemaDescriptor,TransactionController)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateLockGranularity(TableDescriptor,SchemaDescriptor,char,TransactionController)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p3.testReplication_Local_3_p3_StateNegativeTests()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DataSourceTest.testBadConnectionAttributeSyntax()
org.apache.derby.jdbc.ClientBaseDataSource.handleConnectionException(LogWriter,SqlException)
org.apache.derby.jdbc.ClientXADataSource.getXAConnection(String,String)
org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnection(String,String)
org.apache.derby.jdbc.ClientDataSource.getConnection(String,String)
org.apache.derby.jdbc.ClientBaseDataSource.constructUrl()
org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnection()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.getStartupProperties(boolean)
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.toString()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.suite()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.decorateTest(boolean,boolean,Outcome)
org.apache.derby.drda.NetworkServerControl.installSecurityManager(NetworkServerControlImpl)
org.apache.derbyTesting.junit.SupportFilesSetup.copyFiles(String,String[])
org.apache.derby.drda.NetworkServerControl.verifySecurityState(NetworkServerControlImpl)
org.apache.derbyTesting.junit.SupportFilesSetup.privCopyFiles(final,final)
org.apache.derbyTesting.junit.SupportFilesSetup.run()
org.apache.derbyTesting.junit.SupportFilesSetup.SupportFilesSetup(Test,String[])
org.apache.derbyTesting.junit.SupportFilesSetup.setUp()
org.apache.derby.impl.io.vfmem.DataStore.DataStore(String)
org.apache.derby.impl.io.vfmem.DataStoreEntry.release()
org.apache.derby.impl.io.vfmem.DataStore.listChildren(String)
org.apache.derby.impl.io.vfmem.DataStore.move(StorageFile,StorageFile)
org.apache.derby.impl.io.vfmem.DataStore._deleteAll(String)
org.apache.derby.impl.io.vfmem.DataStore.createEntry(String,boolean)
org.apache.derby.impl.io.vfmem.DataStore.createAllParents(String)
org.apache.derby.impl.io.vfmem.DataStore.getEntry(String)
org.apache.derby.client.am.Statement.parseSqlAndSetSqlModes(String)
org.apache.derbyTesting.functionTests.tests.lang.CommentTest.suite()
org.apache.derby.client.am.Statement.getStatementToken(String)
org.apache.derbyTesting.functionTests.tests.lang.CommentTest.testInitialComment_derby4338()
org.apache.derbyTesting.functionTests.tests.lang.CommentTest.testBracketedComments()
org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48SelfLockingRecoveryDeadlockDetectionOn()
org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreate(DataDictionary,Activation,String)
org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.LazyDefaultSchemaCreationTest(String)
org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48testNewSchemaHang()
org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48SelfLockingRecovery()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController)
org.apache.derbyTesting.junit.BaseTestCase.fail(String,Exception)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.isInitialDefaultSchema(String)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(String,TransactionController)
org.apache.derby.impl.sql.compile.PredicateList.joinClauseTransitiveClosure(int,FromList,CompilerContext)
org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob)
org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long)
org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int)
org.apache.derby.impl.jdbc.ClobUpdatableReader.close()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.setUp()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.tearDown()
org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(LOBInputStream,ConnectionChild)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.testUpdateableReader()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.testMultiplexedOperationProblem()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.assertCorrectChar(int,int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.getUnicodeString()
org.apache.derby.impl.jdbc.ClobStreamControl.getReader(long)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.ClobUpdateableReaderTest(String)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdateableReaderTest.testUpdateableStoreReader()
org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)
org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream()
org.apache.derby.impl.jdbc.ClobUpdateableReader.updateIfRequired()
org.apache.derby.impl.jdbc.ClobUpdateableReader.init(LOBInputStream,long)
org.apache.derby.impl.jdbc.ClobUpdateableReader.close()
org.apache.derby.impl.jdbc.ClobUpdateableReader.read(char[],int,int)
org.apache.derby.impl.jdbc.ClobUpdateableReader.ClobUpdateableReader(EmbedClob,long,long)
org.apache.derby.impl.jdbc.ClobUpdateableReader.ClobUpdateableReader(EmbedClob)
org.apache.derby.impl.jdbc.ClobUpdateableReader.ClobUpdateableReader(LOBInputStream,ConnectionChild)
org.apache.derby.impl.jdbc.ClobUpdatableReader.updateIfRequired()
org.apache.derby.impl.jdbc.ClobUpdatableReader.init(LOBInputStream,long)
org.apache.derby.iapi.sql.compile.CompilerContext.pushCompilationSchema(SchemaDescriptor)
org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(DataDictionary,FromList)
org.apache.derby.impl.sql.compile.FromSubquery.bindExpressions(FromList)
org.apache.derby.iapi.sql.compile.CompilerContext.popCompilationSchema()
org.apache.derbyTesting.functionTests.tests.lang.ViewsTest.suite()
org.apache.derby.impl.services.monitor.StorageFactoryService.vetService(StorageFactory,String)
org.apache.derbyTesting.junit.Decorator.encryptedDatabaseBpw(Test,String)
org.apache.derbyTesting.junit.Decorator.encryptedDatabase(Test,final)
org.apache.derbyTesting.junit.Decorator.encryptedDatabaseBpw(Test,final,String)
org.apache.derbyTesting.functionTests.tests.store._Suite.suite()
org.apache.derbyTesting.junit.Decorator.encryptedDatabase(Test)
org.apache.derbyBuild.jirasoap.FilteredIssueListerAntWrapper.setReportDisqualifications(String)
org.apache.derbyBuild.jirasoap.FilteredIssueLister.execJiraJQLQuery(BufferedWriter,String,DerbyVersion)
org.apache.derbyBuild.jirasoap.FilteredIssueLister.execJiraFilterQuery(BufferedWriter,String,long)
org.apache.derbyBuild.jirasoap.FilteredIssueLister.persistFilterResult(DerbyVersion,long,String,DerbyVersion[])
org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)
org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet)
org.apache.derby.client.net.NetConnection.serverSupportsLocators()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement)
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.suite()
org.apache.derby.client.am.Cursor.locator(int)
org.apache.derby.client.am.Cursor.getLocatorProcedures()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableAbsoluteRow()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableMoveToCurrentRow()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.assertInvalid(Clob)
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableUpdateWithLocators()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableWithNoNulls()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testBlobClobStateAfterCloseOnScrollable()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int)
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableWithNulls()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testForwardOnlyWithNoNulls()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testForwardOnlyWithNulls()
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.forwardOnlyTest(String)
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testBlobClobStateForwardOnlyWithNoNulls()
org.apache.derby.client.net.NetCursor.locator(int)
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.LOBLocatorReleaseTest(String)
org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testNoLOBs()
org.apache.derby.client.am.ResultSet.moveToCurrentRowX()
org.apache.derby.client.am.ResultSet.completeLocalCommit(java.util.Iterator)
org.apache.derby.client.am.ResultSet.completeLocalRollback(java.util.Iterator)
org.apache.derby.client.am.ResultSet.markLOBAsAccessed(int)
org.apache.derbyTesting.functionTests.tests.derbynet._Suite.suite()
org.apache.derby.client.am.ResultSet.closeX()
org.apache.derby.impl.store.raw.log.FileLogger.redo(RawTransaction,TransactionFactory,StreamLogScan,long,long)
org.apache.derbyTesting.functionTests.harness.RunTest.doCleanup(String)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.doCreateIndexStatsRefresher()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.disableIndexStatsRefresher()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getIndexStatsRefresher(boolean)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.stop()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.createIndexStatsRefresher(Database,String)
org.apache.derby.impl.storeless.EmptyDictionary.getIndexStatsRefresher(boolean)
org.apache.derby.impl.storeless.EmptyDictionary.createIndexStatsRefresher(Database,String)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.boot(boolean,Properties)
org.apache.derby.impl.storeless.EmptyDictionary.disableIndexStatsRefresher()
org.apache.derby.impl.storeless.EmptyDictionary.doCreateIndexStatsRefresher()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testStatsCreatedOnGrowthThenDeleteDb()
org.apache.derbyBuild.ReleaseNotesGenerator.buildFixedBugsList()
org.apache.derbyBuild.ReleaseNotesGenerator.buildReleaseNoteIssuesList()
org.apache.derby.iapi.util.StringUtil.doRegExpA(String,String)
org.apache.derby.iapi.util.StringUtil.doRegExpB(String)
org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics.getStatementExecutionPlanText(int)
org.apache.derbyTesting.junit.RuntimeStatisticsParser.findQualifiers()
org.apache.derby.iapi.util.StringUtil.doRegExpC(String,String)
org.apache.derby.iapi.util.StringUtil.ensureIndent(String,int)
org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics.getStatementExecutionPlanText(int)
org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics.getStatementExecutionPlanText(int)
org.apache.derby.impl.sql.compile.ResultSetNode.setResultToBooleanTrueNode(boolean)
org.apache.derby.impl.sql.compile.SubqueryNode.bindExpression(FromList,SubqueryList,Vector)
org.apache.derby.impl.sql.compile.SelectNode.verifySelectStarSubquery(FromList,int)
org.apache.derbyTesting.functionTests.tests.lang.NestedWhereSubqueryTest.suite()
org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.createQueryObject(Class)
org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.createPooledConnection(String,String,boolean)
org.apache.derby.impl.tools.ij.xaHelper.getXADataSource()
org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getQueryObjectGenerator()
org.apache.derby.jdbc.EmbeddedXADataSource.getXAConnection()
org.apache.derby.jdbc.EmbeddedXADataSource.getXAConnection(String,String)
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.delete(final)
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.getFileWriter(final)
org.apache.derbyTesting.functionTests.tests.jdbcapi.SURTest.tearDown()
org.apache.derbyTesting.functionTests.tests.jdbcapi.UpdatableResultSetTest.tearDown()
org.apache.derby.client.net.NetConnection40.setClientInfo(Properties)
org.apache.derby.client.net.NetConnection40.setClientInfo(String,String)
org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource)
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException)
org.apache.derby.client.am.FailedProperties40.FailedProperties40(Properties)
org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(Properties)
org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[])
org.apache.derby.client.am.FailedProperties40.getProperties()
org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String)
org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[])
org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])
org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(Properties)
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testSetClientInfoProperties()
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testCreateArrayNotImplemented()
org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource)
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testSetClientInfoString()
org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource)
org.apache.derby.iapi.jdbc.FailedProperties40.FailedProperties40(Properties)
org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource)
org.apache.derbyTesting.functionTests.tests.jdbc4.TestQueryObject.testConnectionQuery(Connection)
org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[])
org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String)
org.apache.derby.iapi.jdbc.FailedProperties40.getProperties()
org.apache.derby.client.am.PreparedStatement.setBinaryStream(int,java.io.InputStream,long)
org.apache.derby.client.am.PreparedStatement.checkStreamLength(long)
org.apache.derby.client.am.PreparedStatement.setCharacterStream(int,java.io.Reader,long)
org.apache.derby.impl.services.locks.ConcurrentLockSet.lockObject(CompatibilitySpace,Lockable,Object,int)
org.apache.derby.impl.services.locks.LockSet.lockObject(CompatibilitySpace,Lockable,Object,int)
org.apache.derby.iapi.util.IdUtil.parseRoleId(String)
org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[])
org.apache.derby.iapi.jdbc.BrokeredConnection40.createBlob()
org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[])
org.apache.derby.client.am.LogicalConnection40.createArray(String,Object[])
org.apache.derby.client.am.LogicalConnection40.createStruct(String,Object[])
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testCreateNClobNotImplemented()
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testCreateStructNotImplemented()
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testGetClientInfoNotImplemented()
org.apache.derbyTesting.junit.TestConfiguration.defaultSecurityManagerSetup()
org.apache.derbyTesting.junit.SecurityManagerSetup.setSecurityPolicy(Properties,String)
org.apache.derbyTesting.junit.SecurityManagerSetup.installSecurityManager(String,final)
org.apache.derbyTesting.junit.SecurityManagerSetup.uninstallSecurityManager()
org.apache.derbyTesting.junit.SecurityManagerSetup.getURL(final)
org.apache.derbyTesting.junit.SecurityManagerSetup.run()
org.apache.derbyTesting.junit.SecurityManagerSetup.mergePolicies(URL,URL)
org.apache.derbyTesting.junit.SecurityManagerSetup.mkdir(final)
org.apache.derbyTesting.junit.SecurityManagerSetup.openStream(final)
org.apache.derby.impl.store.access.conglomerate.ConglomerateUtil.readCollationIdArray(int[],ObjectInput)
org.apache.derby.impl.store.access.btree.BTree.getDynamicCompiledConglomInfo()
org.apache.derby.impl.store.access.btree.OpenBTree.init(TransactionManager,TransactionManager,ContainerHandle,Transaction,boolean,int,int,BTreeLockingPolicy,BTree,LogicalUndo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.btree.index.B2I.create(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int)
org.apache.derby.impl.store.access.conglomerate.GenericConglomerate.hasCollatedColumns(int[])
org.apache.derby.impl.store.access.heap.Heap.localReadExternal(ObjectInput)
org.apache.derby.impl.store.access.heap.Heap.getDynamicCompiledConglomInfo()
org.apache.derby.impl.store.access.conglomerate.OpenConglomerate.init(ContainerHandle,Conglomerate,int[],int[],TransactionManager,Transaction,boolean,int,int,LockingPolicy,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.OpenConglomerateScratchSpace(int[],int[])
org.apache.derby.iapi.util.UTF8Util.isDerbyEOFMarker(InputStream)
org.apache.derbyTesting.junit.BaseJDBCTestCase.assertCompileError(String,String)
org.apache.derbyTesting.junit.BaseJDBCTestCase.assertSQLState(String,String,SQLException)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testRaisingOfExceptionsClob()
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertFunctionDBMD(String,Object[][],Object[][])
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.verifyInterval(Clob,long,int,int,int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.testRaisingOfExceptionsBlob()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.checkException(String,SQLException)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BlobClob4BlobTest.verifyInterval(Blob,long,int,int,int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.HoldabilityTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ResultSetCloseTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ScrollResultSetTest.testNextOnLastRowForwardOnly()
org.apache.derbyTesting.functionTests.tests.jdbcapi.UpdateXXXTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ProcedureTest.assertNoResultSetFromExecuteQuery(SQLException)
org.apache.derbyTesting.functionTests.tests.jdbcapi.UpdatableResultSetTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ProcedureTest.assertResultsFromExecuteUpdate(SQLException)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ProcedureTest.assertMultipleResultsFromExecuteQuery(SQLException)
org.apache.derbyTesting.functionTests.tests.jdbcapi.DriverTest.testEmbeddedAttributes()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DriverTest.testDbNameWithSpaces()
org.apache.derbyTesting.functionTests.tests.jdbcapi.SURTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.SURQueryMixTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ConcurrencyTest.baseSuite(String,boolean)
org.apache.derbyTesting.junit.BaseJDBCTestCase.usingDB2Client()
org.apache.derby.client.am.PreparedStatement.setObjectX(int,Object,int,int)
org.apache.derby.impl.jdbc.EmbedPreparedStatement.setObject(int,Object,int,int)
org.apache.derby.impl.sql.compile.SubqueryList.markWhereSubqueries()
org.apache.derbyTesting.functionTests.tests.lang._Suite.suite()
org.apache.derby.impl.store.raw.log.LogToFile.initializeReplicationSlaveRole()
org.apache.derby.impl.store.raw.log.LogToFile.appendLogRecord(byte[],int,int,byte[],int,int)
org.apache.derby.impl.store.raw.log.LogToFile.switchLogFile()
org.apache.derby.impl.services.replication.slave.SlaveController.setupConnection()
org.apache.derby.impl.services.replication.slave.SlaveController.stopSlave()
org.apache.derby.impl.services.replication.slave.SlaveController.startSlave(RawStoreFactory,LogFactory)
org.apache.derby.impl.services.replication.slave.SlaveController.boot(boolean,Properties)
org.apache.derby.impl.services.replication.slave.SlaveController.handleDisconnect(EOFException)
org.apache.derby.impl.services.replication.slave.SlaveController.startLogReceiverThread()
org.apache.derby.impl.services.replication.slave.SlaveController.handleFatalException(Exception)
org.apache.derby.impl.services.replication.slave.SlaveLogReceiverThread.run()
org.apache.derby.impl.services.replication.slave.SlaveLogReceiverThread.handleLogChunk(byte[])
org.apache.derby.impl.services.replication.net.ReplicationMessageReceive.ReplicationMessageReceive(String,int)
org.apache.derby.impl.services.replication.net.ReplicationMessageReceive.initConnection(int)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.invalidateStatements(LanguageConnectionContext,TableDescriptor,boolean)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.writeUpdatedStats(LanguageConnectionContext,TableDescriptor,UUID,long,long[],boolean)
org.apache.derby.impl.store.access.RAMTransaction.getDynamicCompiledConglomInfo(long)
org.apache.derby.iapi.store.access.conglomerate.Conglomerate.getDynamicCompiledConglomInfo()
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace.get_row_for_export(Transaction)
org.apache.derby.impl.store.access.btree.index.B2IController.init(TransactionManager,Transaction,boolean,int,int,LockingPolicy,boolean,B2I,B2IUndo,B2IStaticCompiledInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.btree.index.B2IForwardScan.init(TransactionManager,Transaction,boolean,int,int,LockingPolicy,int,boolean,FormatableBitSet,DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int,B2I,B2IUndo,B2IStaticCompiledInfo,DynamicCompiledOpenConglomInfo)
org.apache.derby.impl.store.access.btree.BTree.getDynamicCompiledConglomInfo(long)
org.apache.derby.client.am.PreparedStatement.setBinaryStreamX(int,java.io.InputStream,int)
org.apache.derby.client.am.PreparedStatement.setCharacterStream(int,Reader)
org.apache.derby.client.am.PreparedStatement.setBinaryStream(int,InputStream)
org.apache.derby.client.am.PreparedStatement40.setNCharacterStream(int,Reader)
org.apache.derby.client.am.PreparedStatement40.setNClob(int,Reader)
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testCombineWithExtraEmptyByteArray()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testCombineOneArray()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testCombineAvailableNull()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testCombineAvailable4bytes()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testCombineNullRead()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testCombineNullReadArray()
org.apache.derby.impl.jdbc.EmbedResultSet40.updateNCharacterStream(int,Reader,long)
org.apache.derby.impl.jdbc.EmbedResultSet40.updateNClob(String,NClob)
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testNegativeLengthArgument()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testNegativeValueInDataCausesEndOfStream()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testTooLittleDataNoCombine()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testTooLittleDataWithCombine()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testTruncateDataFromOneArray()
org.apache.derbyTesting.functionTests.tests.derbynet.ByteArrayCombinerStreamTest.testTruncateDataFromTwoArrays()
org.apache.derby.client.am.ResultSet.updateNClob(String,Reader)
org.apache.derby.client.am.ResultSet.updateNCharacterStream(String,Reader)
org.apache.derby.client.am.ResultSet.updateNClob(int,Reader)
org.apache.derby.client.am.ResultSet.updateNCharacterStream(int,Reader)
org.apache.derby.client.am.Lob.materializeStream(InputStream,String)
org.apache.derby.client.am.PreparedStatement.setBlob(int,InputStream)
org.apache.derby.client.am.PreparedStatement.setClob(int,Reader)
org.apache.derby.impl.jdbc.EmbedResultSet40.updateRowId(String,RowId)
org.apache.derby.impl.jdbc.EmbedResultSet40.updateRowId(int,RowId)
org.apache.derby.client.net.Request.writeScalarStream(boolean,boolean,int,int,java.io.Reader,boolean,int)
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.embonlytmptestSetBinaryStreamLengthless()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.embonlytmptestSetAsciiStreamLengthless()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.embonlytmptestSetCharacterStreamLengthless()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.embonlytmptestSetBlobLengthless()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.embonlytmptestSetClobLengthless()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTest.testHardUpgrade()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTest.testReEncrypt()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DboPowersTest.testEncrypt()
org.apache.derbyTesting.junit.JDBCDataSource.getDataSourceProperties(TestConfiguration)
org.apache.derbyTesting.functionTests.tests.jdbcapi.DataSourceTest.testClientTraceFileDSConnectionAttribute()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DataSourceTest.testJira95ds()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSetAutoincrementValue(RowLocation,TransactionController,boolean,NumberDataValue,boolean)
org.apache.derby.impl.store.raw.data.RAFContainer.writeRAFHeader(Object,StorageRandomAccessFile,boolean,boolean)
org.apache.derby.impl.store.raw.data.RAFContainer.encryptContainer(BaseContainerHandle,String)
org.apache.derby.impl.store.raw.data.RAFContainer.writePage(long,byte[],boolean)
org.apache.derby.impl.store.raw.data.RAFContainer.preAllocate(long,int)
org.apache.derby.impl.services.jce.JCECipherFactory.verifyKey(boolean,StorageFactory,Properties)
org.apache.derby.impl.store.raw.log.LogToFile.syncFile(StorageRandomAccessFile)
org.apache.derby.impl.store.raw.data.BaseDataFileFactory.privGetJBMSLockOnDB()
org.apache.derby.impl.drda.DRDAConnThread.processCommands()
org.apache.derby.impl.sql.GenericParameterValueSet.transferDataValues(ParameterValueSet)
org.apache.derbyTesting.functionTests.tests.derbynet.ShutDownDBWhenNSShutsDownTest.shutdownServerCheckDBShutDown(boolean)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.stop()
org.apache.derby.impl.jdbc.LOBInputStream.asInputStream()
org.apache.derby.impl.jdbc.LOBInputStream.reposition(long)
org.apache.derby.impl.jdbc.LOBInputStream.getPosition()
org.apache.derby.impl.jdbc.PositionedStoreStream.asInputStream()
org.apache.derby.impl.jdbc.PositionedStoreStream.reposition(final)
org.apache.derby.client.ClientPooledConnection40.removeStatementEventListener(StatementEventListener)
org.apache.derby.client.ClientPooledConnection40.onStatementClose(PreparedStatement)
org.apache.derby.client.ClientPooledConnection40.onStatementErrorOccurred(PreparedStatement,SQLException)
org.apache.derby.client.ClientPooledConnection40.addStatementEventListener(StatementEventListener)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.create_10_3_system_procedures_SYSIBM(TransactionController)
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.main(String[])
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.testDatabaseMetaDataMethods(Connection)
org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.runTests(Connection)
org.apache.derbyTesting.junit.JDBC.assertUnorderedResultSet(ResultSet,Object[][],boolean)
org.apache.derby.impl.sql.compile.GroupByNode.addNewColumnsForAggregation()
org.apache.derby.impl.sql.compile.GroupByNode.addUnAggColumns()
org.apache.derby.impl.drda.DDMReader.initialize(InputStream)
org.apache.derby.impl.drda.DDMReader.DDMReader(InputStream)
org.apache.derby.impl.drda.TestProto.processFile(String)
org.apache.derby.impl.drda.TestProto.processIncludeFile()
org.apache.derby.impl.drda.TestProto.TestProto(String,int)
org.apache.derby.impl.drda.TestProto.completeTest()
org.apache.derby.impl.drda.TestProto.reset()
org.apache.derby.impl.drda.TestProto.closeConnection()
org.apache.derby.impl.drda.TestProto.getConnection()
org.apache.derby.impl.drda.TestProto.getHostName()
org.apache.derby.impl.drda.TestProto.checkSQLCARD(int,String)
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.getFileReader(final)
org.apache.derbyTesting.junit.SecurityManagerSetup.determineClasspath()
org.apache.derby.impl.drda.TestProto.getEBCDIC(String)
org.apache.derby.impl.drda.TestProto.cpError(int,int)
org.apache.derby.impl.drda.TestProto.writeEncodedLDString(String,String,int)
org.apache.derby.impl.drda.TestProto.writeEncodedString(String,String)
org.apache.derby.impl.drda.TestProto.getInt()
org.apache.derby.impl.drda.TestProto.convertHex(String)
org.apache.derby.impl.drda.TestProto.checkIntOrCP(int)
org.apache.derby.impl.drda.TestProto.getIntOrCP()
org.apache.derby.impl.drda.TestProto.init()
org.apache.derby.impl.drda.TestProto.processCommand()
org.apache.derby.impl.drda.TestProto.skipDss()
org.apache.derby.impl.drda.TestProto.skipDdm()
org.apache.derby.impl.drda.TestProto.fail(String)
org.apache.derby.impl.drda.TestProto.checkError()
org.apache.derby.impl.drda.TestProto.readLengthAndCodePoint()
org.apache.derby.impl.drda.TestProto.readSecMecAndSECCHKCD()
org.apache.derby.impl.drda.TestProto.getBytes()
org.apache.derby.impl.drda.TestProto.getString()
org.apache.derby.impl.drda.TestProto.getCP()
org.apache.derby.impl.drda.TestProto.decodeCP(String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.testViewInvalidation()
org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.toString()
org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.getPrivName()
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertEverything(int,String,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.testPSInvalidation()
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.testConstraintInvalidation()
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.testTriggerInvalidation()
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertReferencesPrivilege(int,String,String,String,String,String[])
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertTriggerPrivilege(int,String,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertExecutePrivilege(int,String,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertEverything(int,Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertViewExists(boolean,Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertSelectPrivilege(int,String,String,String,String,String[])
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertInsertPrivilege(int,String,String,String,String,String[])
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertUpdatePrivilege(int,String,String,String,String,String[])
org.apache.derby.impl.sql.depend.BasicDependencyManager.getActionString(int)
org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,String,boolean,Activation)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.CNFUser2user(String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.doGrantRevoke(int,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.doGrantRevoke(int,String,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.doGrantRevoke(int,String,String[],String)
org.apache.derby.impl.sql.execute.BaseActivation.getObjectName()
org.apache.derby.impl.sql.execute.BaseActivation.getDependableFinder()
org.apache.derby.impl.sql.execute.BaseActivation.initFromContext(Context)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertSQLState(String[],SQLException)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertConstraintExists(boolean,Connection,String,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertCheckConstraintExists(boolean,Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertFkConstraintExists(boolean,Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertTriggerExists(boolean,Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.doGrantRevoke(int,String,String[],String,String[])
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.getAllColumns(String,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertDeletePrivilege(int,String,String,String,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesConferredPrivilegesTest.assertPsWorks(boolean,PreparedStatement)
org.apache.derby.iapi.sql.dictionary.ViewDescriptor.prepareToInvalidate(Provider,int,LanguageConnectionContext)
org.apache.derby.iapi.sql.dictionary.ViewDescriptor.makeInvalid(int,LanguageConnectionContext)
org.apache.derby.iapi.sql.dictionary.StatementTablePermission.toString()
org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation)
org.apache.derby.impl.sql.GenericActivationHolder.getObjectName()
org.apache.derby.impl.sql.GenericActivationHolder.getObjectID()
org.apache.derby.impl.sql.GenericActivationHolder.execute()
org.apache.derby.impl.sql.GenericActivationHolder.getDependableFinder()
org.apache.derby.impl.sql.execute.BaseActivation.isPersistent()
org.apache.derby.impl.sql.execute.BaseActivation.isValid()
org.apache.derby.impl.sql.execute.BaseActivation.getObjectID()
org.apache.derby.impl.sql.execute.BaseActivation.getClassType()
org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation)
org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean)
org.apache.derby.impl.sql.execute.BaseActivation.makeInvalid(int,LanguageConnectionContext)
org.apache.derby.impl.sql.execute.BaseActivation.prepareToInvalidate(Provider,int,LanguageConnectionContext)
org.apache.derby.impl.sql.execute.DDLConstantAction.trackRoleDependency(Activation,Dependent,SettableBoolean)
org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission)
org.apache.derby.impl.sql.execute.SettableBoolean.SettableBoolean()
org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)
org.apache.derby.impl.sql.execute.SettableBoolean.get()
org.apache.derby.impl.sql.execute.SettableBoolean.set(boolean)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.createRoleClosureIterator(TransactionController,String,boolean)
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getRoleGrantGraph(TransactionController,boolean)
org.apache.derby.impl.sql.GenericActivationHolder.isPersistent()
org.apache.derby.impl.sql.GenericActivationHolder.getClassType()
org.apache.derby.impl.sql.GenericActivationHolder.makeInvalid(int,LanguageConnectionContext)
org.apache.derby.impl.sql.GenericActivationHolder.isValid()
org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor.makeInvalid(int,LanguageConnectionContext)
org.apache.derby.impl.sql.GenericActivationHolder.prepareToInvalidate(Provider,int,LanguageConnectionContext)
org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[])
org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int)
org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation)
org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.tryRole(LanguageConnectionContext,DataDictionary,boolean,String,FormatableBitSet)
org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.toString()
org.apache.derby.iapi.sql.dictionary.TriggerDescriptor.makeInvalid(int,LanguageConnectionContext)
org.apache.derbyTesting.functionTests.tests.jdbcapi.DataSourceTest.timeoutTestDerby1144XADS()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DataSourceTest.timeoutTestDerby1144PooledDS()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DataSourceTest.suite()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DataSourceTest.getTimeoutSuite(String)
org.apache.derby.catalog.SystemProcedures.SQLFUNCTIONPARAMS(String,String,String,String,String,ResultSet[])
org.apache.derbyTesting.functionTests.tests.jdbcapi.metadata_test.runTest()
org.apache.derbyTesting.functionTests.tests.jdbc4.JDBC40TranslationTest.testDatabaseMetaDataFUNCTION_PARAMETER_IN()
org.apache.derbyTesting.functionTests.tests.jdbc4.JDBC40TranslationTest.testDatabaseMetaDataFUNCTION_PARAMETER_INOUT()
org.apache.derbyTesting.functionTests.tests.jdbc4.JDBC40TranslationTest.testDatabaseMetaDataFUNCTION_PARAMETER_UNKNOWN()
org.apache.derby.client.am.DatabaseMetaData.getFunctionParameters(String,String,String,String)
org.apache.derby.client.am.DatabaseMetaData.getFunctionParametersX(String,String,String,String)
org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getFunctionParameters(String,String,String,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.Utils.cleanDir(String,boolean)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.initSlave(String,String,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.initMaster(String,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.run()
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommandRemotely(String,String,String,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommandRemotely(String,String,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommand(String,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommand(String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_direct(String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_ij(String,String,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver(String,String,String,String,String,int,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startSlave_ij(String,String,String,int)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startSlave(String,String,String,int,String,int,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_ij(String,String,String,int)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster(String,String,String,int,String,int,String,int)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runLoad(String,String,String,String,int,String)
org.apache.derbyTesting.functionTests.tests.replicationTests.Utils.rmFiles(File,boolean)
org.apache.derby.iapi.util.InterruptStatus.restoreIntrFlagIfSeen()
org.apache.derbyTesting.functionTests.tests.memorydb.MogTest.dropInMemoryDb()
org.apache.derbyTesting.functionTests.tests.memorydb.MogTest.constructUrl()
org.apache.derbyTesting.functionTests.tests.memorydb.MogTest.obtainConnection()
org.apache.derbyTesting.functionTests.tests.memorydb.BasicInMemoryDbTest.testShutdown()
org.apache.derbyTesting.functionTests.tests.memorydb.BasicInMemoryDbTest.testBootSameDbDifferentSubSubProtocol()
org.apache.derbyTesting.functionTests.tests.memorydb.BasicInMemoryDbTest.testFunctionalityPresent()
org.apache.derbyTesting.functionTests.tests.memorydb.BasicInMemoryDbTest.testCreateBackupBootRestore()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testPositionWithString_ASCII_SimplePartialRecurringPattern()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.setUp()
org.apache.derby.impl.jdbc.LOBStreamControl.copyData(InputStream,long)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testInsertCharacter_ReadOnlyToTemporary()
org.apache.derby.impl.jdbc.InternalClob.getBytePosition(long)
org.apache.derby.impl.jdbc.TemporaryClob.copyClobContent(InternalClob)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTestSetup.setUp()
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.getLogDiscarder()
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.write(char[],int,int)
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.flush()
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.close()
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.suite()
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.driverMgrTestConnectionsToNonexistentDb()
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.driverMgrTestConnectionsToNonexistentDbInMemory()
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.driverMgrConnectionInitiator(String,boolean)
org.apache.derbyTesting.functionTests.tests.memory.ConnectionHandlingJunit.loadDriver(String)
org.apache.derby.jdbc.EmbeddedDataSource.getConnection(String,String)
org.apache.derby.jdbc.EmbeddedDataSource.getConnection()
org.apache.derby.client.am.FailedProperties40.getFirstKey()
org.apache.derby.iapi.jdbc.BrokeredConnection40.getClientInfo(String)
org.apache.derby.client.net.NetConnection40.getClientInfo(String)
org.apache.derby.iapi.jdbc.BrokeredConnection40.getClientInfo()
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testGetClientInfoString()
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testGetClientInfo()
org.apache.derby.client.net.NetConnection40.getClientInfo()
org.apache.derby.impl.jdbc.EmbedConnection40.getClientInfo(String)
org.apache.derby.impl.jdbc.EmbedConnection40.getClientInfo()
org.apache.derby.impl.storeless.EmptyDictionary.existsSchemaOwnedBy(String,TransactionController)
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.wrapInAuthorization(String)
org.apache.derby.impl.storeless.EmptyDictionary.getSystemSchemaDescriptor()
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.testPositive()
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.suite()
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.positiveSuite(String)
org.apache.derby.iapi.sql.dictionary.DataDictionary.existsSchemaOwnedBy(String,TransactionController)
org.apache.derby.iapi.sql.dictionary.DataDictionary.existsGrantToAuthid(String,TransactionController)
org.apache.derby.impl.storeless.EmptyDictionary.existsGrantToAuthid(String,TransactionController)
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.doStmt(String,String,String,String)
org.apache.derby.iapi.util.IdUtil.SQLIdentifier2CanonicalPropertyUsername(String)
org.apache.derby.jdbc.ClientDataSource.getConnection()
org.apache.derby.jdbc.ClientXADataSource.getXAConnection()
org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.getClientSuite()
org.apache.derby.impl.sql.catalog.XPLAINResultSetDescriptor.buildColumnList()
org.apache.derby.impl.sql.catalog.XPLAINSortPropsDescriptor.buildColumnList()
org.apache.derby.impl.sql.catalog.XPLAINStatementDescriptor.buildColumnList()
org.apache.derby.impl.sql.catalog.XPLAINScanPropsDescriptor.buildColumnList()
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.schedule(TableDescriptor)
org.apache.derby.impl.sql.execute.rts.RealBasicNoPutResultSetStatistics.dumpEstimatedCosts(String)
org.apache.derbyBuild.MessageBuilder.plugInArgs(String,String[])
org.apache.derby.impl.sql.execute.rts.RealBasicNoPutResultSetStatistics.formatDouble(double)
org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest.testErrors()
org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest.testNewKeywordNonReserved()
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.computeSequenceRowLocation(TransactionController,String,RowLocation[],SequenceDescriptor[])
org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getStatisticsDescriptors(TableDescriptor)
org.apache.derby.impl.jdbc.LOBStreamControl.LOBStreamControl(String,byte[])
org.apache.derby.impl.jdbc.LOBInputStream.handleSQLException(SQLException)
org.apache.derby.impl.jdbc.LOBInputStream.read()
org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int)
org.apache.derby.impl.jdbc.LOBStreamControl.replaceBytes(byte[],long,long)
org.apache.derby.impl.jdbc.EmbedBlob.EmbedBlob(DataValueDescriptor,EmbedConnection)
org.apache.derby.impl.jdbc.LOBStreamControl.truncate(long)
org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int)
org.apache.derby.impl.jdbc.LOBStreamControl.isValidPostion(long)
org.apache.derby.impl.jdbc.LOBStreamControl.isValidOffset(int,int)
org.apache.derby.impl.jdbc.LOBStreamControl.init(byte[],long)
org.apache.derby.impl.jdbc.LOBStreamControl.updateData(byte[],int,int,long)
org.apache.derby.impl.jdbc.LOBStreamControl.read(long)
org.apache.derby.impl.jdbc.LOBStreamControl.read(byte[],int,int,long)
org.apache.derby.impl.jdbc.LOBStreamControl.write(int,long)
org.apache.derby.impl.jdbc.LOBStreamControl.write(byte[],int,int,long)
org.apache.derby.drda.NetServlet.doGet(HttpServletRequest,HttpServletResponse)
org.apache.derby.iapi.types.SQLBinary.readFromStream(InputStream)
org.apache.derby.impl.sql.compile.CreateTableNode.referencesSessionSchema()
org.apache.derby.impl.sql.compile.CreateTableNode.makeConstantAction()
org.apache.derby.impl.sql.compile.CompilerContextImpl.addRequiredColumnPriv(ColumnDescriptor)
org.apache.derby.impl.sql.compile.CompilerContextImpl.addRequiredTablePriv(TableDescriptor)
org.apache.derby.impl.sql.compile.DropTableNode.makeConstantAction()
org.apache.derby.impl.sql.compile.CreateTableNode.bindStatement()
org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run()
org.apache.derby.iapi.services.io.FileUtil.limitAccessToOwnerViaACLs(File)
org.apache.derby.iapi.services.io.FileUtil.limitAccessToOwner(File)
org.apache.derby.client.am.Connection.readXARollback_()
org.apache.derby.client.am.Connection.writeTransactionStart(Statement)
org.apache.derby.client.am.Connection.writeRollback()
org.apache.derby.client.am.Connection.writeXACommit_()
org.apache.derby.client.am.Connection.writeCommit()
org.apache.derby.client.am.Connection.readCommit()
org.apache.derby.client.am.Connection.writeXATransactionStart(Statement)
org.apache.derby.client.am.Connection.writeXARollback_()
org.apache.derby.client.am.Connection.readLocalXACommit_()
org.apache.derby.client.am.Connection.readXACommit_()
org.apache.derby.client.net.NetConnection.writeXACommit_()
org.apache.derby.client.net.NetConnection.closeResources()
org.apache.derby.client.net.NetConnection.closeForReuse()
org.apache.derby.client.net.NetConnection.closeX()
org.apache.derby.client.net.NetConnection.writeXATransactionStart(Statement)
org.apache.derby.client.net.NetConnection.readXARollback_()
org.apache.derby.client.net.NetConnection.writeXARollback_()
org.apache.derby.client.net.NetConnection.readXACommit_()
org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean)
org.apache.derby.client.net.NetXAConnection.checkPlatformVersion()
org.apache.derby.client.net.NetXAConnection.getNetConnection()
org.apache.derby.client.net.NetXAConnection.readRollback()
org.apache.derby.client.net.NetConnection.close()
org.apache.derby.client.net.NetConnection.isOpen()
org.apache.derby.client.net.NetConnection.setIndoubtTransactions(java.util.Hashtable)
org.apache.derby.client.ClientXAConnection.createControlConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean)
org.apache.derby.client.net.NetXAConnection.getPort(Xid)
org.apache.derby.client.net.NetXAConnection.writeCommit()
org.apache.derby.client.net.NetXAConnection.readCommit()
org.apache.derby.client.net.NetXAConnection.writeRollback()
org.apache.derby.client.net.NetXAConnection.writeLocalXARollback_()
org.apache.derby.client.net.NetXAConnection.readLocalXARollback_()
org.apache.derby.client.net.NetXAConnection.writeTransactionStart(Statement)
org.apache.derby.client.net.NetXAConnection.getUOWID(Xid)
org.apache.derby.client.net.NetXAConnection.writeLocalXAStart_()
org.apache.derby.client.net.NetXAConnection.readLocalXAStart_()
org.apache.derby.client.net.NetXAConnection.writeLocalXACommit_()
org.apache.derby.client.net.NetXAConnection.readLocalXACommit_()
org.apache.derby.client.net.NetXAConnection.finalize()
org.apache.derby.client.net.NetXAConnection.setCorrelatorToken(byte[])
org.apache.derby.client.net.NetXAConnection.getCorrelatorToken()
org.apache.derby.client.net.NetXAConnection.setNetXAResource(NetXAResource)
org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int)
org.apache.derby.client.net.NetXAResource.NetXAResource(XAConnection,int,String,String,org.apache.derby.client.net.NetXAConnection)
org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean)
org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int)
org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientBaseDataSource)
org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource)
org.apache.derby.client.am.Connection.resetConnection(LogWriter)
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader.reopen()
org.apache.derby.impl.sql.execute.ProjectRestrictResultSet.doProjection(ExecRow)
org.apache.derby.impl.sql.compile.ResultColumnList.mapSourceColumns()
org.apache.derby.impl.sql.compile.HashTableNode.generateMinion(ExpressionClassBuilder,MethodBuilder,boolean)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.actionTypesCompareMainToAction(int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.verifyNewValueInTable(final,final)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.verifyBlob(final,final,final)
org.apache.derbyTesting.functionTests.tests.memory.BlobMemTest.testDerby4477_3645_3646_Repro_lowmem()
org.apache.derbyTesting.functionTests.tests.memory.ClobMemTest.testDerby4477_3645_3646_Repro_lowmem_clob()
org.apache.derby.impl.sql.execute.GenericResultSetFactory.getProjectRestrictResultSet(NoPutResultSet,GeneratedMethod,GeneratedMethod,int,GeneratedMethod,int,boolean,boolean,double,double)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.generateMinion(ExpressionClassBuilder,MethodBuilder,boolean)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.testDerby4477_3645_3646_Repro()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.testDerby4477_2349_Repro()
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.setRandomValue(Random,PreparedStatement,int,int,int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.getRandomValue(Random,int,int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.BLOBTest.randomBinary(Random,int)
org.apache.derby.client.am.Connection.reset(LogWriter)
org.apache.derby.client.am.Connection.reset_(LogWriter)
org.apache.derby.client.ClientPooledConnection.getConnection()
org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,boolean)
org.apache.derby.client.am.Connection.completeReset(boolean,boolean)
org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,boolean)
org.apache.derby.impl.jdbc.EmbedPreparedStatement.setBinaryStreamInternal(int,InputStream,final,long)
org.apache.derby.impl.jdbc.EmbedResultSet.updateBinaryStreamInternal(int,InputStream,final,long,String)
org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.notInSoftUpgradeMode()
org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getPreparedQuery(String,boolean)
org.apache.derby.impl.store.raw.log.LogToFile.checkpointWithTran(RawTransaction,RawStoreFactory,DataFactory,TransactionFactory,boolean)
org.apache.derby.impl.store.raw.log.LogToFile.flush(long,long)
org.apache.derby.impl.store.raw.log.LogToFile.startLogBackup(File)
org.apache.derby.impl.store.raw.data.BasePage.setExclusive(BaseContainerHandle)
org.apache.derby.impl.store.replication.master.AsynchronousLogShipper.run()
org.apache.derbyTesting.junit.TestConfiguration.openDefaultConnection()
org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.isConnectedToMaster()
org.apache.derby.impl.store.raw.data.CachedPage.clean(boolean)
org.apache.derby.impl.store.replication.net.SlavePingThread.run()
org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.tstInterruptLongQuery()
org.apache.derbyTesting.functionTests.tests.store.WorkerThread.run()
org.apache.derby.impl.jdbc.EmbedResultSet.movePosition(int,int,String)
org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.testLongQueryInterrupt()
org.apache.derby.impl.jdbc.EmbedResultSet.close()
org.apache.derby.impl.jdbc.EmbedResultSet.moveToCurrentRow()
org.apache.derby.impl.jdbc.EmbedResultSet.moveToInsertRow()
org.apache.derby.impl.jdbc.EmbedResultSet.checkRowPosition(int,String)
org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit.sendMessageWaitForReply(ReplicationMessage)
org.apache.derby.impl.jdbc.EmbedResultSet.getBlob(int)
org.apache.derby.impl.jdbc.EmbedResultSet.getClob(int)
org.apache.derby.impl.store.raw.log.LogAccessFile.flushDirtyBuffers()
org.apache.derby.impl.store.raw.log.LogAccessFile.syncLogAccessFile()
org.apache.derby.impl.jdbc.EmbedClob.position(String,long)
org.apache.derby.impl.jdbc.EmbedClob.position(Clob,long)
org.apache.derby.impl.store.raw.data.RAFContainer4.awaitRestoreChannel(Exception,boolean)
org.apache.derby.impl.store.raw.data.RAFContainer4.recoverContainerAfterInterrupt(String,boolean)
org.apache.derby.impl.store.raw.data.BaseDataFileFactory.freezePersistentStore()
org.apache.derby.impl.store.raw.data.BaseDataFileFactory.writeInProgress()
org.apache.derby.impl.services.monitor.TopService.isActiveService(ProtocolKey)
org.apache.derby.impl.store.raw.data.FileContainer.newPage(BaseContainerHandle,RawTransaction,BaseContainerHandle,boolean)
org.apache.derby.impl.store.raw.data.FileContainer.pageValid(BaseContainerHandle,long)
org.apache.derby.impl.jdbc.EmbedBlob.getBytes(long,int)
org.apache.derby.impl.jdbc.EmbedBlob.length()
org.apache.derby.impl.store.raw.data.RAFContainer.clean(boolean)
org.apache.derby.impl.jdbc.EmbedPreparedStatement.EmbedPreparedStatement(EmbedConnection,String,boolean,int,int,int,int,int[],String[])
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.sleep(long)
org.apache.derby.impl.jdbc.EmbedBlob.position(Blob,long)
org.apache.derby.impl.jdbc.EmbedBlob.position(byte[],long)
org.apache.derby.impl.store.raw.xact.XactFactory.blockBackupBlockingOperations(boolean)
org.apache.derby.impl.store.raw.xact.XactFactory.blockBackup(boolean)
org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testUpdateStatistics()
org.apache.derby.impl.io.vfmem.BlockedByteArray.setLength(final)
org.apache.derby.impl.io.vfmem.BlockedByteArray.writeBytes(final,final,int,final)
org.apache.derby.impl.io.vfmem.BlockedByteArray.writeByte(long,byte)
org.apache.derby.impl.io.vfmem.BlockedByteArray.getInputStream()
org.apache.derby.impl.io.vfmem.BlockedByteArray.BlockedByteArray()
org.apache.derby.impl.io.vfmem.BlockedByteArray.read(long)
org.apache.derby.impl.io.vfmem.BlockedByteArray.read(long,byte[],int,int)
org.apache.derby.impl.io.vfmem.BlockedByteArray.length()
org.apache.derby.impl.io.vfmem.BlockedByteArray.getOutputStream(long)
org.apache.derby.impl.io.vfmem.BlockedByteArray.release()
org.apache.derby.impl.io.vfmem.BlockedByteArray.checkBlockSize(int)
org.apache.derby.impl.io.vfmem.BlockedByteArray.increaseCapacity(long)
org.apache.derby.impl.io.VFMemoryStorageFactory.newStorageFile(String,String)
org.apache.derby.impl.io.VFMemoryStorageFactory.newStorageFile(String)
org.apache.derby.impl.io.VFMemoryStorageFactory.getTempDir()
org.apache.derby.impl.io.VFMemoryStorageFactory.newStorageFile(StorageFile,String)
org.apache.derby.impl.io.VFMemoryStorageFactory.VFMemoryStorageFactory()
org.apache.derby.impl.io.VFMemoryStorageFactory.getCanonicalName()
org.apache.derby.impl.io.VFMemoryStorageFactory.shutdown()
org.apache.derby.impl.io.VFMemoryStorageFactory.getSeparator()
org.apache.derby.impl.io.VFMemoryStorageFactory.createTemporaryFile(String,String)
org.apache.derby.impl.io.VFMemoryStorageFactory.supportsWriteSync()
org.apache.derby.impl.io.VFMemoryStorageFactory.sync(OutputStream,boolean)
org.apache.derby.impl.io.VFMemoryStorageFactory.isReadOnlyDatabase()
org.apache.derby.impl.io.VFMemoryStorageFactory.isFast()
org.apache.derby.impl.io.VFMemoryStorageFactory.getStorageFactoryVersion()
org.apache.derby.impl.io.VFMemoryStorageFactory.supportsRandomAccess()
org.apache.derby.impl.io.vfmem.DataStore.getTempFileCounter()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.VirtualFileTest(String)
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testCreateFileInRoot()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testCreateDirInRoot()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testCreateInvalidDir()
org.apache.derby.impl.io.vfmem.DataStore.getDatabaseName()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testGetRAFNonExistingReadMode()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testGetRAFNonExisting()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testGetRAFOnDirectory()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testGetRAExistingReadOnly()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.getStore()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.suite()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testMkdirsValidAbsolute()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testMkdirsValidRelative()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testMkdirsInvalidRelative()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testMkdirsInvalidAbsolute()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testGetParentAbsolute()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testGetParentRelative()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testRenameToSimple()
org.apache.derbyTesting.unitTests.junit.VirtualFileTest.testDeleteAll()
org.apache.derby.impl.jdbc.EmbedClob.truncate(long)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testTruncateZeroOnDisk()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testTruncateZeroInMemory()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.truncateToZero(long)
org.apache.derby.impl.drda.DRDAConnThread.writeSQLDAGRP(ResultSetMetaData,EngineParameterMetaData,int,boolean)
org.apache.derby.client.am.ColumnMetaData.getColumnTypeName(int)
org.apache.derby.impl.drda.DRDAConnThread.writeSQLDTAGRP(DRDAStatement,ResultSetMetaData,EngineParameterMetaData,int,int,boolean)
org.apache.derby.impl.drda.FdocaConstants.mapJdbcTypeToDrdaType(int,boolean,int[])
org.apache.derby.client.am.ColumnMetaData.getColumnDisplaySize(int)
org.apache.derby.impl.drda.AppRequester.supportsBoolean()
org.apache.derby.impl.drda.SQLTypes.mapJdbcTypeToDB2SqlType(int,boolean,int[])
org.apache.derby.client.am.DatabaseMetaData.getMetaDataInfoBoolean(int)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInValuesClause(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.setParameter(PreparedStatement,int,TypeDescriptor,Object)
org.apache.derby.client.am.SignedBinary.getBoolean(byte[],int)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInSelect(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCasts(ResultSet,int,int,Boolean)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyImplicitCast(Connection,String,int)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.implicitCasts(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castToBoolean(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castFromBoolean(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifySort(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCatalogs(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.populateTables(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.createSchema(Connection)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.testBoolean()
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.suite()
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.main(String)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.negateBooleanFunc(Boolean)
org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.BooleanTest()
org.apache.derby.impl.drda.DRDAConnThread.makeInt(Boolean)
org.apache.derby.impl.jdbc.TemporaryClob.copyClobContent(InternalClob,long)
org.apache.derby.impl.jdbc.TemporaryClob.TemporaryClob(String,ConnectionChild)
org.apache.derbyPreBuild.PropertySetter.setForSunJDKs()
org.apache.derbyPreBuild.PropertySetter.execute()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getCurrentRoleIdChecked(Activation)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(String)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getCurrentRoleIdChecked(Activation)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.roleIsSettable(String)
org.apache.derbyTesting.functionTests.tests.lang.SQLSessionContextTest.assertCurrent(String,ResultSet,String)
org.apache.derbyTesting.functionTests.tests.lang.SQLSessionContextTest.dropper()
org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder)
org.apache.derbyTesting.functionTests.tests.lang.SQLSessionContextTest.testPositive()
org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector)
org.apache.derby.impl.drda.DDMReader.readLengthAndCodePoint()
org.apache.derby.impl.drda.Database.setResultSet(ResultSet)
org.apache.derby.impl.drda.XADatabase.makeConnection(Properties)
org.apache.derby.impl.drda.DRDAProtocolException.getCodpntArg()
org.apache.derby.impl.drda.DRDAProtocolException.getErrorCodePoint()
org.apache.derby.impl.drda.DRDAStatement.setRsDefaultOptions()
org.apache.derby.impl.drda.DRDAProtocolException.getCrrtkn()
org.apache.derby.impl.drda.DRDAProtocolException.getMessageid()
org.apache.derby.impl.drda.CodePointNameTable.CodePointNameTable()
org.apache.derby.impl.drda.DRDAProtocolException.getSvrcod()
org.apache.derby.impl.drda.DRDAProtocolException.getErrcd()
org.apache.derby.impl.drda.DRDAConnThread.parseCcsidSBC(int)
org.apache.derby.impl.drda.DDMWriter.min(int,int)
org.apache.derby.impl.drda.DDMWriter.finalizeChain(byte,OutputStream)
org.apache.derby.impl.drda.Database.getResultSet(String)
org.apache.derby.impl.drda.Database.getPreparedStatement(String)
org.apache.derby.client.am.BlobLocatorInputStream.setFreeBlobOnClose()
org.apache.derby.client.am.BlobLocatorInputStream.close()
org.apache.derby.client.am.ClobLocatorReader.setFreeClobOnClose()
org.apache.derby.client.am.ClobLocatorReader.close()
org.apache.derby.client.am.Cursor.getBlob(int)
org.apache.derby.client.am.Cursor.getCharacterStream(int)
org.apache.derby.client.am.Cursor.getObject(int)
org.apache.derby.client.am.Cursor.getClob(int)
org.apache.derby.client.am.Cursor.getBytes(int)
org.apache.derby.client.am.Cursor.getBinaryStream(int)
org.apache.derby.client.am.Cursor.getUnicodeStream(int)
org.apache.derby.client.am.Cursor.getBlobColumn_(int,Agent)
org.apache.derby.client.am.Cursor.getClobColumn_(int,Agent)
org.apache.derby.client.am.Cursor.getString(int)
org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testUpdateAndDropStatistics()
org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness()
org.apache.derby.impl.jdbc.UTF8Reader.UTF8Reader(InputStream,long,long,ConnectionChild,Object)
org.apache.derby.iapi.util.InterruptStatus.restoreIntrFlagIfSeen(LanguageConnectionContext)
org.apache.derby.iapi.util.InterruptStatus.setInterrupted()
org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run()
org.apache.derby.iapi.types.SQLClob.getTraceString()
org.apache.derby.impl.jdbc.EmbedCallableStatement20.getBinaryStream(int)
org.apache.derby.iapi.types.SQLChar.getStream()
org.apache.derby.iapi.types.SQLClob.hasStream()
org.apache.derby.iapi.types.SQLBinary.getTraceString()
org.apache.derby.iapi.types.SQLBinary.getStream()
org.apache.derby.iapi.types.DataType.hasStream()
org.apache.derby.iapi.types.SQLChar.getStreamWithDescriptor()
org.apache.derby.iapi.types.DataValueDescriptor.hasStream()
org.apache.derby.iapi.types.DataValueDescriptor.getStream()
org.apache.derby.impl.jdbc.EmbedResultSet.getBinaryStream(int)
org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl)
org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object)
org.apache.derby.iapi.jdbc.BrokeredConnection40.createSQLXML()
org.apache.derby.iapi.jdbc.BrokeredConnection40.createNClob()
org.apache.derbyTesting.functionTests.harness.RunTest.getProperties(Properties)
org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String)
org.apache.derbyTesting.functionTests.harness.RunList.setTopSuiteProperties()
org.apache.derby.iapi.jdbc.BrokeredConnection40.unwrap(java.lang.Class)
org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String)
org.apache.derby.iapi.jdbc.BrokeredConnection40.getJDBCLevel()
org.apache.derby.iapi.jdbc.BrokeredConnection40.isWrapperFor(Class)
org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String)
org.apache.derby.iapi.jdbc.BrokeredConnection40.getTypeMap()
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)
org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnection()
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long)
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob)
org.apache.derbyPreBuild.PropertySetter.shouldNotSet(String)
org.apache.derbyPreBuild.PropertySetter.checkForProblematicSettings()
org.apache.derbyPreBuild.PropertySetter.getJreLib(List,String,String)
org.apache.derby.impl.jdbc.ClobStreamControl.copyClobContent(InternalClob)
org.apache.derby.impl.jdbc.ClobUpdateableReader.init(long)
org.apache.derby.impl.sql.compile.ResultSetNode.genNewRCForInsert(TableDescriptor,FromVTI,int,DataDictionary)
org.apache.derby.impl.sql.compile.ResultSetNode.enhanceRCLForInsert(InsertNode,boolean,int[])
org.apache.derby.impl.sql.compile.FromSubquery.init(Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.FromSubquery.printSubNodes(int)
org.apache.derby.impl.sql.compile.FromSubquery.preprocess(int,GroupByList,FromList)
org.apache.derby.impl.sql.compile.ResultSetNode.setOrderBy(OrderByList)
org.apache.derby.impl.sql.compile.NormalizeResultSetNode.pushOrderByList(OrderByList)
org.apache.derby.impl.sql.compile.SubqueryNode.init(Object,Object,Object)
org.apache.derby.impl.sql.compile.SelectNode.flattenableInFromSubquery(FromList)
org.apache.derby.impl.sql.compile.InsertNode.printSubNodes(int)
org.apache.derby.impl.sql.compile.SelectNode.genProjectRestrict(int)
org.apache.derby.impl.sql.compile.AlterTableNode.printSubNodes(int)
org.apache.derby.impl.sql.compile.InsertNode.optimizeStatement()
org.apache.derby.impl.sql.compile.InsertNode.init(Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.QueryTreeNode.stackPrint()
org.apache.derby.impl.sql.compile.FromSubquery.getAllResultColumns(TableName)
org.apache.derby.impl.sql.compile.QueryTreeNode.treePrint(int)
org.apache.derby.impl.sql.compile.DMLModStatementNode.bindRowScopedExpression(NodeFactory,ContextManager,TableDescriptor,ResultColumnList,ValueNode)
org.apache.derby.impl.sql.compile.OrderByList.generate(ActivationClassBuilder,MethodBuilder,ResultSetNode)
org.apache.derby.impl.sql.compile.DMLModStatementNode.printSubNodes(int)
org.apache.derby.impl.sql.compile.ResultColumnList.copyResultColumnNames(ResultColumnList)
org.apache.derby.impl.sql.compile.CreateViewNode.init(Object,Object,Object,Object,Object)
org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.getDataSourceConnectionWithSecMec(String,String,Short)
org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.assertUSRSSBPWD_with_BUILTIN(String[])
org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.run()
org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.tearDown()
org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.assertDerby1080Fixed(String)
org.apache.derbyTesting.functionTests.tests.derbynet.NSSecurityMechanismTest.assertConnectionOK(Connection)
org.apache.derbyTesting.junit.TestConfiguration.getFailureFolder(TestCase)
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.setUp()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testUDTs()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetXXportedKeysODBC()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.checkODBCKeys(String,String,String,String,String,String)
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetBestRowIdentifier()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testMoreGetIndexInfo()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetPrimaryKeys()
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.RunDataBaseMetaDataTest(TestSuite,int)
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.baseSuite(String,int,int[])
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testReferentialAction()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetXXportedKeys()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetFunctionColumns()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetProceduresGetProcColumns()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testBugFixes()
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.test_jdbc4_1()
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.suite(final,boolean)
org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.testGetColumns_DERBY5274()
org.apache.derby.impl.sql.compile.FromVTI.getMatchingColumn(ColumnReference)
org.apache.derby.impl.sql.compile.FromSubquery.getMatchingColumn(ColumnReference)
org.apache.derby.impl.sql.compile.CurrentOfNode.getMatchingColumn(ColumnReference)
org.apache.derby.jdbc.ClientBaseDataSource.getUpgradedSecurityMechanism(String)
org.apache.derby.drda.NetServlet.escapeHTML(String)
org.apache.derby.drda.NetServlet.printErrorForm(LocalizedResource,Exception,String,PrintWriter)
org.apache.derby.drda.NetServlet.escapeSingleQuotes(String)
org.apache.derby.drda.NetServlet.printErrorForm(LocalizedResource,String,String,PrintWriter)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.fmtScanTimes(long[][])
org.apache.derby.impl.jdbc.UTF8Reader.calculateBufferSize(long,long)
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.cpTestIsPoolableHintTrue()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.testIsPoolableDefault()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.cpTestIsPoolableHintFalse()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.statementCachingSuite()
org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest.decorateSQL(Statement)
maven2.SetDerbyVersion.getYesNoInput(String)
maven2.SetDerbyVersion.warn(String)
maven2.SetDerbyVersion.setPOMVersionTags()
maven2.SetDerbyVersion.printSanityNote()
maven2.SetDerbyVersion.info(String)
maven2.SetDerbyVersion.checkJars()
maven2.SetDerbyVersion.readFile(File)
maven2.SetDerbyVersion.ensureSuccess(boolean)
maven2.SetDerbyVersion.checkResult(int,File)
maven2.SetDerbyVersion.main(String[])
maven2.SetDerbyVersion.setVersionTag(File)
org.apache.derby.client.net.Request.prepScalarStream(boolean,boolean,boolean,long)
org.apache.derby.client.net.Request.padScalarStreamForError(long,int,boolean,byte)
org.apache.derby.client.net.Request.flushScalarStreamSegment(long,int)
org.apache.derby.client.net.Request.writePlainScalarStream(boolean,boolean,int,long,java.io.InputStream,boolean,int)
org.apache.derby.client.am.SignedBinary.long6BytesToBigEndianBytes(byte[],int,long)
org.apache.derby.client.net.Request.writeScalarStream(boolean,boolean,int,long,java.io.InputStream,boolean,int)
org.apache.derby.client.net.Request.buildLengthAndCodePointForLob(int,long,boolean,int)
org.apache.derby.client.net.NetStatementRequest.setFDODTALobLength(int[][],int,long)
org.apache.derby.client.am.Clob.truncate(long)
org.apache.derby.client.ClientXAConnection40.removeStatementEventListener(StatementEventListener)
org.apache.derby.client.ClientXAConnection40.addStatementEventListener(StatementEventListener)
org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String)
org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean)
org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean)
org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean)
org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String)
org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource)
org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource)
org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean)
org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean)
org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)
org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String)
org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource)
org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource)
org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter)
org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)
org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)
org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)
org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String)
org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean)
org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String)
org.apache.derby.jdbc.ClientXADataSource40.getQueryObjectGenerator()
org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)
org.apache.derby.jdbc.ClientConnectionPoolDataSource40.getQueryObjectGenerator()
org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)
org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)
org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)
org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int)
org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)
org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource)
org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource)
org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource)
org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int)
org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter)
org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties)
org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean)
org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean)
org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean)
org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean)
org.apache.derbyTesting.junit.BaseTestCase.hasInterruptibleIO()
org.apache.derbyTesting.junit.BaseTestCase.run()
org.apache.derbyTesting.unitTests.store.T_Util.t_checkGetLatchedPage(ContainerHandle,long)
org.apache.derby.iapi.types.ClobStreamHeaderGenerator.getMaxHeaderLength()
org.apache.derby.iapi.types.CharStreamHeaderGenerator.getMaxHeaderLength()
org.apache.derby.impl.sql.compile.FromSubquery.getFromTableByName(String,String,boolean)
org.apache.derbyTesting.junit.NetworkServerTestSetup.pingForServerStart(NetworkServerControl)
org.apache.derbyTesting.junit.NetworkServerTestSetup.setWaitTime(long)
org.apache.derbyTesting.junit.NetworkServerTestSetup.getDefaultStartupArgs()
org.apache.derbyTesting.junit.NetworkServerTestSetup.tearDown()
org.apache.derbyTesting.junit.NetworkServerTestSetup.startSeparateProcess()
org.apache.derbyTesting.junit.NetworkServerTestSetup.run()
org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp()
org.apache.derbyTesting.junit.NetworkServerTestSetup.NetworkServerTestSetup(Test,String[],String[],boolean,boolean,InputStream[])
org.apache.derbyTesting.junit.NetworkServerTestSetup.NetworkServerTestSetup(Test,boolean)
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.serverCameUp()
org.apache.derbyTesting.functionTests.tests.derbynet.Outcome.Outcome(boolean,String)
org.apache.derbyTesting.junit.SecurityManagerSetup.installSecurityManager()
org.apache.derbyTesting.functionTests.tests.derbynet.Outcome.serverShouldComeUp()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.getTextMessage(String,Object[])
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.authenticationFailure()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.getMessageResolver()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.getTextMessage(String)
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.getServerOutput()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.testServerStartup()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.getStartupArgs(boolean)
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.tearDown()
org.apache.derbyTesting.functionTests.tests.derbynet.Outcome.expectedServerOutput()
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.SecureServerTest(boolean,boolean,Outcome)
org.apache.derbyTesting.functionTests.tests.memorydb.MogTest.compare(int,double,double)
org.apache.derby.client.am.Clob.Clob(Agent,byte[],String,int)
org.apache.derby.client.am.Clob.length()
org.apache.derby.client.am.Clob.Clob(Agent,java.io.Reader,int)
org.apache.derby.client.am.Lob.setSqlLength(long)
org.apache.derby.client.am.Lob.sqlLength()
org.apache.derby.client.am.Clob.Clob(Agent,String)
org.apache.derby.client.am.Lob.materializeStream()
org.apache.derby.client.am.Blob.setBytesX(long,byte[],int,int)
org.apache.derby.client.am.Blob.positionX(java.sql.Blob,long)
org.apache.derby.client.am.Blob.materializeStream()
org.apache.derby.client.am.Blob.truncate(long)
org.apache.derby.client.am.Blob.length()
org.apache.derby.client.am.Blob.Blob(Agent,java.io.InputStream,int)
org.apache.derby.client.am.Blob.getBytesX(long,int)
org.apache.derby.client.am.Blob.getBytes(long,int)
org.apache.derby.client.am.Blob.Blob(byte[],Agent,int)
org.apache.derby.client.am.Clob.materializeStream()
org.apache.derby.client.am.Clob.positionX(java.sql.Clob,long)
org.apache.derby.client.am.Clob.setStringX(long,String,int,int)
org.apache.derby.client.am.Clob.getSubString(long,int)
org.apache.derby.client.am.Clob.getSubStringX(long,int)
org.apache.derby.impl.drda.DRDAConnThread.run()
org.apache.derby.impl.sql.compile.InsertNode.init(Object,Object,Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.SubqueryNode.getOrderByList()
org.apache.derby.impl.sql.compile.SetOperatorNode.pushOffsetFetchFirst(ValueNode,ValueNode)
org.apache.derby.impl.sql.compile.SubqueryNode.init(Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList)
org.apache.derby.impl.sql.compile.RowResultSetNode.modifyAccessPaths()
org.apache.derby.impl.sql.compile.IntersectOrExceptNode.addNewNodes()
org.apache.derby.impl.sql.compile.NormalizeResultSetNode.pushOffsetFetchFirst(ValueNode,ValueNode)
org.apache.derby.impl.sql.compile.ResultSetNode.pushOffsetFetchFirst(ValueNode,ValueNode)
org.apache.derby.impl.sql.compile.FromSubquery.init(Object,Object,Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.CreateViewNode.init(Object,Object,Object,Object,Object,Object,Object,Object)
org.apache.derbyTesting.functionTests.tests.lang.OffsetFetchNextTest.testValues()
org.apache.derby.impl.sql.compile.CreateViewNode.getOffset()
org.apache.derby.impl.sql.compile.CreateViewNode.getOrderByList()
org.apache.derby.impl.sql.compile.CreateViewNode.getFetchFirst()
org.apache.derby.impl.sql.compile.RowResultSetNode.pushOffsetFetchFirst(ValueNode,ValueNode)
org.apache.derby.iapi.util.InterruptStatus.saveInfoFromLcc(LanguageConnectionContext)
org.apache.derbyTesting.functionTests.tests.store.InterruptResilienceTest.testInterruptShutdown()
org.apache.derby.impl.store.raw.RawStore.backupAndEnableLogArchiveMode(String,boolean,boolean)
org.apache.derby.impl.store.raw.RawStore.backup(String,boolean)
org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File)
org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(File,boolean)
org.apache.derby.impl.store.raw.xact.XactFactory.stopBackupBlockingOperations(boolean)
org.apache.derby.iapi.store.access.AccessFactory.backup(String,boolean)
org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(String,boolean,boolean)
org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(String,boolean,boolean)
org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(File,boolean)
org.apache.derby.database.Database.backupAndEnableLogArchiveMode(File,boolean)
org.apache.derby.impl.store.access.RAMAccessManager.backup(String,boolean)
org.apache.derby.database.Database.backup(String)
org.apache.derby.database.Database.backupAndEnableLogArchiveMode(String,boolean)
org.apache.derby.iapi.store.raw.RawStoreFactory.backup(String,boolean)
org.apache.derby.catalog.SystemProcedures.SYSCS_DISABLE_LOG_ARCHIVE_MODE(int)
org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(File,boolean)
org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(String,boolean,boolean)
org.apache.derby.impl.db.BasicDatabase.backupAndEnableLogArchiveMode(String,boolean,boolean)
org.apache.derby.impl.db.BasicDatabase.backup(String,boolean)
org.apache.derby.catalog.SystemProcedures.SYSCS_BACKUP_DATABASE_AND_ENABLE_LOG_ARCHIVE_MODE(String,int)
org.apache.derby.catalog.SystemProcedures.SYSCS_BACKUP_DATABASE(String)
org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int)
org.apache.derby.impl.store.raw.data.RAFContainer4.reopen()
org.apache.derby.impl.store.raw.data.RAFContainer4.createContainer(ContainerKey)
org.apache.derby.impl.store.raw.data.RAFContainer4.openContainer(ContainerKey)
org.apache.derby.impl.store.raw.data.RAFContainer.openContainerMinion(ContainerKey,boolean)
org.apache.derby.impl.store.raw.data.RAFContainer.reopenContainer(ContainerKey)
org.apache.derby.impl.store.raw.data.RAFContainer.openContainer(ContainerKey)
org.apache.derby.impl.store.raw.data.RAFContainer.createContainer(ContainerKey)
org.apache.derby.impl.drda.DRDAStatement.prepare(String)
org.apache.derby.impl.sql.GenericPreparedStatement.getVersionCounter()
org.apache.derby.impl.jdbc.EmbedPreparedStatement.getVersionCounter()
org.apache.derby.impl.sql.GenericPreparedStatement.incrementVersionCounter()
org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.testCreateDbFromBackup()
org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.testInvalidRestoreFrom()
org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.createBackupRestore(String,String)
org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.getPrivilegedConnection(final,final,final)
org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.run()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(String,int,int)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.getFilteredTableStats(String,int,IdxStats[])
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createMasterDb()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.forceRowCountEstimateUpdate(String)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.constructDbPath(String)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(String,int)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.dropIfExists(Connection,String)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.setUp()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.suite()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.tearDown()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.AutomaticIndexStatisticsTest(String)
org.apache.derbyTesting.junit.TestConfiguration.getPhysicalDatabaseName(String)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testSelectFromSimpleView()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testStatisticsCorrectness()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.run()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.copyDb(String)
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testShutdownWhileScanningThenDelete()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testStatsUpdatedOnGrowth()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testCompressWhileScanning()
org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testDropWhileScanningThenDelete()
org.apache.derbyTesting.perf.basic.jdbc.ClobAccessTest.testLargeClobTruncateLengthMinusOne()
org.apache.derbyTesting.perf.basic.jdbc.ClobAccessTest.suite()
org.apache.derby.impl.jdbc.LOBStreamControl.copyUtf8Data(final,final)
org.apache.derby.impl.jdbc.InternalClob.getCharLengthIfKnown()
org.apache.derbyPreBuild.PropertySetter.debug(CharSequence)
org.apache.derbyPreBuild.PropertySetter.locateAppleJDKs(List)
org.apache.derby.impl.jdbc.ClobStreamControl.getBytePosition(final)
org.apache.derby.impl.jdbc.EmbedClob.makeWritableClobClone(long)
org.apache.derby.impl.jdbc.ClobStreamControl.getWriter(long)
org.apache.derby.impl.jdbc.ClobStreamControl.getCharLength()
org.apache.derby.impl.jdbc.ClobStreamControl.getByteLength()
org.apache.derby.impl.jdbc.ClobStreamControl.insertString(String,long)
org.apache.derby.impl.jdbc.ClobStreamControl.isWritable()
org.apache.derby.impl.jdbc.ClobStreamControl.truncate(long)
org.apache.derby.impl.jdbc.ClobUtf8Writer.ClobUtf8Writer(ClobStreamControl,long)
org.apache.derby.impl.jdbc.ClobStreamControl.cloneClobContent(String,ConnectionChild,InternalClob)
org.apache.derby.impl.jdbc.ClobStreamControl.cloneClobContent(String,ConnectionChild,InternalClob,long)
org.apache.derby.impl.jdbc.ClobStreamControl.ClobStreamControl(String,ConnectionChild)
org.apache.derby.impl.jdbc.ClobStreamControl.release()
org.apache.derby.impl.jdbc.ClobStreamControl.getRawByteStream()
org.apache.derby.impl.jdbc.ClobStreamControl.ClobStreamControl(String,String,ConnectionChild)
org.apache.derby.impl.jdbc.TemporaryClob.cloneClobContent(String,ConnectionChild,InternalClob)
org.apache.derby.impl.jdbc.TemporaryClob.getReader(long)
org.apache.derby.impl.jdbc.CharToBytePositionCache.reset()
org.apache.derby.impl.jdbc.TemporaryClob.getWriter(long)
org.apache.derby.impl.jdbc.TemporaryClob.getByteLength()
org.apache.derby.impl.jdbc.TemporaryClob.cloneClobContent(String,ConnectionChild,InternalClob,long)
org.apache.derby.impl.jdbc.TemporaryClob.getCharLength()
org.apache.derby.impl.jdbc.TemporaryClob.getRawByteStream()
org.apache.derby.impl.jdbc.TemporaryClob.isWritable()
org.apache.derby.impl.jdbc.TemporaryClob.release()
org.apache.derby.impl.jdbc.TemporaryClob.insertString(String,long)
org.apache.derby.impl.jdbc.TemporaryClob.getBytePosition(final)
org.apache.derby.impl.jdbc.TemporaryClob.getByteFromString(String)
org.apache.derby.impl.jdbc.TemporaryClob.TemporaryClob(String,String,ConnectionChild)
org.apache.derby.impl.jdbc.TemporaryClob.truncate(long)
org.apache.derby.impl.jdbc.ClobStreamControl.getByteFromString(String)
org.apache.derby.impl.jdbc.ClobStreamControl.checkIfValid()
org.apache.derby.impl.jdbc.ClobStreamControl.copyClobContent(InternalClob,long)
org.apache.derby.impl.jdbc.TemporaryClob.checkIfValid()
org.apache.derby.impl.jdbc.CharToBytePositionCache.getBytePos()
org.apache.derby.impl.jdbc.EmbedClob.EmbedClob(EmbedConnection)
org.apache.derby.impl.jdbc.CharToBytePositionCache.CharToBytePositionCache()
org.apache.derby.impl.jdbc.CharToBytePositionCache.updateCachedPos(long,long)
org.apache.derby.impl.jdbc.EmbedClob.makeWritableClobClone()
org.apache.derby.impl.jdbc.CharToBytePositionCache.getCharPos()
org.apache.derby.impl.jdbc.EmbedClob.EmbedClob(EmbedConnection,DataValueDescriptor)
org.apache.derby.client.am.Connection.reset(LogWriter,ClientBaseDataSource,boolean)
org.apache.derby.client.am.Connection.reset_(LogWriter,ClientBaseDataSource,boolean)
org.apache.derby.client.am.ResultSet.relativeX(int)
org.apache.derby.client.am.ResultSet.previousX()
org.apache.derby.client.am.ResultSet.refreshRowX()
org.apache.derby.client.am.ResultSet.useStream(int)
org.apache.derby.client.am.ResultSet.unuseStreams()
org.apache.derby.client.am.ResultSet.getBinaryStream(int)
org.apache.derby.client.am.ResultSet.getAsciiStream(int)
org.apache.derby.client.am.ResultSet.getCharacterStream(int)
org.apache.derby.client.am.ResultSet.beforeFirstX()
org.apache.derby.client.am.ResultSet.afterLastX()
org.apache.derby.client.am.ResultSet.firstX()
org.apache.derby.client.am.ResultSet.lastX()
org.apache.derby.client.am.ResultSet.absoluteX(int)
org.apache.derby.impl.jdbc.EmbedResultSet.getCharacterStream(int)
org.apache.derby.client.am.ResultSet.nextX()
org.apache.derby.impl.jdbc.EmbedResultSet.useStreamOrLOB(int)
org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.readTable(Connection,String,TypeDescriptor[],Object[][],List)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.assertResults(int[],String[],ResultSet,String[][])
org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.checkCoercions(PreparedStatement,TypeDescriptor,List)
org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.checkPlainGet(PreparedStatement,int,TypeDescriptor,Object[][])
org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.checkRows(PreparedStatement,TypeDescriptor[],Object[][],List)
org.apache.derby.impl.sql.execute.GroupedAggregateResultSet.openCore()
org.apache.derby.impl.sql.execute.SetOpResultSet.openCore()
org.apache.derby.impl.store.access.sort.MergeSort.initialize(DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int)
org.apache.derby.impl.store.access.sort.MergeSort.checkColumnOrdering(DataValueDescriptor[],ColumnOrdering)
org.apache.derby.iapi.types.XML.XMLSerialize(StringDataValue,int,int,int)
org.apache.derby.impl.jdbc.PositionedStoreStream.read(byte[],int,int)
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetStream.resetStream()
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetStream.initStream()
org.apache.derby.impl.jdbc.PositionedStoreStream.read()
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetStream.LoopingAlphabetStream(long,int)
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetStream.closeStream()
org.apache.derby.impl.jdbc.UTF8Reader.reposition(long)
org.apache.derby.impl.jdbc.EmbedClob.getSubString(long,int)
org.apache.derby.impl.jdbc.TemporaryClob.getInternalReader(long)
org.apache.derby.impl.jdbc.InternalClob.getInternalReader(long)
org.apache.derbyTesting.functionTests.tests.store.bootLock1.dumpSQLExceptions(SQLException)
org.apache.derbyTesting.functionTests.tests.store.bootLock.main(String[])
org.apache.derbyTesting.functionTests.tests.store.BootLockMinion.main(String[])
org.apache.derbyTesting.functionTests.tests.store.bootLock.dumpSQLExceptions(SQLException)
org.apache.derbyTesting.junit.BaseTestCase.isJ9Platform()
org.apache.derbyTesting.junit.BaseTestCase.getJavaExecutableName()
org.apache.derbyTesting.functionTests.tests.store.bootLock1.main(String[])
org.apache.derbyBuild.XMLWriter.flush()
org.apache.derbyBuild.XMLWriter.close()
org.apache.derbyBuild.XMLWriter.XMLWriter()
org.apache.derbyBuild.XMLWriter.XMLWriter(File)
org.apache.derbyBuild.XMLWriter.beginTag(String)
org.apache.derbyBuild.XMLWriter.beginTag(String,String)
org.apache.derbyBuild.XMLWriter.writeEmptyTag(String)
org.apache.derbyBuild.XMLWriter.writeEmptyTag(String,String)
org.apache.derbyBuild.XMLWriter.writeTextElement(String,String,String)
org.apache.derbyBuild.XMLWriter.indent()
org.apache.derbyBuild.XMLWriter.endTag()
org.apache.derbyBuild.XMLWriter.writeTextElement(String,String)
org.apache.derbyBuild.MessageBuilder.escapePropertiesText(java.lang.String)
org.apache.derbyBuild.MessageBuilder.finishWriting(FileWriter,PrintWriter)
org.apache.derbyBuild.MessageBuilder.getFirstChild(Element,String)
org.apache.derbyBuild.MessageBuilder.squeezeText(Element)
org.apache.derbyBuild.MessageBuilder.replaceSpecialChars(java.lang.String)
org.apache.derbyBuild.MessageBuilder.execute()
org.apache.derbyBuild.MessageBuilder.setDitaTargetFile(String)
org.apache.derbyBuild.MessageBuilder.processSections(PrintWriter,XMLWriter,NodeList)
org.apache.derbyBuild.MessageBuilder.processMessages(File,PrintWriter,XMLWriter)
org.apache.derbyBuild.MessageBuilder.MessageBuilder()
org.apache.derbyBuild.XMLWriter.println(String)
org.apache.derbyBuild.MessageBuilder.setPropertiesTargetFile(String)
org.apache.derbyBuild.MessageBuilder.setXmlSourceFile(String)
org.apache.derbyBuild.MessageBuilder.countParameters(String)
org.apache.derbyBuild.MessageBuilder.getArgs(Element)
org.apache.derbyBuild.MessageBuilder.echo(String)
org.apache.derbyBuild.MessageBuilder.processFamily(PrintWriter,XMLWriter,Element)
org.apache.derbyBuild.MessageBuilder.processSection(PrintWriter,XMLWriter,Element)
org.apache.derbyBuild.MessageBuilder.getSQLState(String)
org.apache.derbyBuild.MessageBuilder.processMessage(PrintWriter,XMLWriter,Element)
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.getFileOutputStream(final)
org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests.getFileOutputStream(final,final)
org.apache.derby.impl.drda.DRDAStatement.addResultSet(ResultSet)
org.apache.derby.impl.drda.DRDAConnThread.writeOPNQRYRM(boolean,DRDAStatement)
org.apache.derbyTesting.functionTests.tests.lang.holdCursorJava.main(String)
org.apache.derbyTesting.functionTests.tests.lang.holdCursorJava.createAndPopulateTable(Connection)
org.apache.derbyTesting.functionTests.tests.lang.holdCursorJava.testHoldability(Connection,int)
org.apache.derbyTesting.functionTests.tests.lang.holdCursorJava.testStatements(Connection)
org.apache.derbyTesting.functionTests.tests.lang.holdCursorJava.testStatementsInProcedure(Connection)
org.apache.derbyTesting.functionTests.tests.lang.holdCursorJava.checkResultSet(ResultSet,String)
org.apache.derbyTesting.functionTests.tests.lang.holdCursorJava.testProc(ResultSet[],ResultSet[])
org.apache.derby.impl.drda.DRDAStatement.execute()
org.apache.derby.impl.sql.execute.BaseActivation.getColumnFromRow(int,int)
org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader.LoopingAlphabetReader(long,CharAlphabet,int)
org.apache.derby.client.am.Lob.checkPosAndLength(long,long)
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.getLastByteInStream(InputStream,int)
org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testGetBinaryStreamLongLastByte()
org.apache.derby.impl.jdbc.EmbedBlob.getBinaryStream(long,long)
org.apache.derby.client.am.Connection.completeLocalCommit()
org.apache.derby.client.am.Connection.completeLocalRollback()
org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[])
org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)
org.apache.derby.client.am.Connection.readCloseStatements()
org.apache.derby.client.am.Connection.createStatementX(int,int,int)
org.apache.derby.client.am.PreparedStatement.listenToUnitOfWork()
org.apache.derby.client.am.ResultSet.listenToUnitOfWork()
org.apache.derby.client.am.Lob.listenToUnitOfWork()
org.apache.derby.client.am.Connection.prepareDynamicCatalogQuery(String)
org.apache.derby.client.am.Statement.resetCursorNameAndRemoveFromWhereCurrentOfMappings()
org.apache.derby.client.am.Connection.writeCloseStatements()
org.apache.derby.client.am.Connection.markStatementsClosed()
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.stopSlave(String,int,String,String,boolean)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.stopSlave(String,int,String,String,String,boolean)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_StateTest_part2._testPreStoppedSlave(Connection)
org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun_Local_3_p1.testReplication_Local_3_p1_StateNegativeTests()
org.apache.derby.client.net.Request.writeScalarStream(boolean,boolean,int,int,java.io.InputStream,boolean,int)
org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean)
org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char)
org.apache.derby.impl.sql.execute.JarUtil.replace(InputStream)
org.apache.derby.impl.sql.execute.JarUtil.drop()
org.apache.derby.impl.sql.execute.JarUtil.add(final)
org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String)
org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.suite(int)
org.apache.derby.impl.store.raw.data.RFResource.removeJarDir(String)
org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long)
org.apache.derby.impl.store.raw.data.RemoveFile.run()
org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor)
org.apache.derby.iapi.types.CollatorSQLClob.cloneValue(boolean)
org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final)
org.apache.derbyTesting.junit.TestConfiguration.TestConfiguration(Properties)
org.apache.derbyTesting.junit.TestConfiguration.TestConfiguration()
org.apache.derby.client.net.NetConnection.writeDeferredReset()
org.apache.derby.client.net.NetConnection.readDeferredReset()
org.apache.derby.client.net.NetConnection.cacheConnectBytes(int,int)
org.apache.derby.client.net.NetConnection.writeDeferredResetFromCache()
org.apache.derbyTesting.functionTests.tests.upgradeTests.BasicSetup.testDERBY4115AndDERBY5681ForStatistics()
org.apache.derby.impl.store.raw.data.RAFContainer4.writeFull(ByteBuffer,FileChannel,long)
org.apache.derby.impl.store.raw.data.RAFContainer4.readFull(ByteBuffer,FileChannel,long)
org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.openCore()
org.apache.derbyTesting.junit.CleanDatabaseTestSetup.setUp()
org.apache.derbyTesting.junit.DropDatabaseSetup.removeDir(File)
org.apache.derbyTesting.junit.BaseJDBCTestCase.assertDirectoryDeleted(File)
org.apache.derbyTesting.functionTests.tests.jdbcapi.XATest.morph(XADataSource)
org.apache.derby.impl.store.raw.log.LogToFile.printErrorStack(Throwable)
org.apache.derbyTesting.junit.SpawnedProcess.complete(boolean,long)
org.apache.derbyTesting.junit.BaseTestCase.readProcessOutput(Process)
org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.runServerCommand(String[])
org.apache.derbyTesting.junit.SpawnedProcess.scheduleKill(Process,String)
org.apache.derbyTesting.junit.JDBC.checkPlan(Statement,String[])
org.apache.derbyTesting.junit.JDBC.assertFullResultSetMinion(ResultSet,Object[][],boolean,boolean,String[])
org.apache.derbyTesting.functionTests.tests.lang.OuterJoinTest.testDerby_4471d()
org.apache.derbyTesting.functionTests.tests.lang.OuterJoinTest.testDerby_4471c()
org.apache.derbyTesting.junit.JDBC.assertFullResultSet(ResultSet,Object[][],String[])
org.apache.derbyTesting.junit.JDBC.assertFullResultSet(ResultSet,Object[][],boolean,boolean)
org.apache.derbyTesting.functionTests.tests.lang.OuterJoinTest.testdDerby5659()
org.apache.derby.impl.sql.compile.HalfOuterJoinNode.LOJgetRPReferencedTables(int)
org.apache.derbyTesting.functionTests.tests.lang.OuterJoinTest.testDerby_4471b()
org.apache.derbyTesting.functionTests.tests.lang.OuterJoinTest.testDerby_4471a()
org.apache.derby.impl.sql.compile.HalfOuterJoinNode.isNullRejecting(ValueNode,JBitSet,JBitSet)
org.apache.derby.impl.sql.compile.HalfOuterJoinNode.LOJ_reorderable(int)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testTruncateTooLongInMemory()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testTruncateTooLongOnDisk()
org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl.checkCancellationFlag()
org.apache.derby.iapi.sql.conn.Authorizer.getAuthorizationId()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean)
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.spTestBuiltins()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSubStatementSessionContext(Activation)
org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List)
org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.createSQLSessionContext()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getSessionUserId()
org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getCurrentUserId(Activation)
org.apache.derby.impl.sql.conn.SQLSessionContextImpl.setUser(String)
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String)
org.apache.derby.impl.sql.conn.SQLSessionContextImpl.getCurrentUser()
org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String)
org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext)
org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String)
org.apache.derby.impl.sql.conn.GenericAuthorizer.getAuthorizationId()
org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.conn.GenericAuthorizer.userOnAccessList(String)
org.apache.derby.impl.jdbc.EmbedConnection.checkUserIsNotARole()
org.apache.derby.impl.jdbc.EmbedConnection.checkIsDBOwner(int)
org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean)
org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor)
org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation)
org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initialize()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initDefaultSchemaDescriptor()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getAuthorizationId()
org.apache.derby.impl.store.raw.xact.TransactionTableEntry.getUsernameString()
org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String)
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.RoutinesDefinersRightsTest(String)
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.suite()
org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object)
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testDefinersRights()
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testBuiltins()
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.makeSuite()
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement)
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.selectFootSoldiers()
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.lookupDilbertWage()
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testInvokersRights()
org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.lookupWageFootSoldier(int)
org.apache.derby.client.am.LogicalConnection.closeWithoutRecyclingToPool()
org.apache.derby.client.am.LogicalConnection.close()
org.apache.derby.client.am.LogicalConnection.notifyException(SQLException)
org.apache.derby.client.ClientPooledConnection.informListeners(SqlException)
org.apache.derby.impl.sql.compile.WindowReferenceNode.init(Object)
org.apache.derby.impl.sql.compile.WindowReferenceNode.toString()
org.apache.derby.impl.sql.compile.JoinNode.deferredBindExpressions(FromList)
org.apache.derby.impl.sql.compile.ColumnReference.toString()
org.apache.derby.impl.sql.compile.NodeFactoryImpl.nodeName(int)
org.apache.derby.impl.sql.compile.SetOperatorNode.setResultToBooleanTrueNode(boolean)
org.apache.derby.impl.sql.compile.SelectNode.bindExpressions(FromList)
org.apache.derby.impl.sql.compile.SelectNode.printSubNodes(int)
org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode)
org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object)
org.apache.derby.impl.sql.compile.FromList.getWindows()
org.apache.derby.impl.sql.compile.FromList.setWindows(WindowList)
org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList)
org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)
org.apache.derby.impl.sql.compile.GroupByColumn.accept(Visitor)
org.apache.derby.impl.sql.compile.ResultColumnList.removeWindowFunctionColumns()
org.apache.derby.impl.sql.compile.ResultColumnList.containsWindowFunctionResultColumn()
org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean)
org.apache.derby.impl.sql.compile.ProjectRestrictNode.pushExpressions(PredicateList)
org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double)
org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.skipChildren(Visitable)
org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.stopTraversal()
org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double)
org.apache.derbyTesting.functionTests.tests.lang.OLAPTest.testBasicOperations()
org.apache.derbyTesting.functionTests.tests.lang.OLAPTest.suite()
org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class)
org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.visit(Visitable)
org.apache.derby.impl.sql.compile.SelectNode.hasWindows()
org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String)
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdatableReaderTest.testUpdateableReader()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdatableReaderTest.testUpdateableStoreReader()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdatableReaderTest.getUnicodeString()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdatableReaderTest.setUp()
org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobUpdatableReaderTest.tearDown()
org.apache.derby.client.net.Request.writePlainScalarStream(boolean,boolean,int,int,java.io.InputStream,boolean,int)
org.apache.derby.client.net.Request.flushScalarStreamSegment(int,int)
org.apache.derby.client.net.NetConnection.constructPrddta()
org.apache.derby.client.net.NetConnectionRequest.buildEXTNAM(String)
org.apache.derby.client.net.NetConnectionRequest.buildSRVNAM(String)
org.apache.derby.client.net.Request.writeEncryptedScalarStream(boolean,boolean,int,int,java.io.InputStream,boolean,int)
org.apache.derbyTesting.functionTests.tests.lang.TableFunctionTest.checkGetXXXCalls()
org.apache.derbyTesting.functionTests.tests.jdbcapi.checkDataSource.createFloatStatementForStateChecking(Connection,String)
org.apache.derby.client.am.PreparedStatement.flowExecute(int)
org.apache.derby.client.am.Statement.removeClientCursorNameFromCache()
org.apache.derby.client.am.Statement.flowExecute(int,String)
org.apache.derbyTesting.functionTests.tests.jdbcapi.checkDataSource.resultSetQuery(String,ResultSet)
org.apache.derbyTesting.functionTests.tests.jdbcapi.checkDataSource.createFloatCallForStateChecking(Connection,String)
org.apache.derby.client.am.Statement.setCursorName(String)
org.apache.derby.client.am.ResultSet.getCursorName()
org.apache.derby.client.am.LossOfPrecisionConversionException.LossOfPrecisionConversionException(LogWriter,String)
org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID)
org.apache.derby.impl.sql.execute.CreateConstraintConstantAction.executeConstantAction(Activation)
org.apache.derbyTesting.functionTests.tests.lang.GrantRevokeDDLTest.testGrantRevokeDDL()
org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.getRoutineUUID()
org.apache.derby.impl.jdbc.EmbedConnection.checkUserCredentials(String,Properties)
org.apache.derbyTesting.junit.BaseTestCase.runsWithEmma()
org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)
org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int)
org.apache.derby.client.ClientPooledConnection.isStatementPoolingEnabled()
org.apache.derby.impl.store.raw.data.StreamFileContainer.run()
org.apache.derby.impl.store.raw.RawStore.run()
org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File)
org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean)
org.apache.derby.impl.services.monitor.FileMonitor.PBinitialize(boolean)
org.apache.derby.impl.drda.DssTrace.run()
org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final)
org.apache.derby.impl.io.DirFile4.getExclusiveFileLock()
org.apache.derbyTesting.functionTests.tests.engine._Suite.suite()
org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream)
org.apache.derby.impl.io.DirFile.getOutputStream()
org.apache.derby.impl.io.DirFile.getOutputStream(final)
org.apache.derby.impl.io.DirFile.getExclusiveFileLock()
org.apache.derby.impl.io.DirFile.limitAccessToOwner()
org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtPosition(long)
org.apache.derby.impl.store.raw.log.LogToFile.run()
org.apache.derbyTesting.functionTests.util.corruptio.CorruptFile.getExclusiveFileLock()
org.apache.derbyTesting.functionTests.util.corruptio.CorruptFile.limitAccessToOwner()
org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(long)
org.apache.derby.io.StorageFile.getExclusiveFileLock()
org.apache.derbyTesting.junit.SpawnedProcess.getFullServerOutput()
org.apache.derbyTesting.junit.BaseTestCase.inputStreamToString(InputStream)
org.apache.derby.client.net.NetConnection.doCloseStatementsOnClose_()
org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean)
org.apache.derby.client.am.Connection.markClosedForReuse(boolean)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,java.util.Properties)
org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)
org.apache.derby.client.am.Connection.closeResourcesX()
org.apache.derby.client.am.Connection.closeForReuse(boolean)
org.apache.derby.client.am.Connection.markClosed(boolean)
org.apache.derby.client.am.Statement.resetUserControllableAttributes()
org.apache.derby.client.am.Statement.resetForReuse()
org.apache.derby.client.am.PreparedStatement.resetForReuse()
org.apache.derby.client.am.Statement.initResetPreparedStatement()
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.isShuttingDown(LanguageConnectionContext)
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.run()
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.getTextVersion(int[])
org.apache.derbyTesting.functionTests.tests.upgradeTests._Suite.suite()
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.matches(char,String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.println(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.traceit(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.alarm(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.getSupportedVersions()
org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.getThreadLoader()
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.getVersions(String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.getSupportedVersions(int[][])
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.show(int[][])
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.getVersions(BufferedReader,String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.clean(String,String)
org.apache.derbyTesting.functionTests.tests.upgradeTests.OldVersions.split4(String,char)
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.getOldJarLocation(int[])
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.suite(final)
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.createClassLoader(int[])
org.apache.derbyTesting.functionTests.tests.upgradeTests.UpgradeRun.getOldJarURLLocation(int[])
org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.tearDown()
org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.setUp()
org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.run()
org.apache.derbyTesting.functionTests.tests.upgradeTests.PhaseChanger.setThreadLoader(final)
org.apache.derby.iapi.services.info.JVMInfo.derbyVMLevel()
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.doTestCurrentRoleIsReset(PooledConnection,String)
org.apache.derbyTesting.functionTests.tests.lang.RolesTest.testCurrentRoleIsReset()
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.embeddedSuite(String)
org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.clientSuite(String)
org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testIndexAndColumnNamedStatistics()
org.apache.derbyTesting.functionTests.tests.lang.OrderByAndSortAvoidance.testForcedIndexUseForWrongOrder()
org.apache.derbyTesting.functionTests.tests.lang.OrderByAndSortAvoidance.testWithNoOptimizerOverrides()
org.apache.derby.impl.sql.compile.Predicate.getSourceInList(boolean)
org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor)
org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean)
org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean)
org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder)
org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean)
org.apache.derby.impl.sql.compile.FromBaseTable.changeAccessPath()
org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.isInListProbeNode()
org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)
org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)
org.apache.derby.impl.sql.compile.ValueNode.isInListProbeNode()
org.apache.derby.impl.sql.compile.Predicate.isRelationalOpPredicate()
org.apache.derby.impl.sql.compile.Predicate.isInListProbePredicate()
org.apache.derby.impl.sql.compile.Predicate.getSourceInList()
org.apache.derby.client.ClientPooledConnection.trashConnection(SqlException)
javax.sql.ConnectionEventListener)
org.apache.derbyTesting.functionTests.tests.store.StreamingColumnTest.testDerby500_verifyVarcharStreams()
org.apache.derby.impl.jdbc.PositionedStoreStream.initStream()
org.apache.derby.impl.jdbc.PositionedStoreStream.PositionedStoreStream(InputStream)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.extractIstatInfo(StandardException)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.handleExpectedErrors(TableDescriptor,StandardException)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.processingLoop()
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.runExplicitly(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],String)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.acceptWork(TableDescriptor)
org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.generateStatistics(LanguageConnectionContext,TableDescriptor)
org.apache.derby.impl.sql.execute.BasicSortObserver.getClone(DataValueDescriptor[])
org.apache.derby.impl.store.raw.data.RAFContainer4.readPage(long,byte[],long)
org.apache.derby.impl.store.raw.data.RAFContainer4.writePage(long,byte[],boolean)
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.close()
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.getTemporaryConglomId()
org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet.getNextRowCore()
org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet.reStartScan(long,long)
org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet.setupPositionBasedScan(long)
org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet.deleteCurrentRow()
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.truncate()
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.insert(ExecRow)
org.apache.derby.client.am.ResultSet.getStatement()
org.apache.derbyTesting.functionTests.tests.store.EncryptionKeyTest.testBackupEncryptedDatabase()
org.apache.derbyTesting.junit.BaseTestCase.getClassVersionMajor()
org.apache.derby.shared.common.sanity.AssertFailure.run()
org.apache.derby.shared.common.sanity.AssertFailure.dumpThreads()
org.apache.derby.impl.sql.depend.BasicDependencyManager.clearDependencies(LanguageConnectionContext,Dependent,TransactionController)
org.apache.derby.impl.sql.depend.BasicDependencyManager.addDependency(Dependent,Provider,ContextManager,TransactionController)
org.apache.derby.impl.sql.depend.BasicDependencyManager.bubbleSort(UUID[])
org.apache.derby.impl.sql.depend.BasicDependencyManager.getProviders(Dependent)
org.apache.derby.impl.sql.depend.BasicDependencyManager.dumpDependencies()
org.apache.derby.impl.sql.depend.BasicDependencyManager.addDependencyToTable(Hashtable,Object,Dependency)
org.apache.derby.impl.sql.depend.BasicDependencyManager.copyDependencies(Dependent,Dependent,boolean,ContextManager,TransactionController)
org.apache.derby.impl.sql.depend.BasicDependencyManager.countDependencies()
org.apache.derby.impl.sql.depend.BasicDependencyManager.clearInMemoryDependency(Dependency)
org.apache.derby.impl.sql.depend.BasicDependencyManager.getPersistentProviderInfos(Dependent)
org.apache.derbyTesting.functionTests.tests.lang.ViewsTest.test_views()
org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorUnordered(String[],Statement,String)
org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementErrorMinion(String[],boolean,Statement,String)
org.apache.derby.impl.sql.depend.BasicDependencyManager.newSList(List)
org.apache.derbyTesting.junit.BaseJDBCTestCase.assertStatementError(String[],Statement,String)
org.apache.derby.impl.sql.depend.BasicDependencyManager.newSList()
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getReferencedColumnMap(TableDescriptor)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setReferencedColumnMap(TableDescriptor,FormatableBitSet)
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.resetFromPool()
