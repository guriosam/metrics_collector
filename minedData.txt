java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSQLStateType()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.Predicate.getSourceInList()=apache_derby,47,1853.0,38.0,2655.0,[java.engine.org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor), java.engine.org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean), java.engine.org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)]
java.client.org.apache.derby.client.am.Connection.setTransactionIsolation(int)=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.testing.org.apache.derbyTesting.functionTests.tests.store.bootLock1.dumpSQLExceptions(SQLException)=apache_derby,4179,1853.0,4880.0,5347.0,[]
java.client.org.apache.derby.client.am.FailedProperties40.FailedProperties40(Properties)=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.client.org.apache.derby.client.am.PreparedStatement.listenToUnitOfWork()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.engine.org.apache.derby.impl.store.raw.data.RFResource.removeJarDir(String)=apache_derby,5357,1853.0,6153.0,6471.0,[java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long), java.engine.org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char), java.engine.org.apache.derby.impl.sql.execute.JarUtil.add(final), java.engine.org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String), java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)]
java.engine.org.apache.derby.iapi.types.SQLLongvarchar.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.Connection.reset_(LogWriter)=apache_derby,3581,1853.0,4219.0,4271.0,[java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,boolean)]
java.engine.org.apache.derby.impl.sql.compile.InsertNode.bindStatement()=apache_derby,4426,2186.0,5083.0,5132.0,[java.engine.org.apache.derby.impl.sql.compile.SingleChildResultSetNode.replaceDefaults(TableDescriptor,ResultColumnList), java.engine.org.apache.derby.impl.sql.compile.RowResultSetNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean), java.engine.org.apache.derby.impl.sql.compile.SetOperatorNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean), java.engine.org.apache.derby.impl.sql.compile.SelectNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean), java.engine.org.apache.derby.impl.sql.compile.ResultSetNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.replaceDefaults(TableDescriptor,ResultColumnList)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getConnection()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.jdbc.FailedProperties40.getProperties()=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.client.org.apache.derby.client.am.LogicalConnection.getMetaData()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.FromList.setWindows(WindowList)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.engine.org.apache.derby.impl.sql.GenericPreparedStatement.incrementVersionCounter()=apache_derby,5459,1.0,6233.0,6307.0,[java.drda.org.apache.derby.impl.drda.DRDAConnThread.processCommands()]
java.engine.org.apache.derby.impl.sql.compile.NodeFactoryImpl.nodeName(int)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsFullOuterJoins()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOuterJoins()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtPosition(long)=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.client.org.apache.derby.client.am.ResultSet.createCloseFilterInputStream(java.io.InputStream)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverVersion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.store.access.btree.BTree.isUniqueWithDuplicateNulls()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSelectForUpdate()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.completeLocalCommit(java.util.Iterator)=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.impl.sql.execute.MultiProbeTableScanResultSet.openCore()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.RoutinesDefinersRightsTest(String)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.store.raw.data.RemoveFile.run()=apache_derby,5357,1853.0,6153.0,6471.0,[java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long), java.engine.org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char), java.engine.org.apache.derby.impl.sql.execute.JarUtil.add(final), java.engine.org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String), java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite()=apache_derby,3678,4350.0,4307.0,4384.0,[java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptorBody(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRowBody(UUID,int,TransactionController), java.engine.org.apache.derby.iapi.sql.dictionary.DataDictionary.getSchemaDescriptor(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory.buildDescriptor(ExecRow,TupleDescriptor,DataDictionary)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCorrelatedSubqueries()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.util.corruptio.CorruptFile.getExclusiveFileLock()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties)=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testForwardOnlyWithNoNulls()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxBinaryLiteralLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.suite(int)=apache_derby,5357,1853.0,6153.0,6471.0,[java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long), java.engine.org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char), java.engine.org.apache.derby.impl.sql.execute.JarUtil.add(final), java.engine.org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String), java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)]
java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(Properties)=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIdentifierQuoteString()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSystemFunctions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInOrderBy()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsExtendedSQLGrammar()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.junit.BaseTestCase.readProcessOutput(Process)=apache_derby,5617,1853.0,6392.0,6393.0,[java.testing.org.apache.derbyTesting.junit.SpawnedProcess.scheduleKill(Process,String)]
java.engine.org.apache.derby.iapi.types.BinaryDecimal.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.testing.org.apache.derbyTesting.functionTests.tests.store._Suite.suite()=apache_derby,4179,1853.0,4880.0,5347.0,[]
java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,java.util.Properties)=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.client.org.apache.derby.client.am.ResultSet.getString(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.drda.org.apache.derby.impl.drda.DRDAConnThread.processCommands()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getSessionUserId()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenCursorsAcrossCommit()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxIndexLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.getCurrentUserId(Activation)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob)=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInGroupBy()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testAddColumn()=apache_derby,5459,1.0,6233.0,6307.0,[java.drda.org.apache.derby.impl.drda.DRDAConnThread.processCommands()]
java.client.org.apache.derby.client.am.FailedProperties40.getProperties()=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInTableDefinitions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.getAuthorizationId()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.usesLocalFiles()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInComparisons()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties)=apache_derby,1246,1853.0,1255.0,1265.0,[java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String), java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean), java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource), java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)]
java.client.org.apache.derby.client.am.ColumnMetaData.getColumnDisplaySize(int)=apache_derby,1029,1853.0,970.0,1548.0,[java.drda.org.apache.derby.impl.drda.FdocaConstants.mapJdbcTypeToDrdaType(int,boolean,int[]), java.drda.org.apache.derby.impl.drda.SQLTypes.mapJdbcTypeToDB2SqlType(int,boolean,int[]), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeSQLDAGRP(ResultSetMetaData,EngineParameterMetaData,int,boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeSQLDTAGRP(DRDAStatement,ResultSetMetaData,EngineParameterMetaData,int,int,boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.makeInt(Boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeFdocaVal(int,Object,int,int,int,boolean,DRDAStatement), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.negateBooleanFunc(Boolean), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.BooleanTest(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.suite(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.main(String), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.createSchema(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.testBoolean(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCatalogs(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.populateTables(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifySort(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castFromBoolean(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castToBoolean(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.implicitCasts(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyImplicitCast(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCasts(ResultSet,int,int,Boolean), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInSelect(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInValuesClause(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.setParameter(PreparedStatement,int,TypeDescriptor,Object), java.client.org.apache.derby.client.am.SignedBinary.getBoolean(byte[],int), java.drda.org.apache.derby.impl.drda.AppRequester.supportsBoolean()]
java.client.org.apache.derby.client.am.LogicalConnection.close()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.client.org.apache.derby.client.net.NetConnectionReply.parseSYNCCTLreply(ConnectionCallbackInterface)=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.impl.sql.compile.Predicate.isRelationalOpPredicate()=apache_derby,47,1853.0,38.0,2655.0,[java.engine.org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor), java.engine.org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean), java.engine.org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92EntryLevelSQL()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalConnection40.createBlob()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.ResultSet.getClob(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.engine.org.apache.derby.iapi.types.SQLVarchar.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.equals(Object)=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getAuthorizationId()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsBatchUpdates()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.catalog.SystemProcedures.SYSCS_BACKUP_DATABASE(String)=apache_derby,239,0.0,333.0,727.0,[java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int), java.engine.org.apache.derby.impl.db.BasicDatabase.backup(String,boolean), java.engine.org.apache.derby.impl.db.BasicDatabase.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.impl.store.raw.RawStore.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.RawStore.backup(String,boolean), java.engine.org.apache.derby.impl.store.raw.xact.XactFactory.stopBackupBlockingOperations(boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backup(String,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backup(String,boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.database.Database.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.database.Database.backupAndEnableLogArchiveMode(String,boolean), java.engine.org.apache.derby.catalog.SystemProcedures.SYSCS_BACKUP_DATABASE_AND_ENABLE_LOG_ARCHIVE_MODE(String,int), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backup(String,boolean)]
java.client.org.apache.derby.client.am.Statement.resetCursorNameAndRemoveFromWhereCurrentOfMappings()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.engine.org.apache.derby.iapi.types.SQLRef.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testTruncateTooLongInMemory()=apache_derby,3977,4700.0,4700.0,4712.0,[]
java.engine.org.apache.derby.impl.sql.execute.BaseActivation.getRowLocationTemplate(int)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.toString()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.iapi.types.XML.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.sql.execute.CardinalityCounter.clone(DataValueDescriptor[])=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.iapi.types.SQLInteger.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.store.raw.data.RAFContainer.run()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testDefinersRights()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.sql.execute.JarUtil.drop()=apache_derby,5357,1853.0,6153.0,6471.0,[java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long), java.engine.org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char), java.engine.org.apache.derby.impl.sql.execute.JarUtil.add(final), java.engine.org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String), java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)]
java.engine.org.apache.derby.impl.jdbc.StoreStreamClob.isReleased()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.client.org.apache.derby.client.ClientPooledConnection.createLogicalConnection()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.engine.org.apache.derby.impl.sql.execute.TableScanResultSet.getNextRowCore()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsPositionedDelete()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxProcedureNameLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsNonNullableColumns()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.CreateIndexNode.makeConstantAction()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.client.org.apache.derby.client.am.Statement.resetForReuse()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetType(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.removeWindowFunctionColumns()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.visit(Visitable)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalConnection40.newLogicalDatabaseMetaData()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsStoredProcedures()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.lookupWageFootSoldier(int)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl)=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSchemaTerm()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.toString()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.client.org.apache.derby.client.net.NetConnectionReply.parsePBSD()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTimeDateFunctions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesLowerCaseIdentifiers()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.store.access.btree.BTreeController.doIns(DataValueDescriptor[])=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.impl.io.DirFile4.getExclusiveFileLock()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.testing.org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.testDisposableStatisticsExplicit()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.LazyDefaultSchemaCreationTest(String)=apache_derby,48,4350.0,43.0,4352.0,[java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite(), java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown(), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(String,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.testing.org.apache.derbyTesting.junit.BaseTestCase.fail(String,Exception), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreate(DataDictionary,Activation,String)]
java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_direct(String)=apache_derby,5318,6129.0,6118.0,6131.0,[java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster(String,String,String,int,String,int,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runLoad(String,String,String,String,int,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startSlave(String,String,String,int,String,int,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_ij(String,String,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.Utils.rmFiles(File,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.Utils.cleanDir(String,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.run(), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.initMaster(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.initSlave(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommand(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommandRemotely(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommandRemotely(String,String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startSlave_ij(String,String,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver(String,String,String,String,String,int,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_ij(String,String,String)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testSetClientInfoString()=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.refresh()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestQueryObject.testConnectionQuery(Connection)=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.spTestBuiltins()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.doesMaxRowSizeIncludeBlobs()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.jdbc.EmbedCallableStatement20.getCharacterStream(int)=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.testing.org.apache.derbyTesting.functionTests.harness.RunList.setTopSuiteProperties()=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang._Suite.suite()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.usesLocalFilePerTable()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.disableIndexStatsRefresher()=apache_derby,5108,5727.0,5912.0,6068.0,[]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableWithNoNulls()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.autoCommitFailureClosesAllResultSets()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl.cloneRow(ExecRow)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.Connection.closeForReuse(boolean)=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.client.org.apache.derby.client.am.ResultSet.getObject(int,java.util.Map)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testCreateArrayNotImplemented()=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInExists()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.SQLChar.setSoftUpgradeMode(Boolean)=apache_derby,4543,4770.0,5240.0,5241.0,[java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(ObjectOutput,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(ObjectOutput,long), java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long), java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)]
java.client.org.apache.derby.client.am.ResultSet.closeCloseFilterInputStream()=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesLowerCaseQuotedIdentifiers()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.allTablesAreSelectable()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleResultSets()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.jdbc.ClientXADataSource40.getQueryObjectGenerator()=apache_derby,1246,1853.0,1255.0,1265.0,[java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String), java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean), java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource), java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.insertsAreDetected(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.getFloat(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(Properties)=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.engine.org.apache.derby.impl.sql.compile.ValueNode.isInListProbeNode()=apache_derby,47,1853.0,38.0,2655.0,[java.engine.org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor), java.engine.org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean), java.engine.org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)]
java.testing.org.apache.derbyTesting.junit.NetworkServerTestSetup.tearDown()=apache_derby,5617,1853.0,6392.0,6393.0,[java.testing.org.apache.derbyTesting.junit.SpawnedProcess.scheduleKill(Process,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSQLKeywords()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.getShort(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.engine.org.apache.derby.impl.store.access.btree.index.B2I.writeExternal(ObjectOutput)=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.impl.store.raw.data.StreamFileContainer.writeColumn(Object)=apache_derby,4519,0.0,5203.0,5207.0,[]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInIns()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenCursorsAcrossRollback()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.completeLocalRollback(java.util.Iterator)=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTransactions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.getQueryObjectGenerator()=apache_derby,1246,1853.0,1255.0,1265.0,[java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String), java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean), java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource), java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupByUnrelated()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.getRef(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.engine.org.apache.derby.impl.store.access.heap.HeapRowLocation.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsNamedParameters()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testNoLOBs()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpB(String)=apache_derby,4087,3021.0,4817.0,5030.0,[java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpA(String,String), java.engine.org.apache.derby.iapi.util.StringUtil.ensureIndent(String,int), java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpC(String,String)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.getStartupArgs(boolean)=apache_derby,2378,2486.0,2524.0,2561.0,[]
java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.uninstallSecurityManager()=apache_derby,5631,1853.0,6425.0,6451.0,[java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.setSecurityPolicy(Properties,String), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.installSecurityManager(String,final), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.mergePolicies(URL,URL), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.run(), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.getURL(final), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.openStream(final), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.mkdir(final)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.makeSuite()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testTruncateTooLongOnDisk()=apache_derby,3977,4700.0,4700.0,4712.0,[]
java.engine.org.apache.derby.impl.sql.compile.BinaryRelationalOperatorNode.isInListProbeNode()=apache_derby,47,1853.0,38.0,2655.0,[java.engine.org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor), java.engine.org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean), java.engine.org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)]
java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.updateReaderIfRequired()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.client.org.apache.derby.client.am.Cursor.getLocatorProcedures()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.impl.sql.compile.FromList.getWindows()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.engine.org.apache.derby.impl.sql.GenericPreparedStatement.getVersionCounter()=apache_derby,5459,1.0,6233.0,6307.0,[java.drda.org.apache.derby.impl.drda.DRDAConnThread.processCommands()]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.deletesAreDetected(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetHoldability(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCoreSQLGrammar()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.getBoolean(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsIntegrityEnhancementFacility()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.OLAPTest.testBasicOperations()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92IntermediateSQL()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalConnection40.getClientInfo(String)=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testStatsCreatedOnGrowthThenDeleteDb()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createSQLXML()=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation)=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.testing.org.apache.derbyTesting.functionTests.tests.store.bootLock1.main(String[])=apache_derby,4179,1853.0,4880.0,5347.0,[]
java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.getBinaryStream(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.Lob.listenToUnitOfWork()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.engine.org.apache.derby.impl.jdbc.EmbedDatabaseMetaData.getGenericConstantActionFactory()=apache_derby,5306,1853.0,6102.0,6128.0,[java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int), java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTypeInfo()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.drda.org.apache.derby.impl.drda.DRDAXAProtocol.parseXIDSHR()=apache_derby,5306,1853.0,6102.0,6128.0,[java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int), java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleOpenResults()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedLow()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.DataValueDescriptor.cloneHolder()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.testing.org.apache.derbyTesting.perf.basic.jdbc.ClobAccessTest.suite()=apache_derby,3810,4602.0,4501.0,4816.0,[]
java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.determineMode()=apache_derby,4543,4770.0,5240.0,5241.0,[java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(ObjectOutput,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(ObjectOutput,long), java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long), java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)]
java.client.org.apache.derby.client.am.ResultSet.getBlob(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.Connection.getTransactionIsolation()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createNClob()=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.client.org.apache.derby.client.am.Connection.getCurrentSchemaName()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSubqueriesInQuantifieds()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.store.BootLockMinion.main(String[])=apache_derby,4179,1853.0,4880.0,5347.0,[]
java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInProcedureCalls()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48testNewSchemaHang()=apache_derby,48,4350.0,43.0,4352.0,[java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite(), java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown(), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(String,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.testing.org.apache.derbyTesting.junit.BaseTestCase.fail(String,Exception), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreate(DataDictionary,Activation,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMixedCaseQuotedIdentifiers()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.upgradeTests.Changes10_9.testDropOrphanedStatistics()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesMixedCaseQuotedIdentifiers()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInDataManipulation()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.J2EEDataSourceTest.testConnectionLeakInDatabaseMetaData()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.OLAPTest.suite()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.engine.org.apache.derby.io.StorageFile.getExclusiveFileLock()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.engine.org.apache.derby.impl.sql.execute.ValueRow.getRowArrayClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.services.monitor.FileMonitor.PBinitialize(boolean)=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullPlusNonNullIsNull()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSubStatementSessionContext(Activation)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.changeAccessPath()=apache_derby,47,1853.0,38.0,2655.0,[java.engine.org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor), java.engine.org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean), java.engine.org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMultipleTransactions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.SQLClob.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.database.Database.backup(String)=apache_derby,239,0.0,333.0,727.0,[java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int), java.engine.org.apache.derby.impl.db.BasicDatabase.backup(String,boolean), java.engine.org.apache.derby.impl.db.BasicDatabase.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.impl.store.raw.RawStore.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.RawStore.backup(String,boolean), java.engine.org.apache.derby.impl.store.raw.xact.XactFactory.stopBackupBlockingOperations(boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backup(String,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backup(String,boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.database.Database.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.database.Database.backupAndEnableLogArchiveMode(String,boolean), java.engine.org.apache.derby.catalog.SystemProcedures.SYSCS_BACKUP_DATABASE_AND_ENABLE_LOG_ARCHIVE_MODE(String,int), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backup(String,boolean)]
java.client.org.apache.derby.client.am.ResultSet.getBinaryStream(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.isModified()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogs()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInPrivilegeDefinitions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.PrimaryKeyTest.testKeyConstraintsImpliesNotNull()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.impl.sql.compile.GroupByColumn.accept(Visitor)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.userOnAccessList(String)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.ClientXAConnection40.addStatementEventListener(StatementEventListener)=apache_derby,1246,1853.0,1255.0,1265.0,[java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String), java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean), java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource), java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)]
java.client.org.apache.derby.client.am.ColumnMetaData.setParmModeForInputParameter(int)=apache_derby,5306,1853.0,6102.0,6128.0,[java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int), java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupByBeyondSelect()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.writeAutoCommitIfNotAutoCommitted()=apache_derby,5306,1853.0,6102.0,6128.0,[java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int), java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)]
java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.checkIfDbIsPre10_9(Database)=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.engine.org.apache.derby.impl.sql.compile.JoinNode.deferredBindExpressions(FromList)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTransactionIsolationLevel(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testDropWhileScanningThenDelete()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupNestedSessionContext(Activation)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInSelect()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.services.io.FileUtil.limitAccessToOwner(File)=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testBlobClobStateForwardOnlyWithNoNulls()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.impl.store.raw.data.BaseDataFileFactory.run()=apache_derby,5641,0.0,6448.0,6449.0,[]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsUnion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableAbsoluteRow()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsLikeEscapeClause()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.execute.SumAggregator.accumulate(DataValueDescriptor)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.Connection.reset(LogWriter)=apache_derby,3581,1853.0,4219.0,4271.0,[java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,boolean)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.serverBootedOK()=apache_derby,2378,2486.0,2524.0,2561.0,[]
java.engine.org.apache.derby.impl.jdbc.InternalClob.getInternalReader(long)=apache_derby,3825,4614.0,4507.0,4616.0,[java.engine.org.apache.derby.impl.jdbc.EmbedClob.getSubString(long,int), java.engine.org.apache.derby.impl.jdbc.EmbedClob.position(String,long)]
java.client.org.apache.derby.client.am.ResultSet.getBytes(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.engine.org.apache.derby.impl.sql.execute.DependentResultSet.openIndexScan(ExecRow)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalConnection40.unwrap(Class)=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.testing.org.apache.derbyTesting.functionTests.util.corruptio.CorruptFile.limitAccessToOwner()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getStatistics()=apache_derby,5680,5679.0,6481.0,6589.0,[]
java.client.org.apache.derby.client.am.ResultSet.getAsciiStream(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.flush()=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTableTypes()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.jdbc.FailedProperties40.FailedProperties40(Properties)=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.testing.org.apache.derbyTesting.functionTests.tests.upgradeTests.helpers.DisposableIndexStatistics.insertData(Connection)=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.client.org.apache.derby.client.am.ResultSet.getArray(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedAtEnd()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getCurrentRoleIdDelimited(Activation)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.store.access.conglomerate.GenericConglomerate.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInIndexDefinitions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getJDBCMajorVersion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testBlobClobStateAfterCloseOnScrollable()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.unwrap(java.lang.Class)=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.client.org.apache.derby.client.am.Connection.completePiggyBackIsolation(int)=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.impl.sql.compile.SelectNode.genProjectRestrict(int)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.getProperties(Properties)=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown()=apache_derby,3678,4350.0,4307.0,4384.0,[java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptorBody(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRowBody(UUID,int,TransactionController), java.engine.org.apache.derby.iapi.sql.dictionary.DataDictionary.getSchemaDescriptor(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory.buildDescriptor(ExecRow,TupleDescriptor,DataDictionary)]
java.engine.org.apache.derby.iapi.types.SQLBoolean.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.sql.execute.ValueRow.cloneColumn(int)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.io.DirFile.getOutputStream()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.engine.org.apache.derby.impl.sql.compile.CreateTableNode.bindStatement()=apache_derby,3266,1853.0,3766.0,4620.0,[]
java.engine.org.apache.derby.iapi.store.access.BackingStoreHashtable.cloneRow(DataValueDescriptor[])=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getNumericFunctions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.unwrap(Class)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalConnection40.isWrapperFor(Class)=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.Cursor.getAsciiStream(int)=apache_derby,1519,1853.0,1519.0,3116.0,[java.client.org.apache.derby.client.am.Clob.Clob(Agent,java.io.InputStream,String,int), java.client.org.apache.derby.client.am.PreparedStatement.setAsciiStream(int,InputStream), java.client.org.apache.derby.client.am.PreparedStatement.setAsciiStream(int,java.io.InputStream,long), java.client.org.apache.derby.client.am.ResultSet.updateAsciiStream(int,InputStream), java.client.org.apache.derby.client.am.ResultSet.updateAsciiStream(int,java.io.InputStream,int), java.client.org.apache.derby.client.am.Clob.Clob(Agent,java.io.InputStream,String)]
java.engine.org.apache.derby.impl.store.access.btree.index.B2I_10_3.getTypeFormatId()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.iapi.types.SQLDecimal.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.sql.compile.ColumnReference.toString()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.testing.org.apache.derbyTesting.junit.CleanDatabaseTestSetup.setUp()=apache_derby,5734,1853.0,6531.0,6545.0,[]
java.engine.org.apache.derby.impl.store.access.StorableFormatId.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.sql.compile.GroupByNode.addNewColumnsForAggregation()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.othersDeletesAreVisible(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesUpperCaseQuotedIdentifiers()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testGetBinaryStringLongNotImplemented()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOrderByUnrelated()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.io.DirFile.getExclusiveFileLock()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.lookupDilbertWage()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet._Suite.suite()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedAtStart()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.junit.BaseTestCase.getJavaExecutableName()=apache_derby,4179,1853.0,4880.0,5347.0,[]
java.client.org.apache.derby.client.am.ResultSet.createLOBColumnTracker()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.iapi.types.CollatorSQLClob.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.isInitialDefaultSchema(String)=apache_derby,48,4350.0,43.0,4352.0,[java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite(), java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown(), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(String,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.testing.org.apache.derbyTesting.junit.BaseTestCase.fail(String,Exception), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreate(DataDictionary,Activation,String)]
java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.isUniqueWithDuplicateNulls()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.supportsStoredFunctionsUsingCallSyntax()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.io.DirFile.limitAccessToOwner()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.engine.org.apache.derby.impl.sql.execute.ValueRow.getClone(FormatableBitSet)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.sql.execute.ValueRow.getNewNullRow()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalConnection40.getClientInfo()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableMoveToCurrentRow()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.client.org.apache.derby.client.am.LogicalConnection40.isValid(int)=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.ResultSet.getObject(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48SelfLockingRecoveryDeadlockDetectionOn()=apache_derby,48,4350.0,43.0,4352.0,[java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite(), java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown(), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(String,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.testing.org.apache.derbyTesting.junit.BaseTestCase.fail(String,Exception), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreate(DataDictionary,Activation,String)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.tearDown()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxSchemaNameLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.services.io.FormatIdInputStream.cloneStream()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.sql.compile.DropTableNode.makeConstantAction()=apache_derby,3266,1853.0,3766.0,4620.0,[]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDifferentTableCorrelationNames()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionTest.testSetClientInfoProperties()=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.engine.org.apache.derby.impl.jdbc.UTF8Reader.reposition(long)=apache_derby,3825,4614.0,4507.0,4616.0,[java.engine.org.apache.derby.impl.jdbc.EmbedClob.getSubString(long,int), java.engine.org.apache.derby.impl.jdbc.EmbedClob.position(String,long)]
java.engine.org.apache.derby.impl.sql.compile.SelectNode.bindExpressions(FromList)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.engine.org.apache.derby.impl.sql.execute.JarUtil.replace(InputStream)=apache_derby,5357,1853.0,6153.0,6471.0,[java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long), java.engine.org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char), java.engine.org.apache.derby.impl.sql.execute.JarUtil.add(final), java.engine.org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String), java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxStatementLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.junit.NetworkServerTestSetup.setUp()=apache_derby,5617,1853.0,6392.0,6393.0,[java.testing.org.apache.derbyTesting.junit.SpawnedProcess.scheduleKill(Process,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInTableDefinitions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.SQLReal.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.jdbc.EmbedClob.truncate(long)=apache_derby,3977,4700.0,4700.0,4712.0,[]
java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter)=apache_derby,1246,1853.0,1255.0,1265.0,[java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String), java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean), java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource), java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)]
java.client.org.apache.derby.client.am.Connection.completePiggyBackSchema(String)=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCursorNameLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getURL()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.sql.conn.Authorizer.getAuthorizationId()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDefaultTransactionIsolation()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby3678()=apache_derby,3678,4350.0,4307.0,4384.0,[java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptorBody(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRowBody(UUID,int,TransactionController), java.engine.org.apache.derby.iapi.sql.dictionary.DataDictionary.getSchemaDescriptor(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory.buildDescriptor(ExecRow,TupleDescriptor,DataDictionary)]
java.client.org.apache.derby.client.am.ResultSet.getCharacterStream(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUserName()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.isWrapperFor(Class)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.getVersionCounter()=apache_derby,5459,1.0,6233.0,6307.0,[java.drda.org.apache.derby.impl.drda.DRDAConnThread.processCommands()]
java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.stopTraversal()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.net.NetStatementReply.parseOPNQRYreply(StatementCallbackInterface)=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(Properties)=apache_derby,1380,1853.0,1414.0,1415.0,[java.client.org.apache.derby.client.net.NetConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientXADataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource40.createQueryObject(Class,DataSource), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.setClientInfo(String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArrayOf(String,Object[]), java.client.org.apache.derby.jdbc.ClientDataSource40.createQueryObject(Class,DataSource), java.client.org.apache.derby.client.net.NetConnection40.setClientInfo(String,String), java.engine.org.apache.derby.jdbc.EmbeddedXADataSource40.createQueryObject(Class,DataSource), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.ConnectionObjectDecorator.checkSQLState(Method,SQLException), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(Properties), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.createArray(String,Object[]), java.engine.org.apache.derby.impl.jdbc.EmbedConnection40.setClientInfo(String,String), java.client.org.apache.derby.client.am.LogicalConnection40.createArrayOf(String,Object[])]
java.testing.org.apache.derbyTesting.unitTests.junit._Suite.suite()=apache_derby,3936,1853.0,4657.0,4677.0,[]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxStatements()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInProcedureCalls()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read()=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.Connection.markStatementsClosed()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.store.bootLock.main(String[])=apache_derby,4179,1853.0,4880.0,5347.0,[]
java.engine.org.apache.derby.impl.store.raw.log.LogToFile.run()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.client.org.apache.derby.client.am.Cursor.locator(int)=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.ownInsertsAreVisible(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.updatesAreDetected(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getJDBCMinorVersion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.CollatorSQLVarchar.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.testing.org.apache.derbyTesting.junit.BaseTestCase.isJ9Platform()=apache_derby,4179,1853.0,4880.0,5347.0,[]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getIso()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.ClobStreamHeaderGenerator(boolean)=apache_derby,4543,4770.0,5240.0,5241.0,[java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(ObjectOutput,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(ObjectOutput,long), java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long), java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)]
java.engine.org.apache.derby.iapi.types.SQLSmallint.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.isSchemaModified()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.hashAllTableDescriptorsByTableId(TransactionController)=apache_derby,3678,4350.0,4307.0,4384.0,[java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptorBody(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getSchemaDescriptor(UUID,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRowBody(UUID,int,TransactionController), java.engine.org.apache.derby.iapi.sql.dictionary.DataDictionary.getSchemaDescriptor(UUID,int,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.SYSTABLESRowFactory.buildDescriptor(ExecRow,TupleDescriptor,DataDictionary)]
java.engine.org.apache.derby.impl.sql.execute.MaxMinAggregator.accumulate(DataValueDescriptor)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.forwardOnlyTest(String)=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.isWrapperFor(Class)=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.client.org.apache.derby.client.am.DatabaseMetaData.getMetaDataInfoBoolean(int)=apache_derby,1029,1853.0,970.0,1548.0,[java.drda.org.apache.derby.impl.drda.FdocaConstants.mapJdbcTypeToDrdaType(int,boolean,int[]), java.drda.org.apache.derby.impl.drda.SQLTypes.mapJdbcTypeToDB2SqlType(int,boolean,int[]), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeSQLDAGRP(ResultSetMetaData,EngineParameterMetaData,int,boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeSQLDTAGRP(DRDAStatement,ResultSetMetaData,EngineParameterMetaData,int,int,boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.makeInt(Boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeFdocaVal(int,Object,int,int,int,boolean,DRDAStatement), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.negateBooleanFunc(Boolean), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.BooleanTest(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.suite(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.main(String), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.createSchema(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.testBoolean(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCatalogs(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.populateTables(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifySort(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castFromBoolean(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castToBoolean(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.implicitCasts(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyImplicitCast(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCasts(ResultSet,int,int,Boolean), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInSelect(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInValuesClause(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.setParameter(PreparedStatement,int,TypeDescriptor,Object), java.client.org.apache.derby.client.am.SignedBinary.getBoolean(byte[],int), java.drda.org.apache.derby.impl.drda.AppRequester.supportsBoolean()]
java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,java.util.Properties)=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsTableCorrelationNames()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.store.access.sort.MergeSort.checkColumnTypes(DataValueDescriptor[])=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsPositionedUpdate()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.markLOBAsAccessed(int)=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.writeExternal(ObjectOutput)=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.getTypeMap()=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testForwardOnlyWithNulls()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.impl.jdbc.InternalClob.getUpdateCount()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.engine.org.apache.derby.impl.sql.compile.ProjectRestrictNode.pushExpressions(PredicateList)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.ClientPooledConnection.getConnection()=apache_derby,3581,1853.0,4219.0,4271.0,[java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,boolean)]
java.client.org.apache.derby.client.net.NetConnection.closeForReuse()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.engine.org.apache.derby.impl.sql.compile.WindowReferenceNode.toString()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxTablesInSelect()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.SQLLongint.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.isUniqueWithDuplicateNulls()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenStatementsAcrossRollback()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.store.access.btree.index.B2I.localReadExternal(ObjectInput)=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsColumnAliasing()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getResultSetHoldability()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.SQLBlob.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.isCatalogAtStart()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.closeX()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initDefaultSchemaDescriptor()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSchemas()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.catalog.SystemProcedures.SYSCS_DISABLE_LOG_ARCHIVE_MODE(int)=apache_derby,239,0.0,333.0,727.0,[java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int), java.engine.org.apache.derby.impl.db.BasicDatabase.backup(String,boolean), java.engine.org.apache.derby.impl.db.BasicDatabase.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.impl.store.raw.RawStore.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.RawStore.backup(String,boolean), java.engine.org.apache.derby.impl.store.raw.xact.XactFactory.stopBackupBlockingOperations(boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backup(String,boolean), java.engine.org.apache.derby.iapi.store.access.AccessFactory.backup(String,boolean), java.engine.org.apache.derby.impl.store.access.RAMAccessManager.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.database.Database.backupAndEnableLogArchiveMode(File,boolean), java.engine.org.apache.derby.database.Database.backupAndEnableLogArchiveMode(String,boolean), java.engine.org.apache.derby.catalog.SystemProcedures.SYSCS_BACKUP_DATABASE_AND_ENABLE_LOG_ARCHIVE_MODE(String,int), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backupAndEnableLogArchiveMode(String,boolean,boolean), java.engine.org.apache.derby.iapi.store.raw.RawStoreFactory.backup(String,boolean)]
java.engine.org.apache.derby.impl.sql.compile.CompilerContextImpl.addRequiredTablePriv(TableDescriptor)=apache_derby,3266,1853.0,3766.0,4620.0,[]
java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.getCurrentUser()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.sql.compile.SelectNode.printSubNodes(int)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGroupBy()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInDataManipulation()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.Connection.supportsSessionDataCaching()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.readExternal(ObjectInput)=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.impl.sql.execute.DMLWriteResultSet.objectifyStreams(ExecRow)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalConnection.checkForNullPhysicalConnection()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogSeparator()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDERBY5681()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter)=apache_derby,1246,1853.0,1255.0,1265.0,[java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String), java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean), java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource), java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)]
java.client.org.apache.derby.client.am.LogicalConnection40.createNClob()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.Connection.completeLocalRollback()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.suite()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testReplaceMultibyteWithSingleByteForwards()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.engine.org.apache.derby.impl.sql.execute.rts.RealDistinctScanStatistics.getStatementExecutionPlanText(int)=apache_derby,4087,3021.0,4817.0,5030.0,[java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpA(String,String), java.engine.org.apache.derby.iapi.util.StringUtil.ensureIndent(String,int), java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpC(String,String)]
java.client.org.apache.derby.client.am.ResultSet.listenToUnitOfWork()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.engine.org.apache.derby.impl.jdbc.EmbedConnection.checkIsDBOwner(int)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.createSQLSessionContext()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics.getStatementExecutionPlanText(int)=apache_derby,4087,3021.0,4817.0,5030.0,[java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpA(String,String), java.engine.org.apache.derby.iapi.util.StringUtil.ensureIndent(String,int), java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpC(String,String)]
java.client.org.apache.derby.client.net.NetCursor.locator(int)=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.impl.sql.compile.GroupByNode.addUnAggColumns()=apache_derby,4071,1.0,4810.0,4828.0,[java.engine.org.apache.derby.impl.sql.compile.GroupByNode.addNewColumnsForAggregation()]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.suite()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.fmtScanTimes(long[][])=apache_derby,5108,5727.0,5912.0,6068.0,[]
java.client.org.apache.derby.client.am.ResultSet.getByte(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.stop()=apache_derby,5336,5727.0,6131.0,6169.0,[]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverMajorVersion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testGetBinaryStreamLongLastByte()=apache_derby,4060,4811.0,4800.0,4813.0,[java.client.org.apache.derby.client.am.Lob.checkPosAndLength(long,long), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.getLastByteInStream(InputStream,int), java.engine.org.apache.derby.impl.jdbc.EmbedBlob.getBinaryStream(long,long), java.testing.org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader.LoopingAlphabetReader(long,CharAlphabet,int)]
java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.close()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.GeneratedColumnsTest.testDerby_4426()=apache_derby,4426,2186.0,5083.0,5132.0,[java.engine.org.apache.derby.impl.sql.compile.SingleChildResultSetNode.replaceDefaults(TableDescriptor,ResultColumnList), java.engine.org.apache.derby.impl.sql.compile.RowResultSetNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean), java.engine.org.apache.derby.impl.sql.compile.SetOperatorNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean), java.engine.org.apache.derby.impl.sql.compile.SelectNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean), java.engine.org.apache.derby.impl.sql.compile.ResultSetNode.replaceOrForbidDefaults(TableDescriptor,ResultColumnList,boolean), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.replaceDefaults(TableDescriptor,ResultColumnList)]
java.client.org.apache.derby.client.am.ColumnMetaData.getInternalTypeForGuessedOrRegisteredJdbcType(int)=apache_derby,5306,1853.0,6102.0,6128.0,[java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int), java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)]
java.engine.org.apache.derby.catalog.IndexDescriptor.isUniqueWithDuplicateNulls()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.impl.sql.compile.Predicate.isInListProbePredicate()=apache_derby,47,1853.0,38.0,2655.0,[java.engine.org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor), java.engine.org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean), java.engine.org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)]
java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter)=apache_derby,3581,1853.0,4219.0,4271.0,[java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverMinorVersion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.getJDBCLevel()=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.resetStream()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseProductVersion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureTerm()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.store.raw.xact.TransactionTableEntry.getUsernameString()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.setUnmodified()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableWithNulls()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.testing.org.apache.derbyTesting.junit.TestConfiguration.defaultSecurityManagerSetup()=apache_derby,5631,1853.0,6425.0,6451.0,[java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.setSecurityPolicy(Properties,String), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.installSecurityManager(String,final), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.mergePolicies(URL,URL), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.run(), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.getURL(final), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.openStream(final), java.testing.org.apache.derbyTesting.junit.SecurityManagerSetup.mkdir(final)]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getSchema()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCatalogTerm()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesUpperCaseIdentifiers()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSchemasInIndexDefinitions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.ClobTest.testReplaceMultibyteWithSingleByteBackwards()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.drda.org.apache.derby.impl.drda.AppRequester.supportsSessionDataCaching()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.impl.store.access.btree.BTree.setUniqueWithDuplicateNulls(boolean)=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMinimumSQLGrammar()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnection()=apache_derby,1214,1853.0,1203.0,1366.0,[java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String,Object), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.newBrokeredStatement(BrokeredStatementControl,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createStruct(String,Object[]), java.testing.org.apache.derbyTesting.functionTests.harness.RunList.runTests(Properties,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setSQLXML(int,SQLXML), java.testing.org.apache.derbyTesting.functionTests.harness.RunTest.buildTestCommand(String,String,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection40.createArray(String,Object[]), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setRowId(int,RowId), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNString(int,String), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNCharacterStream(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setNClob(int,NClob), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setClob(int,Reader,long), java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.setBlob(int,InputStream,long)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsOpenStatementsAcrossCommit()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getClientInfoProperties()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.Connection.writeCloseStatements()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.engine.org.apache.derby.impl.store.access.btree.BTreeMaxScan.fetchMaxRowFromBeginning(DataValueDescriptor[])=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.net.NetDatabaseMetaData.computeFeatureSet_()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.iapi.types.SQLTinyint.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.ownDeletesAreVisible(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.roleIsSettable(String)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.updateStatistics()=apache_derby,5680,5679.0,6481.0,6589.0,[]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.othersUpdatesAreVisible(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ColumnMetaData.setParmModeForOutputParameter(int)=apache_derby,5306,1853.0,6102.0,6128.0,[java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int), java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)]
java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.skipChildren(Visitable)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsAlterTableWithDropColumn()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.isIsoModified()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsUnionAll()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseMinorVersion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupSubStatementSessionContext(Activation)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.ColumnMetaData.getColumnTypeName(int)=apache_derby,1029,1853.0,970.0,1548.0,[java.drda.org.apache.derby.impl.drda.FdocaConstants.mapJdbcTypeToDrdaType(int,boolean,int[]), java.drda.org.apache.derby.impl.drda.SQLTypes.mapJdbcTypeToDB2SqlType(int,boolean,int[]), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeSQLDAGRP(ResultSetMetaData,EngineParameterMetaData,int,boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeSQLDTAGRP(DRDAStatement,ResultSetMetaData,EngineParameterMetaData,int,int,boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.makeInt(Boolean), java.drda.org.apache.derby.impl.drda.DRDAConnThread.writeFdocaVal(int,Object,int,int,int,boolean,DRDAStatement), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.negateBooleanFunc(Boolean), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.BooleanTest(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.suite(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.main(String), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.createSchema(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.testBoolean(), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCatalogs(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.populateTables(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifySort(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castFromBoolean(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.castToBoolean(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.implicitCasts(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyImplicitCast(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyCasts(ResultSet,int,int,Boolean), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInSelect(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.lang.BooleanTest.verifyBooleanInValuesClause(Connection), java.testing.org.apache.derbyTesting.functionTests.tests.junitTests.compatibility.JDBCDriverTest.setParameter(PreparedStatement,int,TypeDescriptor,Object), java.client.org.apache.derby.client.am.SignedBinary.getBoolean(byte[],int), java.drda.org.apache.derby.impl.drda.AppRequester.supportsBoolean()]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.runServerCommand(String[])=apache_derby,5617,1853.0,6392.0,6393.0,[java.testing.org.apache.derbyTesting.junit.SpawnedProcess.scheduleKill(Process,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsAlterTableWithAddColumn()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.Connection.markClosed(boolean)=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsDataManipulationTransactionsOnly()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.suite()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSearchStringEscape()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.containsWindowFunctionResultColumn()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.skip(long)=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.dataDefinitionCausesTransactionCommit()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.qualifiesForStatisticsUpdateCheck(TableDescriptor)=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.engine.org.apache.derby.iapi.types.SQLTime.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.iapi.types.SQLBoolean.setValueCore(Number)=apache_derby,5306,1853.0,6102.0,6128.0,[java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int), java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)]
java.testing.org.apache.derbyTesting.junit.TestConfiguration.TestConfiguration()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.engine.org.apache.derby.impl.store.access.btree.index.B2I_10_3.writeExternal(ObjectOutput)=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.dataDefinitionIgnoredInTransactions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.nullsAreSortedHigh()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getStringFunctions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalConnection40.createClob()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.Connection.completeLocalCommit()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.client.org.apache.derby.client.am.ResultSet.moveToCurrentRowX()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.testing.org.apache.derbyTesting.functionTests.tests.store.bootLock.dumpSQLExceptions(SQLException)=apache_derby,4179,1853.0,4880.0,5347.0,[]
java.client.org.apache.derby.client.am.LogicalConnection.closeWithoutRecyclingToPool()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.engine.org.apache.derby.impl.sql.compile.CreateTableNode.referencesSessionSchema()=apache_derby,3266,1853.0,3766.0,4620.0,[]
java.testing.org.apache.derbyTesting.functionTests.tests.engine._Suite.suite()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseProductName()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.jdbc.InternalClob.isReleased()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.engine.org.apache.derby.impl.store.raw.data.StreamFileContainer.run()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.client.org.apache.derby.client.am.PreparedStatement.resetForReuse()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.engine.org.apache.derby.impl.jdbc.EmbedConnection.checkUserIsNotARole()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInTable()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.isReadOnly()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.setUp()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.engine.org.apache.derby.impl.store.raw.log.LogToFile.getLogFileAtBeginning(long)=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.client.org.apache.derby.client.am.Connection.closeResourcesX()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.storesMixedCaseIdentifiers()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getRealMetaDataObject()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.SQLDate.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsGetGeneratedKeys()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.tools.org.apache.derby.impl.tools.ij.xaHelper.getXADataSource()=apache_derby,1246,1853.0,1255.0,1265.0,[java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String), java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean), java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource), java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.allProceduresAreCallable()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.othersInsertsAreVisible(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.SQLClob.setStreamHeaderFormat(Boolean)=apache_derby,4543,4770.0,5240.0,5241.0,[java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(ObjectOutput,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(ObjectOutput,long), java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long), java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)]
java.engine.org.apache.derby.iapi.types.SQLChar.cloneObject()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.iapi.jdbc.BrokeredConnection.getCurrentSchemaName()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.impl.jdbc.StoreStreamClob.getUpdateCount()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.engine.org.apache.derby.impl.store.raw.RawStore.run()=apache_derby,5363,1853.0,6153.0,6207.0,[java.testing.org.apache.derbyTesting.functionTests.tests.engine.RestrictiveFilePermissionsTest.run(), java.engine.org.apache.derby.impl.io.VFMemoryStorageFactory.init(String,String,String,String), java.drda.org.apache.derby.impl.drda.DssTrace.run(), java.drda.org.apache.derby.impl.drda.DssTrace.startComBufferTrace(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privGetCanonicalPath(final), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyFile(StorageFile,File), java.engine.org.apache.derby.impl.store.raw.RawStore.privCopyDirectory(StorageFile,File,byte[],String[],boolean), java.engine.org.apache.derby.impl.io.DirFile.getOutputStream(final), java.drda.org.apache.derby.drda.NetworkServerControl.main(String), java.engine.org.apache.derby.impl.store.raw.data.RFResource.add(String,InputStream), java.engine.org.apache.derby.impl.services.monitor.StorageFactoryService.run()]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDriverName()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.getDouble(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsExpressionsInOrderBy()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.store.access.btree.index.B2I.getTypeFormatId()=apache_derby,3330,3388.0,3840.0,4100.0,[java.engine.org.apache.derby.impl.sql.compile.TableElementList.validate(DDLStatementNode,DataDictionary,TableDescriptor), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genConstraintActions(boolean,ConstraintConstantAction[],String,SchemaDescriptor,DataDictionary), java.engine.org.apache.derby.impl.sql.compile.TableElementList.genIndexAction(boolean,boolean,String,ConstraintDefinitionNode,String[],boolean,SchemaDescriptor,String,int,DataDictionary), java.engine.org.apache.derby.impl.sql.execute.GenericConstantActionFactory.getCreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.impl.store.access.btree.BTree.create(Transaction,int,long,DataValueDescriptor[],Properties,int,int), java.engine.org.apache.derby.catalog.types.IndexDescriptorImpl.IndexDescriptorImpl(String,boolean,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.MergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.impl.sql.execute.IndexChanger.insertForUpdate(ExecRow,RowLocation), java.engine.org.apache.derby.impl.store.access.sort.UniqueWithDuplicateNullsMergeSort.compare(DataValueDescriptor[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,int[],boolean[],int), java.engine.org.apache.derby.impl.store.access.sort.ExternalSortFactory.createSort(TransactionController,int,Properties,DataValueDescriptor[],ColumnOrdering,SortObserver,boolean,long,int), java.engine.org.apache.derby.impl.store.access.btree.index.B2IFactory.createConglomerate(TransactionManager,int,long,DataValueDescriptor[],ColumnOrdering[],int[],Properties,int), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.initSystemIndexVariables(DataDescriptorGenerator,TabInfoImpl,int), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.CreateIndexConstantAction(boolean,boolean,boolean,String,String,String,String,UUID,String[],boolean[],boolean,UUID,Properties), java.engine.org.apache.derby.iapi.sql.dictionary.IndexRowGenerator.IndexRowGenerator(String,boolean,boolean,int[],boolean[],int)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.initialize()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommand(String)=apache_derby,5318,6129.0,6118.0,6131.0,[java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster(String,String,String,int,String,int,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runLoad(String,String,String,String,int,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startSlave(String,String,String,int,String,int,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startMaster_ij(String,String,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.Utils.rmFiles(File,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.Utils.cleanDir(String,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.run(), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.initMaster(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.initSlave(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommand(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommandRemotely(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.runUserCommandRemotely(String,String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.startSlave_ij(String,String,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver(String,String,String,String,String,int,String), java.testing.org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationRun.failOver_ij(String,String,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxUserNameLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.Clob.convertFromAsciiToCharacterStream()=apache_derby,1519,1853.0,1519.0,3116.0,[java.client.org.apache.derby.client.am.Clob.Clob(Agent,java.io.InputStream,String,int), java.client.org.apache.derby.client.am.PreparedStatement.setAsciiStream(int,InputStream), java.client.org.apache.derby.client.am.PreparedStatement.setAsciiStream(int,java.io.InputStream,long), java.client.org.apache.derby.client.am.ResultSet.updateAsciiStream(int,InputStream), java.client.org.apache.derby.client.am.ResultSet.updateAsciiStream(int,java.io.InputStream,int), java.client.org.apache.derby.client.am.Clob.Clob(Agent,java.io.InputStream,String)]
java.engine.org.apache.derby.impl.sql.compile.CreateTableNode.makeConstantAction()=apache_derby,3266,1853.0,3766.0,4620.0,[]
java.client.org.apache.derby.client.am.ResultSet.getLong(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.engine.org.apache.derby.impl.sql.compile.Predicate.getSourceInList(boolean)=apache_derby,47,1853.0,38.0,2655.0,[java.engine.org.apache.derby.impl.sql.compile.PredicateList.useful(Optimizable,ConglomerateDescriptor), java.engine.org.apache.derby.impl.sql.compile.PredicateList.orderUsefulPredicates(Optimizable,ConglomerateDescriptor,boolean,boolean,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.pushExpressionsIntoSelect(SelectNode,boolean), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateInListValues(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.PredicateList.generateSetColumn(ExpressionClassBuilder,MethodBuilder,int,Predicate,Optimizable,LocalField,boolean), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.compile.HashJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean), java.engine.org.apache.derby.impl.sql.compile.NestedLoopJoinStrategy.getScanArgs(TransactionController,MethodBuilder,Optimizable,OptimizablePredicateList,OptimizablePredicateList,ExpressionClassBuilderInterface,int,MethodBuilder,int,int,int,boolean,int,int,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.ownUpdatesAreVisible(int)=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxRowSize()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsCatalogsInPrivilegeDefinitions()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.jdbc.TemporaryClob.getReader(long)=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.engine.org.apache.derby.iapi.types.SQLTimestamp.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.drda.org.apache.derby.impl.drda.DRDAStatement.prepare(String)=apache_derby,5459,1.0,6233.0,6307.0,[java.drda.org.apache.derby.impl.drda.DRDAConnThread.processCommands()]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.LOBLocatorReleaseTest(String)=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExtraNameCharacters()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.PiggyBackedSessionData(EngineConnection)=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.ClientPooledConnection.isStatementPoolingEnabled()=apache_derby,3329,1853.0,3837.0,4054.0,[java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.ClientPooledConnection.createLogicalConnection()]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.selectFootSoldiers()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnNameLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.jdbc.TemporaryClob.getInternalReader(long)=apache_derby,3825,4614.0,4507.0,4616.0,[java.engine.org.apache.derby.impl.jdbc.EmbedClob.getSubString(long,int), java.engine.org.apache.derby.impl.jdbc.EmbedClob.position(String,long)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testBuiltins()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.Connection.prepareDynamicCatalogQuery(String)=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.client.org.apache.derby.client.am.Statement.resetUserControllableAttributes()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.client.org.apache.derby.client.ClientXAConnection40.removeStatementEventListener(StatementEventListener)=apache_derby,1246,1853.0,1255.0,1265.0,[java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientDataSource,String,String), java.client.org.apache.derby.client.ClientXAConnection40.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.net.NetConnection.initialize(String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientDataSource,boolean), java.client.org.apache.derby.client.ClientXAConnection40.ClientXAConnection40(ClientXADataSource,org.apache.derby.client.net.NetLogWriter,String,String), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.am.Connection.reset_(LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetXAConnection.createNetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetXAConnection.NetXAConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.ClientPooledConnection.getNetXAConnection(ClientDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.Connection.initConnection(org.apache.derby.client.am.LogWriter,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,boolean,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.client.am.Connection.Connection(org.apache.derby.client.am.LogWriter,String,String,org.apache.derby.jdbc.ClientDataSource), java.client.org.apache.derby.jdbc.ClientConnectionPoolDataSource.getPooledConnectionX(LogWriter,ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String), java.client.org.apache.derby.client.net.NetXAConnection40.NetXAConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.jdbc.ClientXADataSource40.getXAConnection(String,String), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String,int), java.client.org.apache.derby.client.ClientPooledConnection.ClientPooledConnection(ClientDataSource,org.apache.derby.client.am.LogWriter,String,String), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection40.NetConnection40(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.am.LogWriter.traceConnectEntry(ClientDataSource), java.client.org.apache.derby.client.ClientPooledConnection40.getNetXAConnection(ClientBaseDataSource,NetLogWriter,String,String,int), java.client.org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectResetEntry(Object,LogWriter,String,ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource), java.client.org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.reset_(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.checkResetPreconditions(org.apache.derby.client.am.LogWriter,String,String,ClientDataSource), java.client.org.apache.derby.client.net.NetConnection.resetNetConnection(org.apache.derby.client.am.LogWriter,org.apache.derby.jdbc.ClientDataSource,boolean), java.client.org.apache.derby.client.ClientPooledConnection40.ClientPooledConnection40(ClientBaseDataSource,org.apache.derby.client.am.LogWriter,String,String)]
java.engine.org.apache.derby.iapi.types.SQLBinary.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getDatabaseMajorVersion()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.fillByteHolder()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.assertInvalid(Clob)=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics.getStatementExecutionPlanText(int)=apache_derby,4087,3021.0,4817.0,5030.0,[java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpA(String,String), java.engine.org.apache.derby.iapi.util.StringUtil.ensureIndent(String,int), java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpC(String,String)]
java.client.org.apache.derby.client.am.Connection.markClosedForReuse(boolean)=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.engine.org.apache.derby.impl.sql.compile.SelectNode.hasWindows()=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.testDerby48SelfLockingRecovery()=apache_derby,48,4350.0,43.0,4352.0,[java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.suite(), java.testing.org.apache.derbyTesting.functionTests.tests.lang.LazyDefaultSchemaCreationTest.tearDown(), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndexMinion(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.getDescriptorViaIndex(int,ExecIndexRow,ScanQualifier[][],TabInfoImpl,TupleDescriptor,List,boolean), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(String,TransactionController), java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl.locateSchemaRow(UUID,TransactionController), java.testing.org.apache.derbyTesting.junit.BaseTestCase.fail(String,Exception), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.getSchemaDescriptorForCreate(DataDictionary,Activation,String)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsSavepoints()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.GenericParameter.getClone(GenericParameterValueSet)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.getTopLevelSQLSessionContext()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.ColumnMetaData.isParameterModeGuessedAsAnInput(int)=apache_derby,5306,1853.0,6102.0,6128.0,[java.client.org.apache.derby.client.am.ColumnMetaData.isCompatibleDriverTypes(int,int), java.client.org.apache.derby.jdbc.ClientBaseDataSource.parseShort(String,short)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsStatementPooling()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.iapi.types.CollatorSQLChar.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalConnection40.createSQLXML()=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsANSI92FullSQL()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.net.NetConnection.serverSupportsLocators()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testCompressWhileScanning()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.engine.org.apache.derby.iapi.types.SQLDouble.getClone()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsMixedCaseIdentifiers()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.ResultSet.getInt(int)=apache_derby,5090,1853.0,5896.0,6159.0,[java.client.org.apache.derby.client.am.ResultSet.getDate(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getBigDecimal(int,int), java.client.org.apache.derby.client.am.ResultSet.closeX(), java.engine.org.apache.derby.impl.jdbc.LOBOutputStream.write(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.LOBInputStream.read(byte[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUtf8Writer.write(char[],int,int), java.client.org.apache.derby.client.am.ResultSet.getTime(int,Calendar), java.client.org.apache.derby.client.am.ResultSet.getTimestamp(int,Calendar)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCatalogNameLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.Connection.readCloseStatements()=apache_derby,210,1853.0,305.0,1041.0,[java.client.org.apache.derby.client.am.Connection.createStatementX(int,int,int), java.client.org.apache.derby.client.am.Connection.prepareStatementX(String,int,int,int,int,String[]), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.am.Connection.prepareCallX(String,int,int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.SecureServerTest.authenticationFailure()=apache_derby,2378,2486.0,2524.0,2561.0,[]
java.client.org.apache.derby.client.net.NetDatabaseMetaData.serverSupportsSessionDataCaching()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.setUser(String)=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxCharLiteralLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsLimitedOuterJoins()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.WindowReferenceNode.init(Object)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getTotalNumberOfIndexes()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.usePreTenFiveHdrFormat()=apache_derby,4543,4770.0,5240.0,5241.0,[java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(ObjectOutput,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(ObjectOutput,long), java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long), java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)]
java.engine.org.apache.derby.iapi.types.DataType.cloneHolder()=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxColumnsInIndex()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getRowIdLifetime()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.BlobTest(String)=apache_derby,1180,1853.0,1156.0,1293.0,[java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.BlobTest.testFreeNotImplemented(), java.client.org.apache.derby.client.am.LogicalConnection40.LogicalConnection40(Connection,ClientPooledConnection), java.client.org.apache.derby.client.am.LogicalConnection40.createQueryObject(Class), java.client.org.apache.derby.client.am.LogicalConnection40.setClientInfo(String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNString2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getNClob2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML1(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_getSQLXML2(), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.startTestResultSetMethods(Connection,PreparedStatement,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.jdbc4.TestResultSetMethods.t_updateSQLXML2()]
java.engine.org.apache.derby.iapi.types.UserType.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxTableNameLength()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.engine.org.apache.derby.impl.sql.compile.CompilerContextImpl.addRequiredColumnPriv(ColumnDescriptor)=apache_derby,3266,1853.0,3766.0,4620.0,[]
java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.testScrollableUpdateWithLocators()=apache_derby,3571,1853.0,4209.0,4233.0,[java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.scrollableTest(String,int), java.client.org.apache.derby.client.am.Statement.completeOpenQuery(Sqlca,ResultSet), java.testing.org.apache.derbyTesting.functionTests.tests.derbynet.LOBLocatorReleaseTest.decorateSQL(Statement), java.client.org.apache.derby.client.am.Statement.completeExecuteCallOpenQuery(Sqlca,ResultSet,ColumnMetaData,Section)]
java.engine.org.apache.derby.iapi.types.CollatorSQLLongvarchar.cloneValue(boolean)=apache_derby,4520,1853.0,5204.0,5223.0,[java.engine.org.apache.derby.impl.sql.execute.ScrollInsensitiveResultSet.addRowToHashTable(ExecRow,int,RowLocation,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.store.TestDiskHashtable.testLargeTable(DiskHashtable,int[],DataValueDescriptor[]), java.engine.org.apache.derby.iapi.types.SQLTimestamp.computeTimestampFunction(DataValueDescriptor,DataValueFactory), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.changedRow(ExecRow,RowLocation), java.engine.org.apache.derby.impl.sql.execute.InsertResultSet.makeIndexTemplate(FKInfo,ExecRow,ContextManager), java.engine.org.apache.derby.impl.store.access.btree.BTreeScan.initScanParams(DataValueDescriptor[],int,Qualifier,DataValueDescriptor[],int), java.engine.org.apache.derby.iapi.types.SQLTinyint.SQLTinyint(byte,boolean), java.engine.org.apache.derby.iapi.types.SQLSmallint.SQLSmallint(short,boolean), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.saveLastCusorKey(TableScanResultSet,ExecRow), java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet.notifyForUpdateCursor(DataValueDescriptor[],DataValueDescriptor[],RowLocation,TableScanResultSet), java.engine.org.apache.derby.iapi.types.XML.XML(SQLChar,int,boolean,boolean), java.engine.org.apache.derby.impl.store.raw.data.OverflowInputStream.OverflowInputStream(ByteHolder,BaseContainerHandle,long,int,RecordHandle), java.engine.org.apache.derby.impl.sql.execute.AlterTableConstantAction.insertIntoSorter(int,RowLocation), java.engine.org.apache.derby.iapi.types.SQLDate.computeDateFunction(DataValueDescriptor,DataValueFactory)]
java.engine.org.apache.derby.impl.jdbc.EmbedConnection.getCurrentSchemaName()=apache_derby,3192,1853.0,3631.0,4045.0,[java.client.org.apache.derby.client.am.Connection.resetConnection(LogWriter,String,ClientBaseDataSource,boolean), java.drda.org.apache.derby.impl.drda.PiggyBackedSessionData.getInstance(PiggyBackedSessionData,EngineConnection,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.locatorsUpdateCopy()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.tools.org.apache.derby.tools.dblook.go()=apache_derby,5357,1853.0,6153.0,6471.0,[java.engine.org.apache.derby.impl.store.raw.RawStore.backup(Transaction,File), java.engine.org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator.newFileInfoDescriptor(UUID,SchemaDescriptor,String,long), java.engine.org.apache.derby.impl.sql.execute.JarUtil.upgradeJar(TransactionController,FileInfoDescriptor), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalNameInternal(UUID,String,String,char,boolean,boolean), java.engine.org.apache.derby.impl.sql.execute.JarUtil.mkExternalName(UUID,String,String,char), java.engine.org.apache.derby.impl.sql.execute.JarUtil.add(final), java.engine.org.apache.derby.impl.db.BasicDatabase.getJarFile(String,String), java.engine.org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)]
java.client.org.apache.derby.client.am.Statement.initResetPreparedStatement()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.testing.org.apache.derbyTesting.junit.RuntimeStatisticsParser.findQualifiers()=apache_derby,4087,3021.0,4817.0,5030.0,[java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpA(String,String), java.engine.org.apache.derby.iapi.util.StringUtil.ensureIndent(String,int), java.engine.org.apache.derby.iapi.util.StringUtil.doRegExpC(String,String)]
java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read()=apache_derby,3934,1853.0,4657.0,4700.0,[java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.read(char[],int,int), java.engine.org.apache.derby.impl.jdbc.ClobUpdatableReader.ClobUpdatableReader(EmbedClob,long,long), java.engine.org.apache.derby.impl.jdbc.EmbedClob.getCharacterStream(long,long)]
java.client.org.apache.derby.client.net.NetConnection.doCloseStatementsOnClose_()=apache_derby,3441,1853.0,3987.0,4063.0,[java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,int,org.apache.derby.jdbc.ClientBaseDataSource,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean), java.client.org.apache.derby.client.net.NetConnection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,String,String,org.apache.derby.jdbc.ClientBaseDataSource,int,boolean,ClientPooledConnection), java.client.org.apache.derby.client.am.Connection.completeReset(boolean,boolean), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,int,String,int,String,java.util.Properties), java.client.org.apache.derby.client.net.NetConnection.NetConnection(NetLogWriter,org.apache.derby.jdbc.ClientBaseDataSource,String,String)]
java.engine.org.apache.derby.impl.sql.compile.SetOperatorNode.setResultToBooleanTrueNode(boolean)=apache_derby,3634,1853.0,4271.0,5080.0,[java.engine.org.apache.derby.impl.sql.compile.SelectNode.init(Object,Object,Object,Object,Object,Object,Object), java.engine.org.apache.derby.impl.sql.compile.SelectNode.addInlinedWindowDefinition(WindowList,WindowFunctionNode), java.engine.org.apache.derby.impl.sql.compile.SelectNode.preprocess(int,GroupByList,FromList), java.engine.org.apache.derby.impl.sql.compile.SelectNode.checkNoWindowFunctions(QueryTreeNode,String), java.engine.org.apache.derby.impl.sql.compile.ReplaceWindowFuncCallsWithCRVisitor.ReplaceWindowFuncCallsWithCRVisitor(ResultColumnList,int,Class), java.engine.org.apache.derby.impl.sql.execute.GenericResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.iapi.sql.execute.ResultSetFactory.getWindowResultSet(Activation,NoPutResultSet,GeneratedMethod,int,int,GeneratedMethod,double,double), java.engine.org.apache.derby.impl.sql.compile.SubqueryNode.preprocess(int,FromList,SubqueryList,PredicateList), java.engine.org.apache.derby.impl.sql.compile.ResultColumnList.generateCore(ExpressionClassBuilder,MethodBuilder,boolean), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyUpdateNode(String,String,ColumnDescriptorList), java.engine.org.apache.derby.impl.sql.compile.DeleteNode.getEmptyDeleteNode(String,String)]
java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.expectsCharCount()=apache_derby,4543,4770.0,5240.0,5241.0,[java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.generateInto(ObjectOutput,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(byte[],int,long), java.engine.org.apache.derby.iapi.types.ClobStreamHeaderGenerator.writeEOF(ObjectOutput,long), java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement.setCharacterStreamInternal(int,Reader,final,long), java.engine.org.apache.derby.impl.jdbc.EmbedResultSet.updateCharacterStreamInternal(int,Reader,final,long,String)]
java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.testSelectFromSimpleView()=apache_derby,3790,1.0,4481.0,6588.0,[java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.createAndInsertSimple(Connection,String,int), java.testing.org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest.insertSimple(Connection,String,int,int), java.engine.org.apache.derby.impl.sql.compile.FromBaseTable.estimateCost(OptimizablePredicateList,ConglomerateDescriptor,CostEstimate,Optimizer,RowOrdering), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.addStatistics(DataDictionary,IndexRowGenerator,long), java.engine.org.apache.derby.impl.sql.execute.CreateIndexConstantAction.executeConstantAction(Activation), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.updateIndexStatsMinion(LanguageConnectionContext,TableDescriptor,ConglomerateDescriptor[],boolean), java.engine.org.apache.derby.impl.services.daemon.IndexStatisticsDaemonImpl.IndexStatisticsDaemonImpl(HeaderPrintWriter,boolean,String,Database,String,String), java.engine.org.apache.derby.iapi.sql.dictionary.TableDescriptor.getQualifiedNumberOfIndexes(int,boolean)]
java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getMaxConnections()=apache_derby,3431,1853.0,3981.0,4350.0,[java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getImportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getPrimaryKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getCrossReference(String,String,String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getExportedKeys(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsResultSetConcurrency(int,int), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedures(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getProcedureColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTables(String,String,String,String[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getColumnPrivileges(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getTablePrivileges(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getVersionColumns(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.LogicalDatabaseMetaData40(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getSchemas(String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctionColumns(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData40.getFunctions(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getUDTs(String,String,String,int[]), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getAttributes(String,String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTypes(String,String,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.getSuperTables(String,String,String), java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.StatementPoolingTest.assertClassName(Object,String), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.LogicalDatabaseMetaData(LogicalConnection,LogWriter), java.client.org.apache.derby.client.am.LogicalDatabaseMetaData.supportsConvert(int,int)]
java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.testInvokersRights()=apache_derby,4551,1853.0,5256.0,5382.0,[java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.generateSetupNestedSessionContext(ActivationClassBuilder,MethodBuilder,boolean,String), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.authorize(Activation,int), java.engine.org.apache.derby.impl.sql.conn.GenericAuthorizer.GenericAuthorizer(String,LanguageConnectionContext), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.findRoleUsage(Activation,StatementPermission), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeConstraintDependenciesOnPrivileges(Activation,Dependent,UUID,ProviderInfo[]), java.engine.org.apache.derby.iapi.sql.dictionary.StatementRoutinePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementColumnPermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean), java.testing.org.apache.derbyTesting.functionTests.tests.lang.RoutinesDefinersRightsTest.decorateSQL(Statement), java.engine.org.apache.derby.impl.sql.execute.TablePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo.executeGrantRevoke(Activation,boolean,List), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.setupNestedSessionContext(Activation,boolean,String), java.engine.org.apache.derby.iapi.sql.conn.LanguageConnectionContext.roleIsSettable(Activation,String), java.engine.org.apache.derby.impl.sql.compile.CreateAliasNode.init(Object,Object,Object,Object,Object,Object), java.testing.org.apache.derbyTesting.junit.JDBC.assertCurrentUser(Connection,String), java.engine.org.apache.derby.impl.sql.conn.SQLSessionContextImpl.SQLSessionContextImpl(SchemaDescriptor,String), java.engine.org.apache.derby.impl.sql.compile.StaticMethodCallNode.resolveRoutine(FromList,SubqueryList,Vector,SchemaDescriptor), java.engine.org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext.setupSessionContextMinion(Activation,boolean), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.generateExpression(ExpressionClassBuilder,MethodBuilder), java.engine.org.apache.derby.impl.sql.compile.SpecialFunctionNode.bindExpression(FromList,SubqueryList,Vector), java.engine.org.apache.derby.catalog.types.RoutineAliasInfo.RoutineAliasInfo(String,int,String[],TypeDescriptor[],int[],int,short,short,boolean,boolean,TypeDescriptor), java.engine.org.apache.derby.iapi.sql.dictionary.StatementSchemaPermission.check(LanguageConnectionContext,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.check(LanguageConnectionContext,String,boolean,Activation), java.engine.org.apache.derby.iapi.sql.dictionary.StatementTablePermission.hasPermissionOnTable(LanguageConnectionContext,Activation,String,boolean,ExecPreparedStatement), java.engine.org.apache.derby.impl.sql.execute.DDLConstantAction.storeViewTriggerDependenciesOnPrivileges(Activation,Dependent)]
